<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>hexo(二)：next主题使用</title>
    <url>/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/hexo(%E4%BA%8C)%EF%BC%9Anext%E4%B8%BB%E9%A2%98%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h2 id="1-next主题安装"><a href="#1-next主题安装" class="headerlink" title="1.next主题安装"></a>1.next主题安装</h2><p>进入博客目录,然后从Github克隆到themes/next</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd llnpython</span><br><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;hexo-theme-next themes&#x2F;next</span><br></pre></td></tr></table></figure>
<ul>
<li>编辑主配置文件blog/_config.yml选择next主题</li>
</ul>
<h2 id="添加分类和标签"><a href="#添加分类和标签" class="headerlink" title="添加分类和标签"></a>添加分类和标签</h2><h3 id="创建“标签”选项"><a href="#创建“标签”选项" class="headerlink" title="创建“标签”选项"></a>创建“标签”选项</h3><h4 id="生成“标签”页并添加tpye属性"><a href="#生成“标签”页并添加tpye属性" class="headerlink" title="生成“标签”页并添加tpye属性"></a>生成“标签”页并添加tpye属性</h4><p>打开命令行，进入博客所在文件夹。执行命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new page tags</span><br></pre></td></tr></table></figure>
<p>成功后会提示：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">INFO  Created: ~&#x2F;Users&#x2F;kevin&#x2F;PycharmProjects&#x2F;llnpython&#x2F;source&#x2F;tags&#x2F;index.md</span><br></pre></td></tr></table></figure>
<p>根据上面的路径，找到index.md这个文件，打开后默认内容是这样的：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">---</span><br><span class="line">title: 标签</span><br><span class="line">date: 2020-06-06 14:22:08</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<p>添加type: “tags”到内容中，添加后是这样的：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">---</span><br><span class="line">title: 文章分类</span><br><span class="line">date: 2017-05-27 13:47:40</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<h4 id="给文章添加“tags”属性"><a href="#给文章添加“tags”属性" class="headerlink" title="给文章添加“tags”属性"></a>给文章添加“tags”属性</h4><p>打开需要添加标签的文章，为其添加tags属性。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">---</span><br><span class="line">title: hexo的next主题使用</span><br><span class="line">categories: </span><br><span class="line">- hexo</span><br><span class="line">tags: </span><br><span class="line">- hexo</span><br><span class="line">- 个人博客</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<p>至此，成功给文章添加分类，点击首页的“标签”可以看到该标签下的所有文章。当然，只有添加了tags: xxx的文章才会被收录到首页的“标签”中。</p>
<h2 id="文章置顶功能"><a href="#文章置顶功能" class="headerlink" title="文章置顶功能"></a>文章置顶功能</h2><h4 id="置顶功能"><a href="#置顶功能" class="headerlink" title="置顶功能"></a>置顶功能</h4><p>修改 hero-generator-index 插件，把文件：node_modules/hexo-generator-index/lib/generator.js 内的代码替换为：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="meta">'use strict'</span>;</span><br><span class="line"><span class="keyword">var</span> pagination = <span class="built_in">require</span>(<span class="string">'hexo-pagination'</span>);</span><br><span class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="keyword">function</span>(<span class="params">locals</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> config = <span class="keyword">this</span>.config;</span><br><span class="line">  <span class="keyword">var</span> posts = locals.posts;</span><br><span class="line">    posts.data = posts.data.sort(<span class="function"><span class="keyword">function</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(a.top &amp;&amp; b.top) &#123; <span class="comment">// 两篇文章top都有定义</span></span><br><span class="line">            <span class="keyword">if</span>(a.top == b.top) <span class="keyword">return</span> b.date - a.date; <span class="comment">// 若top值一样则按照文章日期降序排</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">return</span> b.top - a.top; <span class="comment">// 否则按照top值降序排</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(a.top &amp;&amp; !b.top) &#123; <span class="comment">// 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233）</span></span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(!a.top &amp;&amp; b.top) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> b.date - a.date; <span class="comment">// 都没定义按照文章日期降序排</span></span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="keyword">var</span> paginationDir = config.pagination_dir || <span class="string">'page'</span>;</span><br><span class="line">  <span class="keyword">return</span> pagination(<span class="string">''</span>, posts, &#123;</span><br><span class="line">    perPage: config.index_generator.per_page,</span><br><span class="line">    layout: [<span class="string">'index'</span>, <span class="string">'archive'</span>],</span><br><span class="line">    format: paginationDir + <span class="string">'/%d/'</span>,</span><br><span class="line">    data: &#123;</span><br><span class="line">      __index: <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>在文章中添加 top 值，数值越大文章越靠前，如</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">---</span><br><span class="line">title: hexo(二)：next主题使用</span><br><span class="line">categories: </span><br><span class="line">- hexo</span><br><span class="line"></span><br><span class="line">tags: </span><br><span class="line">- hexo</span><br><span class="line">- 个人博客</span><br><span class="line">top: 100</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<h4 id="设置置顶标志"><a href="#设置置顶标志" class="headerlink" title="设置置顶标志"></a>设置置顶标志</h4><p>打开\themes\your theme\layout_macro\post.swig，找到<div class=“post-meta”>下面插入一下代码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% if post.top %&#125;</span><br><span class="line">    &lt;i class&#x3D;&quot;fa fa-thumb-tack&quot;&gt;&lt;&#x2F;i&gt;</span><br><span class="line">    &lt;font color&#x3D;&quot;RED&quot;&gt;置顶&lt;&#x2F;font&gt;</span><br><span class="line">    &lt;span class&#x3D;&quot;post-meta-divider&quot;&gt;|&lt;&#x2F;span&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>
<h2 id="添加点击爱心效果"><a href="#添加点击爱心效果" class="headerlink" title="添加点击爱心效果"></a>添加点击爱心效果</h2><h4 id="创建js文件"><a href="#创建js文件" class="headerlink" title="创建js文件"></a>创建js文件</h4><p>在/themes/next/source/js/src下新建文件clicklove.js，接着把该代码拷贝粘贴到clicklove.js文件中。<br>代码如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">!<span class="function"><span class="keyword">function</span>(<span class="params">e,t,a</span>)</span>&#123;<span class="function"><span class="keyword">function</span> <span class="title">n</span>(<span class="params"></span>)</span>&#123;c(<span class="string">".heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;"</span>),o(),r()&#125;<span class="function"><span class="keyword">function</span> <span class="title">r</span>(<span class="params"></span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> e=<span class="number">0</span>;e&lt;d.length;e++)d[e].alpha&lt;=<span class="number">0</span>?(t.body.removeChild(d[e].el),d.splice(e,<span class="number">1</span>)):(d[e].y--,d[e].scale+=<span class="number">.004</span>,d[e].alpha-=<span class="number">.013</span>,d[e].el.style.cssText=<span class="string">"left:"</span>+d[e].x+<span class="string">"px;top:"</span>+d[e].y+<span class="string">"px;opacity:"</span>+d[e].alpha+<span class="string">";transform:scale("</span>+d[e].scale+<span class="string">","</span>+d[e].scale+<span class="string">") rotate(45deg);background:"</span>+d[e].color+<span class="string">";z-index:99999"</span>);requestAnimationFrame(r)&#125;<span class="function"><span class="keyword">function</span> <span class="title">o</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> t=<span class="string">"function"</span>==<span class="keyword">typeof</span> e.onclick&amp;&amp;e.onclick;e.onclick=<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;t&amp;&amp;t(),i(e)&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">i</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> a=t.createElement(<span class="string">"div"</span>);a.className=<span class="string">"heart"</span>,d.push(&#123;<span class="attr">el</span>:a,<span class="attr">x</span>:e.clientX<span class="number">-5</span>,<span class="attr">y</span>:e.clientY<span class="number">-5</span>,<span class="attr">scale</span>:<span class="number">1</span>,<span class="attr">alpha</span>:<span class="number">1</span>,<span class="attr">color</span>:s()&#125;),t.body.appendChild(a)&#125;<span class="function"><span class="keyword">function</span> <span class="title">c</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> a=t.createElement(<span class="string">"style"</span>);a.type=<span class="string">"text/css"</span>;<span class="keyword">try</span>&#123;a.appendChild(t.createTextNode(e))&#125;<span class="keyword">catch</span>(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName(<span class="string">"head"</span>)[<span class="number">0</span>].appendChild(a)&#125;<span class="function"><span class="keyword">function</span> <span class="title">s</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span><span class="string">"rgb("</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">","</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">","</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">")"</span>&#125;<span class="keyword">var</span> d=[];e.requestAnimationFrame=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;setTimeout(e,<span class="number">1e3</span>/<span class="number">60</span>)&#125;&#125;(),n()&#125;(<span class="built_in">window</span>,<span class="built_in">document</span>);</span><br></pre></td></tr></table></figure>

<h4 id="修改-layout-swig"><a href="#修改-layout-swig" class="headerlink" title="修改_layout.swig"></a>修改_layout.swig</h4><p>在\themes\next\layout_layout.swig文件末尾添加：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- 页面点击小红心 --&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;&#x2F;js&#x2F;src&#x2F;clicklove.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>
<h2 id="修改文章底部的那个带-号的标签"><a href="#修改文章底部的那个带-号的标签" class="headerlink" title="修改文章底部的那个带#号的标签"></a>修改文章底部的那个带#号的标签</h2><p>实现效果图</p>
<p><img src="https://upload-images.jianshu.io/upload_images/5312266-0934c352ffd7d783.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/94/format/web" alt=""></p>
<p>具体实现方法:</p>
<p>修改模板 /themes/next/layout/_macro/post.swig，搜索 rel=”tag”&gt;#，将 # 换成</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;i class&#x3D;&quot;fa fa-tag&quot;&gt;&lt;&#x2F;i&gt;</span><br></pre></td></tr></table></figure>
<h2 id="代码块添加复制功能"><a href="#代码块添加复制功能" class="headerlink" title="代码块添加复制功能"></a>代码块添加复制功能</h2><h2 id="博客加上萌萌的"><a href="#博客加上萌萌的" class="headerlink" title="博客加上萌萌的"></a>博客加上萌萌的</h2><p>效果如下图<br><img src="http://qbt5sd2vm.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202020-06-12%20%E4%B8%8B%E5%8D%885.54.47.png" alt=""></p>
<p>首先安装插件，根目录命令行输入npm install –save hexo-helper-live2d</p>
<p>主题配置文件最下方添加如下代码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Live2D</span><br><span class="line">## https:&#x2F;&#x2F;github.com&#x2F;xiazeyu&#x2F;live2d-widget.js</span><br><span class="line">## https:&#x2F;&#x2F;l2dwidget.js.org&#x2F;docs&#x2F;class&#x2F;src&#x2F;index.js~L2Dwidget.html#instance-method-init</span><br><span class="line">live2d:</span><br><span class="line">  model:</span><br><span class="line">    scale: 1</span><br><span class="line">    hHeadPos: 0.5</span><br><span class="line">    vHeadPos: 0.618</span><br><span class="line">  display:</span><br><span class="line">    superSample: 2</span><br><span class="line">    width: 150</span><br><span class="line">    height: 300</span><br><span class="line">    position: right</span><br><span class="line">    hOffset: 0</span><br><span class="line">    vOffset: -20</span><br><span class="line">  mobile:</span><br><span class="line">    show: true</span><br><span class="line">    scale: 0.5</span><br><span class="line">  react:</span><br><span class="line">    opacityDefault: 0.7</span><br><span class="line">    opacityOnHover: 0.2</span><br></pre></td></tr></table></figure>
<h2 id="修改主题页面布局为圆角"><a href="#修改主题页面布局为圆角" class="headerlink" title="修改主题页面布局为圆角"></a>修改主题页面布局为圆角</h2><p>打开/themes/next/source/css/_variables/custom.styl文件，复制粘贴以下代码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 修改主题页面布局为圆角</span><br><span class="line">&#x2F;&#x2F; Variables of Gemini scheme</span><br><span class="line">&#x2F;&#x2F; &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">@import &quot;Pisces.styl&quot;;</span><br><span class="line">&#x2F;&#x2F; Settings for some of the most global styles.</span><br><span class="line">&#x2F;&#x2F; --------------------------------------------------</span><br><span class="line">$body-bg-color &#x3D; #eee</span><br><span class="line">&#x2F;&#x2F; Borders.</span><br><span class="line">&#x2F;&#x2F; --------------------------------------------------</span><br><span class="line">$box-shadow-inner &#x3D; 0 2px 2px 0 rgba(0,0,0,.12), 0 3px 1px -2px rgba(0,0,0,.06), 0 1px 5px 0 rgba(0,0,0,.12)</span><br><span class="line">$box-shadow &#x3D; 0 2px 2px 0 rgba(0,0,0,.12), 0 3px 1px -2px rgba(0,0,0,.06), 0 1px 5px 0 rgba(0,0,0,.12), 0 -1px .5px 0 rgba(0,0,0,.09)</span><br><span class="line">$border-radius-inner &#x3D; initial</span><br><span class="line">$border-radius &#x3D; initial</span><br><span class="line">$border-radius-inner &#x3D; 15px 15px 15px 15px;</span><br><span class="line">$border-radius &#x3D; 15px;</span><br></pre></td></tr></table></figure>
<h2 id="canvas粒子时钟"><a href="#canvas粒子时钟" class="headerlink" title="canvas粒子时钟"></a>canvas粒子时钟</h2><p>1.在/themes/next/layout/_custom/目录下，新建clock.swig文件，内容如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div style&#x3D;&quot;text-align: center;&quot;&gt;</span><br><span class="line">  &lt;canvas id&#x3D;&quot;canvas&quot; style&#x3D;&quot;width:60%;&quot;&gt;当前浏览器不支持canvas，请更换浏览器后再试&lt;&#x2F;canvas&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">(function()&#123;</span><br><span class="line"></span><br><span class="line">   var digit&#x3D;</span><br><span class="line">    [</span><br><span class="line">        [</span><br><span class="line">            [0,0,1,1,1,0,0],</span><br><span class="line">            [0,1,1,0,1,1,0],</span><br><span class="line">            [1,1,0,0,0,1,1],</span><br><span class="line">            [1,1,0,0,0,1,1],</span><br><span class="line">            [1,1,0,0,0,1,1],</span><br><span class="line">            [1,1,0,0,0,1,1],</span><br><span class="line">            [1,1,0,0,0,1,1],</span><br><span class="line">            [1,1,0,0,0,1,1],</span><br><span class="line">            [0,1,1,0,1,1,0],</span><br><span class="line">            [0,0,1,1,1,0,0]</span><br><span class="line">        ],&#x2F;&#x2F;0</span><br><span class="line">        [</span><br><span class="line">            [0,0,0,1,1,0,0],</span><br><span class="line">            [0,1,1,1,1,0,0],</span><br><span class="line">            [0,0,0,1,1,0,0],</span><br><span class="line">            [0,0,0,1,1,0,0],</span><br><span class="line">            [0,0,0,1,1,0,0],</span><br><span class="line">            [0,0,0,1,1,0,0],</span><br><span class="line">            [0,0,0,1,1,0,0],</span><br><span class="line">            [0,0,0,1,1,0,0],</span><br><span class="line">            [0,0,0,1,1,0,0],</span><br><span class="line">            [1,1,1,1,1,1,1]</span><br><span class="line">        ],&#x2F;&#x2F;1</span><br><span class="line">        [</span><br><span class="line">            [0,1,1,1,1,1,0],</span><br><span class="line">            [1,1,0,0,0,1,1],</span><br><span class="line">            [0,0,0,0,0,1,1],</span><br><span class="line">            [0,0,0,0,1,1,0],</span><br><span class="line">            [0,0,0,1,1,0,0],</span><br><span class="line">            [0,0,1,1,0,0,0],</span><br><span class="line">            [0,1,1,0,0,0,0],</span><br><span class="line">            [1,1,0,0,0,0,0],</span><br><span class="line">            [1,1,0,0,0,1,1],</span><br><span class="line">            [1,1,1,1,1,1,1]</span><br><span class="line">        ],&#x2F;&#x2F;2</span><br><span class="line">        [</span><br><span class="line">            [1,1,1,1,1,1,1],</span><br><span class="line">            [0,0,0,0,0,1,1],</span><br><span class="line">            [0,0,0,0,1,1,0],</span><br><span class="line">            [0,0,0,1,1,0,0],</span><br><span class="line">            [0,0,1,1,1,0,0],</span><br><span class="line">            [0,0,0,0,1,1,0],</span><br><span class="line">            [0,0,0,0,0,1,1],</span><br><span class="line">            [0,0,0,0,0,1,1],</span><br><span class="line">            [1,1,0,0,0,1,1],</span><br><span class="line">            [0,1,1,1,1,1,0]</span><br><span class="line">        ],&#x2F;&#x2F;3</span><br><span class="line">        [</span><br><span class="line">            [0,0,0,0,1,1,0],</span><br><span class="line">            [0,0,0,1,1,1,0],</span><br><span class="line">            [0,0,1,1,1,1,0],</span><br><span class="line">            [0,1,1,0,1,1,0],</span><br><span class="line">            [1,1,0,0,1,1,0],</span><br><span class="line">            [1,1,1,1,1,1,1],</span><br><span class="line">            [0,0,0,0,1,1,0],</span><br><span class="line">            [0,0,0,0,1,1,0],</span><br><span class="line">            [0,0,0,0,1,1,0],</span><br><span class="line">            [0,0,0,1,1,1,1]</span><br><span class="line">        ],&#x2F;&#x2F;4</span><br><span class="line">        [</span><br><span class="line">            [1,1,1,1,1,1,1],</span><br><span class="line">            [1,1,0,0,0,0,0],</span><br><span class="line">            [1,1,0,0,0,0,0],</span><br><span class="line">            [1,1,1,1,1,1,0],</span><br><span class="line">            [0,0,0,0,0,1,1],</span><br><span class="line">            [0,0,0,0,0,1,1],</span><br><span class="line">            [0,0,0,0,0,1,1],</span><br><span class="line">            [0,0,0,0,0,1,1],</span><br><span class="line">            [1,1,0,0,0,1,1],</span><br><span class="line">            [0,1,1,1,1,1,0]</span><br><span class="line">        ],&#x2F;&#x2F;5</span><br><span class="line">        [</span><br><span class="line">            [0,0,0,0,1,1,0],</span><br><span class="line">            [0,0,1,1,0,0,0],</span><br><span class="line">            [0,1,1,0,0,0,0],</span><br><span class="line">            [1,1,0,0,0,0,0],</span><br><span class="line">            [1,1,0,1,1,1,0],</span><br><span class="line">            [1,1,0,0,0,1,1],</span><br><span class="line">            [1,1,0,0,0,1,1],</span><br><span class="line">            [1,1,0,0,0,1,1],</span><br><span class="line">            [1,1,0,0,0,1,1],</span><br><span class="line">            [0,1,1,1,1,1,0]</span><br><span class="line">        ],&#x2F;&#x2F;6</span><br><span class="line">        [</span><br><span class="line">            [1,1,1,1,1,1,1],</span><br><span class="line">            [1,1,0,0,0,1,1],</span><br><span class="line">            [0,0,0,0,1,1,0],</span><br><span class="line">            [0,0,0,0,1,1,0],</span><br><span class="line">            [0,0,0,1,1,0,0],</span><br><span class="line">            [0,0,0,1,1,0,0],</span><br><span class="line">            [0,0,1,1,0,0,0],</span><br><span class="line">            [0,0,1,1,0,0,0],</span><br><span class="line">            [0,0,1,1,0,0,0],</span><br><span class="line">            [0,0,1,1,0,0,0]</span><br><span class="line">        ],&#x2F;&#x2F;7</span><br><span class="line">        [</span><br><span class="line">            [0,1,1,1,1,1,0],</span><br><span class="line">            [1,1,0,0,0,1,1],</span><br><span class="line">            [1,1,0,0,0,1,1],</span><br><span class="line">            [1,1,0,0,0,1,1],</span><br><span class="line">            [0,1,1,1,1,1,0],</span><br><span class="line">            [1,1,0,0,0,1,1],</span><br><span class="line">            [1,1,0,0,0,1,1],</span><br><span class="line">            [1,1,0,0,0,1,1],</span><br><span class="line">            [1,1,0,0,0,1,1],</span><br><span class="line">            [0,1,1,1,1,1,0]</span><br><span class="line">        ],&#x2F;&#x2F;8</span><br><span class="line">        [</span><br><span class="line">            [0,1,1,1,1,1,0],</span><br><span class="line">            [1,1,0,0,0,1,1],</span><br><span class="line">            [1,1,0,0,0,1,1],</span><br><span class="line">            [1,1,0,0,0,1,1],</span><br><span class="line">            [0,1,1,1,0,1,1],</span><br><span class="line">            [0,0,0,0,0,1,1],</span><br><span class="line">            [0,0,0,0,0,1,1],</span><br><span class="line">            [0,0,0,0,1,1,0],</span><br><span class="line">            [0,0,0,1,1,0,0],</span><br><span class="line">            [0,1,1,0,0,0,0]</span><br><span class="line">        ],&#x2F;&#x2F;9</span><br><span class="line">        [</span><br><span class="line">            [0,0,0,0,0,0,0],</span><br><span class="line">            [0,0,1,1,1,0,0],</span><br><span class="line">            [0,0,1,1,1,0,0],</span><br><span class="line">            [0,0,1,1,1,0,0],</span><br><span class="line">            [0,0,0,0,0,0,0],</span><br><span class="line">            [0,0,0,0,0,0,0],</span><br><span class="line">            [0,0,1,1,1,0,0],</span><br><span class="line">            [0,0,1,1,1,0,0],</span><br><span class="line">            [0,0,1,1,1,0,0],</span><br><span class="line">            [0,0,0,0,0,0,0]</span><br><span class="line">        ]&#x2F;&#x2F;:</span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">var canvas &#x3D; document.getElementById(&#39;canvas&#39;);</span><br><span class="line"></span><br><span class="line">if(canvas.getContext)&#123;</span><br><span class="line">    var cxt &#x3D; canvas.getContext(&#39;2d&#39;);</span><br><span class="line">    &#x2F;&#x2F;声明canvas的宽高</span><br><span class="line">    var H &#x3D; 100,W &#x3D; 700;</span><br><span class="line">    canvas.height &#x3D; H;</span><br><span class="line">    canvas.width &#x3D; W;</span><br><span class="line">    cxt.fillStyle &#x3D; &#39;#f00&#39;;</span><br><span class="line">    cxt.fillRect(10,10,50,50);</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F;存储时间数据</span><br><span class="line">    var data &#x3D; [];</span><br><span class="line">    &#x2F;&#x2F;存储运动的小球</span><br><span class="line">    var balls &#x3D; [];</span><br><span class="line">    &#x2F;&#x2F;设置粒子半径</span><br><span class="line">    var R &#x3D; canvas.height&#x2F;20-1;</span><br><span class="line">    (function()&#123;</span><br><span class="line">        var temp &#x3D; &#x2F;(\d)(\d):(\d)(\d):(\d)(\d)&#x2F;.exec(new Date());</span><br><span class="line">        &#x2F;&#x2F;存储时间数字，由十位小时、个位小时、冒号、十位分钟、个位分钟、冒号、十位秒钟、个位秒钟这7个数字组成</span><br><span class="line">        data.push(temp[1],temp[2],10,temp[3],temp[4],10,temp[5],temp[6]);</span><br><span class="line">    &#125;)();</span><br><span class="line"></span><br><span class="line">    &#x2F;*生成点阵数字*&#x2F;</span><br><span class="line">    function renderDigit(index,num)&#123;</span><br><span class="line">        for(var i &#x3D; 0; i &lt; digit[num].length; i++)&#123;</span><br><span class="line">            for(var j &#x3D; 0; j &lt; digit[num][i].length; j++)&#123;</span><br><span class="line">                if(digit[num][i][j] &#x3D;&#x3D; 1)&#123;</span><br><span class="line">                    cxt.beginPath();</span><br><span class="line">                    cxt.arc(14*(R+2)*index + j*2*(R+1)+(R+1),i*2*(R+1)+(R+1),R,0,2*Math.PI);</span><br><span class="line">                    cxt.closePath();</span><br><span class="line">                    cxt.fill();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;*更新时钟*&#x2F;</span><br><span class="line">    function updateDigitTime()&#123;</span><br><span class="line">        var changeNumArray &#x3D; [];</span><br><span class="line">        var temp &#x3D; &#x2F;(\d)(\d):(\d)(\d):(\d)(\d)&#x2F;.exec(new Date());</span><br><span class="line">        var NewData &#x3D; [];</span><br><span class="line">        NewData.push(temp[1],temp[2],10,temp[3],temp[4],10,temp[5],temp[6]);</span><br><span class="line">        for(var i &#x3D; data.length-1; i &gt;&#x3D;0 ; i--)&#123;</span><br><span class="line">            &#x2F;&#x2F;时间发生变化</span><br><span class="line">            if(NewData[i] !&#x3D;&#x3D; data[i])&#123;</span><br><span class="line">                &#x2F;&#x2F;将变化的数字值和在data数组中的索引存储在changeNumArray数组中</span><br><span class="line">                changeNumArray.push(i+&#39;_&#39;+(Number(data[i])+1)%10);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        &#x2F;&#x2F;增加小球</span><br><span class="line">        for(var i &#x3D; 0; i&lt; changeNumArray.length; i++)&#123;</span><br><span class="line">            addBalls.apply(this,changeNumArray[i].split(&#39;_&#39;));</span><br><span class="line">        &#125;</span><br><span class="line">        data &#x3D; NewData.concat();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;*更新小球状态*&#x2F;</span><br><span class="line">    function updateBalls()&#123;</span><br><span class="line">        for(var i &#x3D; 0; i &lt; balls.length; i++)&#123;</span><br><span class="line">            balls[i].stepY +&#x3D; balls[i].disY;</span><br><span class="line">            balls[i].x +&#x3D; balls[i].stepX;</span><br><span class="line">            balls[i].y +&#x3D; balls[i].stepY;</span><br><span class="line">            if(balls[i].x &gt; W + R || balls[i].y &gt; H + R)&#123;</span><br><span class="line">                balls.splice(i,1);</span><br><span class="line">                i--;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;*增加要运动的小球*&#x2F;</span><br><span class="line">    function addBalls(index,num)&#123;</span><br><span class="line">        var numArray &#x3D; [1,2,3];</span><br><span class="line">        var colorArray &#x3D;  [&quot;#3BE&quot;,&quot;#09C&quot;,&quot;#A6C&quot;,&quot;#93C&quot;,&quot;#9C0&quot;,&quot;#690&quot;,&quot;#FB3&quot;,&quot;#F80&quot;,&quot;#F44&quot;,&quot;#C00&quot;];</span><br><span class="line">        for(var i &#x3D; 0; i &lt; digit[num].length; i++)&#123;</span><br><span class="line">            for(var j &#x3D; 0; j &lt; digit[num][i].length; j++)&#123;</span><br><span class="line">                if(digit[num][i][j] &#x3D;&#x3D; 1)&#123;</span><br><span class="line">                    var ball &#x3D; &#123;</span><br><span class="line">                        x:14*(R+2)*index + j*2*(R+1)+(R+1),</span><br><span class="line">                        y:i*2*(R+1)+(R+1),</span><br><span class="line">                        stepX:Math.floor(Math.random() * 4 -2),</span><br><span class="line">                        stepY:-2*numArray[Math.floor(Math.random()*numArray.length)],</span><br><span class="line">                        color:colorArray[Math.floor(Math.random()*colorArray.length)],</span><br><span class="line">                        disY:1</span><br><span class="line">                    &#125;;</span><br><span class="line">                    balls.push(ball);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;*渲染*&#x2F;</span><br><span class="line">    function render()&#123;</span><br><span class="line">        &#x2F;&#x2F;重置画布宽度，达到清空画布的效果</span><br><span class="line">        canvas.height &#x3D; 100;</span><br><span class="line">        &#x2F;&#x2F;渲染时钟</span><br><span class="line">        for(var i &#x3D; 0; i &lt; data.length; i++)&#123;</span><br><span class="line">            renderDigit(i,data[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        &#x2F;&#x2F;渲染小球</span><br><span class="line">        for(var i &#x3D; 0; i &lt; balls.length; i++)&#123;</span><br><span class="line">            cxt.beginPath();</span><br><span class="line">            cxt.arc(balls[i].x,balls[i].y,R,0,2*Math.PI);</span><br><span class="line">            cxt.fillStyle &#x3D; balls[i].color;</span><br><span class="line">            cxt.closePath();</span><br><span class="line">            cxt.fill();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    clearInterval(oTimer);</span><br><span class="line">    var oTimer &#x3D; setInterval(function()&#123;</span><br><span class="line">        &#x2F;&#x2F;更新时钟</span><br><span class="line">        updateDigitTime();</span><br><span class="line">        &#x2F;&#x2F;更新小球状态</span><br><span class="line">        updateBalls();</span><br><span class="line">        &#x2F;&#x2F;渲染</span><br><span class="line">        render();</span><br><span class="line">    &#125;,50);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;)();</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>
<p>2.在/theme/next/layout/_macro/sidebar.swig中引用，可根据自己的偏好来设置</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% include &#39;..&#x2F;_custom&#x2F;clock.swig&#39; %&#125;</span><br></pre></td></tr></table></figure>

<h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h4 id="问题一：next主题侧边栏日志出现问题"><a href="#问题一：next主题侧边栏日志出现问题" class="headerlink" title="问题一：next主题侧边栏日志出现问题"></a>问题一：next主题侧边栏日志出现问题</h4><p>问题：日志出现Cannot GET /archives/%7C%7C%20list/问题</p>
<p>解决方法：</p>
<p>/layout/_macro/sidebar.swig文件中找到</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;a href&#x3D;&quot;&#123;&#123; url_for(theme.menu.archives).split(&#39;||&#39;)[0] | trim &#125;&#125;&quot;&gt;</span><br></pre></td></tr></table></figure>
<p>改成</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;a href&#x3D;&quot;&#123;&#123;url_for(theme.menu.archives.split(&#39;||&#39;)[0])| trim&#125;&#125;&quot;&gt;</span><br></pre></td></tr></table></figure>
<p>原因：url_for函数将||转码了</p>
<h4 id="问题二：Hexo-Next主题访问慢"><a href="#问题二：Hexo-Next主题访问慢" class="headerlink" title="问题二：Hexo Next主题访问慢"></a>问题二：Hexo Next主题访问慢</h4><p>解决方法：</p>
<p>在next主题的_config.yml里面</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Uri of fonts host. E.g. &#x2F;&#x2F;fonts.googleapis.com (Default)</span><br><span class="line">host:</span><br></pre></td></tr></table></figure>
<p>改为</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Uri of fonts host. E.g. &#x2F;&#x2F;fonts.googleapis.com (Default)</span><br><span class="line">host: &#x2F;&#x2F;fonts.lug.ustc.edu.cn # fonts.lug.ustc.edu.cn是中科大的源。</span><br></pre></td></tr></table></figure>
<h4 id="问题三：next主题的翻页按钮不正常显示问题"><a href="#问题三：next主题的翻页按钮不正常显示问题" class="headerlink" title="问题三：next主题的翻页按钮不正常显示问题"></a>问题三：next主题的翻页按钮不正常显示问题</h4><p>解决方法：</p>
<p>在themes\next\layout_partials\pagination.swig</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% if page.prev or page.next %&#125;</span><br><span class="line">  &lt;nav class&#x3D;&quot;pagination&quot;&gt;</span><br><span class="line">    &#123;&#123;</span><br><span class="line">      paginator(&#123;</span><br><span class="line">        prev_text: &#39;&lt;i class&#x3D;&quot;fa fa-angle-left&quot;&gt;&lt;&#x2F;i&gt;&#39;,</span><br><span class="line">        next_text: &#39;&lt;i class&#x3D;&quot;fa fa-angle-right&quot;&gt;&lt;&#x2F;i&gt;&#39;,</span><br><span class="line">        mid_size: 1</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;&#125;</span><br><span class="line">  &lt;&#x2F;nav&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>
<p>改成</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% if page.prev or page.next %&#125;</span><br><span class="line">  &lt;nav class&#x3D;&quot;pagination&quot;&gt;</span><br><span class="line">    &#123;&#123;</span><br><span class="line">      paginator(&#123;</span><br><span class="line">        prev_text: &#39;&lt;&#39;,</span><br><span class="line">        next_text: &#39;&gt;&#39;,</span><br><span class="line">        mid_size: 1</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;&#125;</span><br><span class="line">  &lt;&#x2F;nav&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>个人博客</tag>
      </tags>
  </entry>
  <entry>
    <title>面向对象和过程</title>
    <url>/01-python/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%92%8C%E9%9D%A2%E5%90%91%E8%BF%87%E7%A8%8B/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>由于之前没有好好学习，感觉对面向对象理解这块薄弱，所以决定重新学习一遍。一来加深印象，二来能学习更深层次的东西。</p>
<h2 id="1-面向过程"><a href="#1-面向过程" class="headerlink" title="1.面向过程"></a>1.面向过程</h2><h3 id="1-1-基本概念"><a href="#1-1-基本概念" class="headerlink" title="1.1 基本概念"></a>1.1 基本概念</h3><p>“面向过程”(Procedure Oriented)是一种以过程为中心的编程思想。就是分析出解决问题所需要的步骤，然后用函数把这些步骤一步一步实现，使用的时候一个一个依次调用就可以了。</p>
<h3 id="1-2-特点"><a href="#1-2-特点" class="headerlink" title="1.2 特点"></a>1.2 特点</h3><ul>
<li>模块话</li>
<li>流程化</li>
</ul>
<h3 id="1-3-优缺点"><a href="#1-3-优缺点" class="headerlink" title="1.3 优缺点"></a>1.3 优缺点</h3><ul>
<li>性能比面向对象高，因为类调用时需要实例化，开销比较大，比较消耗资源</li>
<li>没有面向对象易维护、易复用、易扩展</li>
</ul>
<h3 id="1-4-适用场景"><a href="#1-4-适用场景" class="headerlink" title="1.4 适用场景"></a>1.4 适用场景</h3><ul>
<li>简单的脚本开发</li>
<li>一次性开发任务</li>
</ul>
<h2 id="2-面向对象"><a href="#2-面向对象" class="headerlink" title="2.面向对象"></a>2.面向对象</h2><h3 id="2-1-基本概念"><a href="#2-1-基本概念" class="headerlink" title="2.1 基本概念"></a>2.1 基本概念</h3><p>面向对象是按人们认识客观世界的系统思维方式，把构成问题事务分解成各个对象，建立对象的目的不是为了完成一个步骤，而是为了描叙某个事物在整个解决问题的步骤中的行为。</p>
<h3 id="2-2-特点"><a href="#2-2-特点" class="headerlink" title="2.2 特点"></a>2.2 特点</h3><ul>
<li>抽象 </li>
<li>封装  </li>
<li>继承</li>
<li>多态<h3 id="2-3-优缺点"><a href="#2-3-优缺点" class="headerlink" title="2.3 优缺点"></a>2.3 优缺点</h3><blockquote>
<p>优点：</p>
<blockquote>
<p>易维护、易复用、易扩展、减少代码重复<br>可以设计出低耦合的系统，使系统更加灵活、更加易于维护</p>
</blockquote>
</blockquote>
</li>
</ul>
<blockquote>
<p>缺点：</p>
<blockquote>
<p>性能比面向过程低</p>
</blockquote>
</blockquote>
<h3 id="2-4-适用场景"><a href="#2-4-适用场景" class="headerlink" title="2.4 适用场景"></a>2.4 适用场景</h3><ul>
<li>复杂的程序</li>
<li>不断迭代和维护的</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">暂时性放这</span><br><span class="line">class Person:</span><br><span class="line">    def __init__(self, name: str, age: int, gender: str):</span><br><span class="line">        self.name &#x3D; name</span><br><span class="line">        self.age &#x3D; age</span><br><span class="line">        self.gender &#x3D; gender</span><br><span class="line">        self.live_val &#x3D; 100</span><br><span class="line">        self.arms &#x3D; Arms()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class Arms:</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    武器类，不能单独被使用</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    def rifle(self, p1: Person, p2: Person):</span><br><span class="line">        print(f&quot;&#123;p1.name&#125; 打了 &#123;p2.name&#125; 一枪, &#123;p2.name&#125; 还剩 &#123;p2.live_val - 20&#125;&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">p1 &#x3D; Person(&#39;kevin&#39;, 18, &quot;M&quot;)</span><br><span class="line">p2 &#x3D; Person(&#39;Dai&#39;, 17, &#39;F&#39;)</span><br><span class="line">p1.arms.rifle(p1, p2)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>python基础</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>面向对象</tag>
      </tags>
  </entry>
  <entry>
    <title>07-前端学习/基础/常用html标签</title>
    <url>/07-%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E5%9F%BA%E7%A1%80/%E5%B8%B8%E7%94%A8html%E6%A0%87%E7%AD%BE/</url>
    <content><![CDATA[<h2 id="1-标题"><a href="#1-标题" class="headerlink" title="1.标题"></a>1.标题</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>一级标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>二级标题<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>三级标题<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>四级标题<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h5</span>&gt;</span>五级标题<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h6</span>&gt;</span>六级标题<span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="2-列表"><a href="#2-列表" class="headerlink" title="2.列表"></a>2.列表</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 无序列表 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>无序列表<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 有序列表 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>有序列表<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 自定义列表 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dt</span>&gt;</span><span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="3-html块"><a href="#3-html块" class="headerlink" title="3.html块"></a>3.html块</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>块元素，表示一块内容，没有具体的语义。<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>行内元素，表示一行中的一小段内容，没有具体的语义。<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="4-含样式和语义的标签"><a href="#4-含样式和语义的标签" class="headerlink" title="4.含样式和语义的标签"></a>4.含样式和语义的标签</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">em</span>&gt;</span>行内元素，表示语气中的强调词<span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="5-段落标签"><a href="#5-段落标签" class="headerlink" title="5.段落标签"></a>5.段落标签</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="6-链接"><a href="#6-链接" class="headerlink" title="6.链接"></a>6.链接</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"xxxxx"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="7-图像"><a href="#7-图像" class="headerlink" title="7.图像"></a>7.图像</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"链接"</span> <span class="attr">alt</span>=<span class="string">"图像名称"</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="8"><a href="#8" class="headerlink" title="8."></a>8.</h2>]]></content>
  </entry>
  <entry>
    <title>docker(二)：Python基础镜像</title>
    <url>/docker%E5%AD%A6%E4%B9%A0/python%E5%9F%BA%E7%A1%80%E9%95%9C%E5%83%8F/</url>
    <content><![CDATA[<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">FROM</span> .......</span><br><span class="line"><span class="keyword">USER</span> root</span><br><span class="line"></span><br><span class="line"><span class="comment"># 清理文件夹</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> /bin/bash -c <span class="string">"rm -rf /home/mind"</span></span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> /bin/bash -c <span class="string">"mkdir -p /home/mind/model"</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment"># apt-get update配置</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> /bin/bash -c <span class="string">"rm /etc/apt/apt.conf.d/proxy"</span></span></span><br><span class="line"><span class="comment"># 清理apt-get update的第三方源</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> /bin/bash -c <span class="string">"rm /etc/apt/sources.list.d/*.list"</span></span></span><br><span class="line"><span class="comment"># 时间修改为当地时区，否则无法apt-update</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> /bin/bash -c <span class="string">"mkdir -p /usr/share/zoneinfo/Asia/"</span></span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> ./Shanghai /usr/share/zoneinfo/Asia/</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> /bin/bash -c <span class="string">"ln -sf /usr/share/zoneinfo/Asia/Shanghai /ect/localtime"</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装vim方便进容器内调试</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> /bin/bash -c <span class="string">"apt-get update"</span></span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> /bin/bash -c <span class="string">"apt-get install vim -y"</span></span></span><br><span class="line"><span class="comment"># 定时任务</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> /bin/bash -c <span class="string">"apt-get install cron"</span></span></span><br><span class="line"><span class="comment"># ifconfig</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> /bin/bash -c <span class="string">"apt-get install net-tools"</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装python依赖</span></span><br><span class="line"><span class="comment"># 当前用户root，因此pip应放在root下</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> /bin/bash -c <span class="string">"mkdir -p /root/.pip &amp;&amp; rm -rf /root/.pip/pip.conf"</span></span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> ./pip.conf /root/.pip/pip.conf</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> requirements.txt /root/requirements.txt</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> /bin/bash -c <span class="string">"cd /root &amp;&amp; pip install --upgrade pip &amp;&amp; pip install -r reuqirements.txt"</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动文件</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> ./run.sh /root/run.sh</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> /bin/bash -c <span class="string">"chmod 500 /root/run.sh"</span></span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> /bin/bash -c <span class="string">"umask 027"</span> &gt;&gt; /root/.bashrc</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 把项目拷贝到/home/mind/model</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定容器入口</span></span><br><span class="line"><span class="keyword">ENTRYPOINT</span><span class="bash"> [<span class="string">"/bin/bash"</span>,<span class="string">"/root/run.sh"</span>]</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>docker</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>基础镜像</tag>
      </tags>
  </entry>
  <entry>
    <title>docker(一)：docker基本命令</title>
    <url>/docker%E5%AD%A6%E4%B9%A0/docker%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h2 id="1-检查docker状态"><a href="#1-检查docker状态" class="headerlink" title="1. 检查docker状态"></a>1. 检查docker状态</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># 查看docker daemon的运行状态</span></span><br><span class="line">ps axf | grep docker</span><br><span class="line"><span class="section"># 查看各个容器信息</span></span><br><span class="line">docker info</span><br><span class="line"><span class="section"># 查看容器配置信息</span></span><br><span class="line">docker inspect 容器名</span><br><span class="line"><span class="section"># 查看容器状态</span></span><br><span class="line">docker ps</span><br><span class="line"><span class="section"># 查看资源状态：CPU、内存</span></span><br><span class="line">docker stats 容器名</span><br><span class="line"></span><br><span class="line">docker top 容器名</span><br><span class="line"><span class="section"># 查看容器日志</span></span><br><span class="line">docker logs -f 容器名</span><br><span class="line"><span class="section"># 查看挂载的卷</span></span><br><span class="line">docker volume ls</span><br><span class="line"><span class="section"># 查看挂载信息</span></span><br><span class="line">docker volume inspect 卷名</span><br><span class="line"><span class="section"># 拷贝文件到容器中---&gt;docker cp ./start.sh a375:/home/mind/model</span></span><br><span class="line">docker cp 主机文件目录 容器名:容器文件目录</span><br></pre></td></tr></table></figure>

<h2 id="2-启动docker"><a href="#2-启动docker" class="headerlink" title="2.启动docker"></a>2.启动docker</h2><h4 id="2-1方式一"><a href="#2-1方式一" class="headerlink" title="2.1方式一"></a>2.1方式一</h4><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># 启动docker</span></span><br><span class="line">sudo service docker start</span><br><span class="line"><span class="section"># 使docker开机启动</span></span><br><span class="line">sudo chkconfig docker on</span><br><span class="line"><span class="section"># 停止docker服务</span></span><br><span class="line">sudo service docker stop</span><br></pre></td></tr></table></figure>

<h4 id="2-2-方式二"><a href="#2-2-方式二" class="headerlink" title="2.2 方式二"></a>2.2 方式二</h4><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># 启动docker</span></span><br><span class="line">sudo systemctl start docker</span><br><span class="line"><span class="section"># 使docker开机启动</span></span><br><span class="line">sudo systemctl enable docker</span><br><span class="line"><span class="section"># 停止docker服务</span></span><br><span class="line">sudo systemctl stop docker</span><br></pre></td></tr></table></figure>

<h4 id="2-3-重启容器服务"><a href="#2-3-重启容器服务" class="headerlink" title="2.3 重启容器服务"></a>2.3 重启容器服务</h4><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># 重新拉起服务</span></span><br><span class="line">sudo systemctl daemon_reload</span><br><span class="line"><span class="section"># 重启docker</span></span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure>

<h4 id="2-4-建立docker用户组"><a href="#2-4-建立docker用户组" class="headerlink" title="2.4 建立docker用户组"></a>2.4 建立docker用户组</h4><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># 建立docker用户组</span></span><br><span class="line">sudo groupadd docker</span><br><span class="line"><span class="section"># 将当前用户加入docker用户组</span></span><br></pre></td></tr></table></figure>

<h2 id="3-列出镜像"><a href="#3-列出镜像" class="headerlink" title="3.列出镜像"></a>3.列出镜像</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># 搜索镜像centos -s N参数可以指定仅显示评价为N星以上的镜像</span></span><br><span class="line">docker search centos</span><br><span class="line"><span class="section"># 根据仓库名列出镜像</span></span><br><span class="line">docker images ubuntu</span><br><span class="line"><span class="section"># 列出已经下载下来的镜像</span></span><br><span class="line">docker images</span><br><span class="line"><span class="section"># 列出的特定的某个镜像</span></span><br><span class="line">docker images ubuntu:16.04</span><br><span class="line"><span class="section"># 显示悬挂镜像</span></span><br><span class="line">docker images -f dangling=true</span><br><span class="line"><span class="section"># 拉取镜像</span></span><br><span class="line">docker pull [Docker Registry地址]<span class="xml"><span class="tag">&lt;<span class="name">仓库名</span>&gt;</span></span>:<span class="xml"><span class="tag">&lt;<span class="name">标签</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<h2 id="4-操作镜像"><a href="#4-操作镜像" class="headerlink" title="4.操作镜像"></a>4.操作镜像</h2><h4 id="4-1-镜像基本操作"><a href="#4-1-镜像基本操作" class="headerlink" title="4.1 镜像基本操作"></a>4.1 镜像基本操作</h4><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># 从dockerfile构建镜像</span></span><br><span class="line">docker build -t 上下文路径/URL .</span><br><span class="line">docker build -t nginx:v3 .</span><br><span class="line"><span class="section">#  删除镜像</span></span><br><span class="line">docker rmi 镜像1 镜像2</span><br><span class="line">docker rmi centos  # 删除本地镜像</span><br><span class="line">docker rmi $(docker images -q redis) # 删除所有名为redis的镜像</span><br><span class="line">docker rmi $(docker images -q -f before=mongo:3.2) # 删除所有在mongo:3.2之前的镜像</span><br><span class="line"><span class="section"># 强制删除镜像</span></span><br><span class="line">docker image rm -f 镜像id</span><br><span class="line">sudo docker rmi -f <span class="code">`docker images|grep none|awk '&#123;print $3&#125;'`</span></span><br><span class="line"><span class="section"># 查看容器的存储层的改动</span></span><br><span class="line">docker diff 容器id/容器名</span><br><span class="line"><span class="section"># 查看对webserver的改动</span></span><br><span class="line">docker diff webserver</span><br><span class="line"><span class="section"># 查看镜像nginx:latest的历史构建记录</span></span><br><span class="line">docker history nginx:v2</span><br><span class="line"><span class="section"># 上传/下载镜像</span></span><br><span class="line"><span class="section">## 拉取nginx镜像，完整格式为：[username]/xxx:tag</span></span><br><span class="line">docker pull cloudman6/httpd:v1</span><br><span class="line"><span class="section">## 将镜像推送到Docker Hub，完整格式为：[username]/xxx:tag</span></span><br><span class="line">docker push cloudman5/httpd:v1</span><br><span class="line"><span class="section"># 标记镜像</span></span><br><span class="line"><span class="section">## 将ba58这个镜像重命名为192.068.7.26:5000/test:v1</span></span><br><span class="line">docker tag ba58 xxx.xxx.xxx.xxx:5000/test:v1</span><br><span class="line"><span class="section">## 上传镜像到私有镜像仓库</span></span><br><span class="line">docker push xxx.xxx.xxx.xxx:5000</span><br><span class="line"><span class="section">## 用curl查看仓库中的镜像</span></span><br><span class="line">curl https://xxx.xxx.xxx.xxx:5000/v1/search</span><br><span class="line"><span class="section"># 到另一台机器上下载镜像</span></span><br><span class="line">docker pull xxx.xxx.xxx.xxx:5000/test</span><br></pre></td></tr></table></figure>

<h4 id="4-2-导入-导出镜像文件"><a href="#4-2-导入-导出镜像文件" class="headerlink" title="4.2 导入/导出镜像文件"></a>4.2 导入/导出镜像文件</h4><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># 镜像保存为归档文件</span></span><br><span class="line"><span class="section">## 将容器保存为镜像 ---&gt; docker commit 容器名/容器id:标签</span></span><br><span class="line"><span class="section">## 将webserver容器保存为镜像nginx:v2</span></span><br><span class="line">docker commit --author "LiuLunNan<span class="xml"><span class="tag">&lt;<span class="name">xxxxx@gmail.com</span>&gt;</span></span>" --message "修改了默认网页" webserver nginx:v2 </span><br><span class="line"><span class="section">## 在一台机器上将镜像保存为归档文件</span></span><br><span class="line">docker save alpine|gizp &gt; alpine-latest.tar.gz</span><br><span class="line"><span class="section">## 在另一台机器上加载镜像</span></span><br><span class="line">docker load -i alpine-latest.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="section"># 导入镜像 --&gt; docker import 文件|URL|-仓库名:标签</span></span><br><span class="line"><span class="section">## 从rootfs压缩包导入，这条命令下载了xxxxx.tar.gz文件，并且作为根文件系统展开导入，并保存为镜像 openvz/ubuntu:14.04</span></span><br><span class="line">docker import https://xxxxx.tar.gz openvz/ubuntu:14.04</span><br><span class="line">`</span><br></pre></td></tr></table></figure>

<h2 id="5-容器操作"><a href="#5-容器操作" class="headerlink" title="5.容器操作"></a>5.容器操作</h2><h4 id="5-1-Docker容器操作"><a href="#5-1-Docker容器操作" class="headerlink" title="5.1 Docker容器操作"></a>5.1 Docker容器操作</h4><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># 容器运行/启动/终止</span></span><br><span class="line"><span class="section">## 运行容器</span></span><br><span class="line">docker run -d ubuntu:14.04/bin/sh -c "while true;do echo hello world;sleep 1;done"</span><br><span class="line"><span class="section">### docker启动一个ubuntu容器并在守护态运行</span></span><br><span class="line"><span class="section">### 注：docker run的时候如果添加--rm标记，则容器在终止后会立即删除，--rm和-d参数不能同时使用</span></span><br><span class="line"><span class="section">#### 启动一个nginx容器，容器终止即删除容器</span></span><br><span class="line">docker run --name webserver --rm -p 80:80 nginx</span><br><span class="line"><span class="section">#### 启动一个nginx容器，守护进程运行</span></span><br><span class="line">docker run --name webserver -d -p 80:80 nginx</span><br><span class="line"></span><br><span class="line"><span class="section">## 容器启动和终止</span></span><br><span class="line"><span class="section">### 启动一个终止态的容器</span></span><br><span class="line">docker start 容器id/容器名</span><br><span class="line"><span class="section">### 终止一个运行中的容器</span></span><br><span class="line">docker stop 容器id/容器名</span><br><span class="line"><span class="section">### 重启一个容器</span></span><br><span class="line">docker restart 容器id/容器名</span><br><span class="line"></span><br><span class="line"><span class="section">## 删除容器</span></span><br><span class="line"><span class="section">### 删除一个处于终止状态的容器</span></span><br><span class="line">docker rm 容器名/容器id</span><br><span class="line">docker rm trusting_newton</span><br><span class="line"><span class="section">### 清理全部终止状态的容器</span></span><br><span class="line">docker rm $(docker ps -a -q)</span><br><span class="line">docker container prune -f</span><br><span class="line"><span class="section">### 删除没有启动的容器</span></span><br><span class="line">sudo docker rm <span class="code">`docker ps|grep Exited|awk '&#123;print $1&#125;'`</span></span><br></pre></td></tr></table></figure>

<h4 id="5-2-查看容器状态"><a href="#5-2-查看容器状态" class="headerlink" title="5.2 查看容器状态"></a>5.2 查看容器状态</h4><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># 查看容器信息</span></span><br><span class="line">docker ps</span><br><span class="line"><span class="section"># 查看所有容器信息，包括终止容器</span></span><br><span class="line">docker ps -a</span><br><span class="line"><span class="section"># 获取容器的日志信息</span></span><br><span class="line">docker logs 容器名</span><br><span class="line"><span class="section"># 在宿主机查看某个容器cpu、内存、网络、io情况</span></span><br><span class="line">docker stats 容器名/容器id</span><br><span class="line"><span class="section"># 在宿主机查看全部容器cpu、内存、网络、io情况</span></span><br><span class="line">docker stats</span><br></pre></td></tr></table></figure>

<h4 id="5-3-进入容器与容器交换"><a href="#5-3-进入容器与容器交换" class="headerlink" title="5.3 进入容器与容器交换"></a>5.3 进入容器与容器交换</h4><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># 进入容器与容器交换</span></span><br><span class="line"><span class="section">## 交换式终端方式进入，注意：对容器来说，这将重启一个终端</span></span><br><span class="line">docker exec -it 容器名/容器id /bin/bash</span><br><span class="line"><span class="section">## 交互式终端方式进入webserver容器，并执行了bash命令</span></span><br><span class="line">docker exec -it webserver bash</span><br><span class="line"><span class="section"># 将当前终端attch到启动容器的终端</span></span><br><span class="line">docker attach 容器名/容器id</span><br><span class="line"><span class="section"># 以交互式方式创建容器</span></span><br></pre></td></tr></table></figure>

<h4 id="5-4-导入-导出容器"><a href="#5-4-导入-导出容器" class="headerlink" title="5.4 导入/导出容器"></a>5.4 导入/导出容器</h4><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># 导出容器快照为tar包</span></span><br><span class="line"><span class="section">## 导出容器为容器快照，ubuntu.tar</span></span><br><span class="line">docker export 容器名/容器id &gt; ubuntu.tar</span><br><span class="line"></span><br><span class="line"><span class="section"># 从tar包快照导入为容器</span></span><br><span class="line"><span class="section">## 从容器快照文件中再导入为镜像</span></span><br><span class="line">cat ubuntu.tar|docker import - test/ubuntu:v1.0</span><br><span class="line"></span><br><span class="line"><span class="section"># 指定URL或者某个目录，从容器快照文件中再导入为镜像</span></span><br><span class="line">docker import https//:xxxx</span><br></pre></td></tr></table></figure>

<h2 id="6-Registry"><a href="#6-Registry" class="headerlink" title="6.Registry"></a>6.Registry</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># 登录公共Registry</span></span><br><span class="line"><span class="section">## 登录docker.io</span></span><br><span class="line">docker login -u username</span><br></pre></td></tr></table></figure>

<h2 id="7-数据卷"><a href="#7-数据卷" class="headerlink" title="7. 数据卷"></a>7. 数据卷</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># 使用bind mount挂载一个主机目录作为数据卷：主机的/src/webapp目录到容器的/opt/webapp目录</span></span><br><span class="line">docker run -d -P --name web -v /src/webapp:/opt/webapp training/webapp python app.py</span><br><span class="line"></span><br><span class="line"><span class="section"># 使用docker managed volume挂载容器数据卷，将在主机/var/lib/docker/volumes/为容器建立一个数据卷目录，可以使用docker inspect web查看Mounts-Source的内容即为主机目录，即使删除容器，数据卷目录页不会被删除</span></span><br><span class="line">docker run -d -P --name web -v /opt/webapp training/webapp python app.py</span><br></pre></td></tr></table></figure>

<h2 id="8-容器访问控制"><a href="#8-容器访问控制" class="headerlink" title="8. 容器访问控制"></a>8. 容器访问控制</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 检查转发是否打开</span><br><span class="line">sysctl net.ipv4.ip_forward</span><br><span class="line"># 手动开启转发</span><br><span class="line">sysctl -w net.ipv4.ip_forward&#x3D;1</span><br><span class="line"># 查看网桥和端口连接信息</span><br><span class="line">brctl show</span><br><span class="line"># 查看IP地址配置</span><br><span class="line">ip addr</span><br><span class="line"># 查看路由信息</span><br><span class="line">ip route</span><br><span class="line"># 查看路由信息</span><br><span class="line">ifconfig 网卡名</span><br></pre></td></tr></table></figure>





]]></content>
      <categories>
        <category>docker</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>03-网络基础/http与https</title>
    <url>/03-%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/http%E4%B8%8Ehttps/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>06-爬虫/01-爬虫入门/爬虫介绍</title>
    <url>/06-%E7%88%AC%E8%99%AB/01-%E7%88%AC%E8%99%AB%E5%85%A5%E9%97%A8/%E7%88%AC%E8%99%AB%E4%BB%8B%E7%BB%8D/</url>
    <content><![CDATA[<h4 id="反爬虫"><a href="#反爬虫" class="headerlink" title="反爬虫"></a>反爬虫</h4><ul>
<li>合法性检测：请求校验(useragent:浏览器，referer:是否是自己网址跳过来的)</li>
<li>小黑屋：IP/用户限制请求频率，或直接拦截</li>
<li>投毒：反爬虫不拦截，返回虚假数据</li>
<li>验证码</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>pycharm/Pycharm的快捷键</title>
    <url>/pycharm/Pycharm%E7%9A%84%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
    <content><![CDATA[<h2 id="1-Mac键盘符号和修饰键"><a href="#1-Mac键盘符号和修饰键" class="headerlink" title="1.Mac键盘符号和修饰键"></a>1.Mac键盘符号和修饰键</h2><ul>
<li>⌘ Command</li>
<li>⇧ Shift</li>
<li>⌥ Option</li>
<li>⌃ Control</li>
<li>↩︎ Return/Enter</li>
<li>⌫ Delete</li>
<li>⌦ 向前删除键（fn+Delete）</li>
<li>↑ 上箭头</li>
<li>↓ 下箭头</li>
<li>← 左箭头</li>
<li>→ 右箭头</li>
<li>⇞ Page Up（Fn+↑）</li>
<li>⇟ Page Down（Fn+↓）</li>
<li>Home Fn + ←</li>
<li>End Fn + →</li>
<li>⇥ 右制表符（Tab键）</li>
<li>⇤ 左制表符（Shift+Tab）</li>
<li>⎋ Escape (Esc)</li>
</ul>
<h2 id="2-编辑"><a href="#2-编辑" class="headerlink" title="2.编辑"></a>2.编辑</h2><h4 id="2-1-代码格式化-PEP8"><a href="#2-1-代码格式化-PEP8" class="headerlink" title="2.1 代码格式化(PEP8)"></a>2.1 代码格式化(PEP8)</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Crtl + Alt + L</span><br><span class="line">⌘ + ⌥ + L</span><br></pre></td></tr></table></figure>

<h4 id="2-2-行注释-取消行注释"><a href="#2-2-行注释-取消行注释" class="headerlink" title="2.2 行注释/取消行注释"></a>2.2 行注释/取消行注释</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Crtl + &#x2F;</span><br><span class="line">⌘ + &#x2F;</span><br></pre></td></tr></table></figure>

<h4 id="2-3"><a href="#2-3" class="headerlink" title="2.3"></a>2.3</h4>]]></content>
  </entry>
  <entry>
    <title>pycharm/Pycharm的Git使用</title>
    <url>/pycharm/Pycharm%E7%9A%84Git%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<p>p</p>
]]></content>
  </entry>
  <entry>
    <title>项目/python爬取疫情实战</title>
    <url>/%E9%A1%B9%E7%9B%AE/python%E7%88%AC%E5%8F%96%E7%96%AB%E6%83%85%E5%AE%9E%E6%88%98/</url>
    <content><![CDATA[<h2 id="LFq51qqupnaiTNn39w6zATiOTxZI2JYuRJEBlzmUDv4zeeNlXhMgJZVb0q5QkLr-CIUrSuNB7ucifrGXawLB4qswPOXYG7-ItDNUR-9UkLTUWlnHLX07hnR1USOrWIjTmbytcIKEdaI6x0RskyotuItj84xxoSBP-iRBW2EHpOc1-1-项目介绍"><a href="#LFq51qqupnaiTNn39w6zATiOTxZI2JYuRJEBlzmUDv4zeeNlXhMgJZVb0q5QkLr-CIUrSuNB7ucifrGXawLB4qswPOXYG7-ItDNUR-9UkLTUWlnHLX07hnR1USOrWIjTmbytcIKEdaI6x0RskyotuItj84xxoSBP-iRBW2EHpOc1-1-项目介绍" class="headerlink" title="LFq51qqupnaiTNn39w6zATiOTxZI2JYuRJEBlzmUDv4zeeNlXhMgJZVb0q5QkLr+CIUrSuNB7ucifrGXawLB4qswPOXYG7+ItDNUR/9UkLTUWlnHLX07hnR1USOrWIjTmbytcIKEdaI6x0RskyotuItj84xxoSBP/iRBW2EHpOc1.1 项目介绍"></a>LFq51qqupnaiTNn39w6zATiOTxZI2JYuRJEBlzmUDv4zeeNlXhMgJZVb0q5QkLr+CIUrSuNB7ucifrGXawLB4qswPOXYG7+ItDNUR/9UkLTUWlnHLX07hnR1USOrWIjTmbytcIKEdaI6x0RskyotuItj84xxoSBP/iRBW2EHpOc1.1 项目介绍</h2><p>此项目是一个基于Python+Flask+Echarts打造的一个疫情监控系统，涉及到的技术有：</p>
<ul>
<li>Python网络爬虫</li>
<li>使用Python与MySQL数据库交互</li>
<li>使用Flask构建web项目</li>
<li>基于Echarts数据可视化展示</li>
<li>在Linux上部署web项目及爬虫</li>
</ul>
<h2 id="1-2-项目环境"><a href="#1-2-项目环境" class="headerlink" title="1.2 项目环境"></a>1.2 项目环境</h2><ul>
<li>Python 3.x</li>
<li>MySQL</li>
<li>PyCharm</li>
<li>Jupiter notebook</li>
<li>Hbuild(前端IDE，<a href="https://www.dcloud.io/hbuilderx.html" target="_blank" rel="noopener">https://www.dcloud.io/hbuilderx.html</a>)</li>
<li>Linux主机(后期项目部署)</li>
</ul>
<h2 id="1-3-notebook"><a href="#1-3-notebook" class="headerlink" title="1.3 notebook"></a>1.3 notebook</h2><ul>
<li>安装</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip install notebook</span><br></pre></td></tr></table></figure>

<ul>
<li>启动</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">jupyter notebook</span><br></pre></td></tr></table></figure>

<ul>
<li>修改工作目录</li>
</ul>
<p>1⃣️ Jupyter notebook –generate-config</p>
<p>2⃣️编辑jupyter_notebook_config.py(搜索notebook_dir，r加路径)</p>
<ul>
<li>基本操作</li>
</ul>
<p>1.新建文件与导入文件</p>
<p>2.单元格分类：code、markdown</p>
<p>3.命令行模式(蓝色边框)与编辑模式(绿色边框)</p>
<p>4.常用快捷键</p>
<p>单元格类型转换：Y、M；出入单元格：A，B；进入命令行模式：Esc；代码补全：Tab</p>
<p>运行单元格：ctrl/shift/alt + enter ；删除单元格：DD</p>
<h2 id="2-1-爬虫概述"><a href="#2-1-爬虫概述" class="headerlink" title="2.1 爬虫概述"></a>2.1 爬虫概述</h2><p>爬虫，就是给网站发起请求，并从响应中提取需要的数据自动化程序</p>
<blockquote>
<ol>
<li>发起请求，获取响应</li>
</ol>
<blockquote>
<p>通过http库，对目标站点进行请求。等同于自己打开浏览器，输入网址</p>
<p>常用库：urllib、urllib3、requests</p>
<p>服务器会返回请求的内容，一般为：html、二进制文件(视频、音频)、文档、json字符串</p>
</blockquote>
</blockquote>
<blockquote>
<ol start="2">
<li>解析内容</li>
</ol>
<blockquote>
<p>寻找自己需要的信息，就是利用正则表达式或其它库提取目标信息</p>
<p>常用库：re、beautifulsoup4</p>
</blockquote>
</blockquote>
<blockquote>
<ol start="3">
<li>保存数据</li>
</ol>
</blockquote>
<blockquote>
<blockquote>
<p>将解析得到的数据持久化到文件或者数据库中</p>
</blockquote>
</blockquote>
<ul>
<li>使用urllib发送请求</li>
</ul>
<p>request.urlopen()</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://www.baidu.com"</span></span><br><span class="line">header = &#123;<span class="string">"User-Agent"</span>: <span class="string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36"</span>&#125;</span><br><span class="line"></span><br><span class="line">req = request.Request(url, headers=header)</span><br><span class="line">res = request.urlopen(req)</span><br><span class="line">print(res.geturl())  <span class="comment"># 获取主机地址</span></span><br><span class="line">print(res.getcode())  <span class="comment"># 获取请求状态码</span></span><br><span class="line">print(res.info())  <span class="comment"># 获取响应头</span></span><br><span class="line"></span><br><span class="line">html = res.read()  <span class="comment"># 获取的是字节形式的内容</span></span><br><span class="line">html.decode(<span class="string">'utf-8'</span>)  <span class="comment"># 解码</span></span><br><span class="line">print(html)</span><br></pre></td></tr></table></figure>

<ul>
<li>使用requests发送请求</li>
</ul>
<p>安装</p>
<p><code>pip install requests</code></p>
<p>requests.get()</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://www.dianping.com"</span></span><br><span class="line">header = &#123;</span><br><span class="line">    <span class="string">"User-Agent"</span>: <span class="string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36"</span>&#125;</span><br><span class="line"></span><br><span class="line">resp = requests.get(url, headers=header)</span><br><span class="line">print(resp.encoding) <span class="comment"># 编码格式</span></span><br><span class="line">print(resp.status_code) <span class="comment"># 状态码</span></span><br><span class="line">resp.encoding = <span class="string">"UTF-8"</span></span><br><span class="line">html = resp.text</span><br><span class="line">print(html)</span><br></pre></td></tr></table></figure>

<ul>
<li>bs4(beautifulsoup4)获取内容</li>
</ul>
<p>安装</p>
<p><code>pip install beautifulsoup4</code></p>
<blockquote>
<p>BeautifulSoup(html)</p>
<blockquote>
<p>获取节点：find()、find_all()/select()</p>
<p>获取属性：attrs</p>
<p>获取文本：text</p>
</blockquote>
</blockquote>
<h3 id="2-2-爬取腾讯疫情数据"><a href="#2-2-爬取腾讯疫情数据" class="headerlink" title="2.2 爬取腾讯疫情数据"></a>2.2 爬取腾讯疫情数据</h3><ul>
<li><a href="https://news.qq.com/zt2020/page/feiyan.htm#/?nojump=1" target="_blank" rel="noopener">腾讯疫情新闻</a></li>
</ul>
<h2 id="3-web程序开发"><a href="#3-web程序开发" class="headerlink" title="3.web程序开发"></a>3.web程序开发</h2><h3 id="3-1-Flask快速入门"><a href="#3-1-Flask快速入门" class="headerlink" title="3.1 Flask快速入门"></a>3.1 Flask快速入门</h3><p>Flask是一个使用Pyhton编写的轻量级Web应用框架。其WSGI工具包采用Werkzeug，模版引擎则使用Jija2，是目前流行的web框架。</p>
<ul>
<li><p>安装：pip install flask</p>
</li>
<li><p>创建Flask项目(Pycharm创建)</p>
</li>
</ul>
<h2 id="4-项目部署"><a href="#4-项目部署" class="headerlink" title="4. 项目部署"></a>4. 项目部署</h2>]]></content>
  </entry>
  <entry>
    <title>python处理时间</title>
    <url>/01-python/python%E5%A4%84%E7%90%86%E6%97%B6%E9%97%B4/</url>
    <content><![CDATA[<h2 id="1-字符串转化为datetime对象"><a href="#1-字符串转化为datetime对象" class="headerlink" title="1.字符串转化为datetime对象"></a>1.字符串转化为datetime对象</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line">time_a = <span class="string">'2020-07-21 23:26:00'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 字符串转化为datetime类型数据</span></span><br><span class="line">time_b = datetime.datetime.strptime(time_a,<span class="string">'%Y-%m-%d %H:%M:%S'</span>)</span><br><span class="line">print(time_b)</span><br><span class="line">print(type(time_b))</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="number">2020</span><span class="number">-07</span><span class="number">-21</span> <span class="number">23</span>:<span class="number">26</span>:<span class="number">00</span></span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> '<span class="title">datetime</span>.<span class="title">datetime</span>'&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="2-时间数据转化为字符串"><a href="#2-时间数据转化为字符串" class="headerlink" title="2.时间数据转化为字符串"></a>2.时间数据转化为字符串</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 时间形式转化为字符串</span></span><br><span class="line">date = datetime.datetime.now()</span><br><span class="line"></span><br><span class="line">detester = date.strftime(<span class="string">'%Y-%m-%d %H:%M:%S'</span>)</span><br><span class="line">print(detester)</span><br><span class="line">print(type(detester))</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="number">2020</span><span class="number">-07</span><span class="number">-21</span> <span class="number">23</span>:<span class="number">36</span>:<span class="number">18</span></span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> '<span class="title">str</span>'&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="3-日期的加减法"><a href="#3-日期的加减法" class="headerlink" title="3.日期的加减法"></a>3.日期的加减法</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 日期的加减法</span></span><br><span class="line">today = datetime.datetime.today()</span><br><span class="line">one_seconds_later = today + datetime.timedelta(seconds=<span class="number">1</span>)</span><br><span class="line">one_minutes_later = today + datetime.timedelta(minutes=<span class="number">1</span>)</span><br><span class="line">one_hour_later = today + datetime.timedelta(hours=<span class="number">1</span>)</span><br><span class="line">one_day_later = today + datetime.timedelta(days=<span class="number">1</span>)</span><br><span class="line">print(one_seconds_later)</span><br><span class="line">print(one_minutes_later)</span><br><span class="line">print(one_hour_later)</span><br><span class="line">print(one_day_later)</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="number">2020</span><span class="number">-07</span><span class="number">-21</span> <span class="number">23</span>:<span class="number">42</span>:<span class="number">27.608953</span></span><br><span class="line"><span class="number">2020</span><span class="number">-07</span><span class="number">-21</span> <span class="number">23</span>:<span class="number">43</span>:<span class="number">26.608953</span></span><br><span class="line"><span class="number">2020</span><span class="number">-07</span><span class="number">-22</span> <span class="number">00</span>:<span class="number">42</span>:<span class="number">26.608953</span></span><br><span class="line"><span class="number">2020</span><span class="number">-07</span><span class="number">-22</span> <span class="number">23</span>:<span class="number">42</span>:<span class="number">26.608953</span></span><br></pre></td></tr></table></figure>

<h2 id="4-时间戳转化为datetime对象"><a href="#4-时间戳转化为datetime对象" class="headerlink" title="4.时间戳转化为datetime对象"></a>4.时间戳转化为datetime对象</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">stamp_time = time.time()</span><br><span class="line">print(stamp_time)</span><br><span class="line">print(type(stamp_time))</span><br><span class="line">time_chuo = datetime.datetime.fromtimestamp(stamp_time)</span><br><span class="line">print(time_chuo)</span><br><span class="line">print(type(time_chuo))</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="number">1595346735.134809</span></span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> '<span class="title">float</span>'&gt;</span></span><br><span class="line"><span class="class">2020-07-21 23:</span><span class="number">52</span>:<span class="number">15.134809</span></span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> '<span class="title">datetime</span>.<span class="title">datetime</span>'&gt;</span></span><br></pre></td></tr></table></figure>

<p>(未完待续…)</p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>时间处理</tag>
      </tags>
  </entry>
  <entry>
    <title>linux(一)：linux基本命令</title>
    <url>/Linux/linux%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h1 id="linux基本命令"><a href="#linux基本命令" class="headerlink" title="linux基本命令"></a>linux基本命令</h1><ul>
<li>linux命令格式</li>
<li>linux命令分类</li>
<li>linux基本命令</li>
</ul>
<p>linux命令是用户告诉计算机去执行什么操作的指令。</p>
<h4 id="1-linux命令格式"><a href="#1-linux命令格式" class="headerlink" title="1.linux命令格式"></a>1.linux命令格式</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">    命令  [命令选项]  [参数]</span><br><span class="line">    学会看语法：</span><br><span class="line">      &#123;必选项&#125;[可选项]</span><br><span class="line"></span><br><span class="line">举例：</span><br><span class="line">ls  -a   &#x2F;tmp   等价于   ls –all &#x2F;tmp</span><br><span class="line"></span><br><span class="line">ls     命令</span><br><span class="line">-a     命令选项   简写使用-   全写--  </span><br><span class="line">&#x2F;tmp   参数</span><br></pre></td></tr></table></figure>
<h4 id="2-linux命令分类"><a href="#2-linux命令分类" class="headerlink" title="2.linux命令分类"></a>2.linux命令分类</h4><p>linux 命令分为:内部命令和外部命令，内部命令是linux内核自带的，执行效率更高；外部命令需要安装以后才能使用，但是系统默认已经为你安装了很多外部命令，供大家使用。</p>
<p><strong>使用type命令来区分命令是内部还是外部命令：</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[kevin@localhost &#x2F;]$ type type</span><br><span class="line">type 是 shell 内嵌</span><br><span class="line">[kevin@localhost &#x2F;]$ type cd</span><br><span class="line">cd 是 shell 内嵌</span><br><span class="line">[kevin@localhost &#x2F;]$ type clear</span><br><span class="line">clear 已被哈希 (&#x2F;usr&#x2F;bin&#x2F;clear)</span><br></pre></td></tr></table></figure>
<p><strong>linux命令存放路径：</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[kevin@localhost &#x2F;]$  echo $PATH</span><br><span class="line">&#x2F;usr&#x2F;local&#x2F;bin</span><br><span class="line">&#x2F;usr&#x2F;local&#x2F;sbin</span><br><span class="line">&#x2F;usr&#x2F;bin</span><br><span class="line">&#x2F;usr&#x2F;sbin</span><br><span class="line">&#x2F;bin:&#x2F;sbin</span><br><span class="line">&#x2F;home&#x2F;kevin&#x2F;.local&#x2F;bin</span><br><span class="line">&#x2F;home&#x2F;kevin&#x2F;bin</span><br><span class="line"></span><br><span class="line">区别：bin的命令任何人都可以使用，sbin的命令称为特权命令，只能管理用使用</span><br></pre></td></tr></table></figure>
<h4 id="3-linux基本命令"><a href="#3-linux基本命令" class="headerlink" title="3.linux基本命令"></a>3.linux基本命令</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1）清屏命令：clear      快捷键  ctrl+l</span><br><span class="line">2）帮助命令：man</span><br><span class="line">3）进入文件夹命令: cd</span><br><span class="line">4）列出当前目录内容命令：ls   [-a -l -d ]</span><br><span class="line">5）显示主机名：hostname</span><br><span class="line">6）显示当前路径: pwd</span><br><span class="line">7）显示日历：cal </span><br><span class="line">8）计算器：bc</span><br><span class="line">9）重启命令：reboot     shutdown -r      init 6</span><br><span class="line">10）注销命令：logout</span><br><span class="line">11）关机命令：halt      shutdown -h         init 0</span><br><span class="line">12) 显示当前操作系统和机器的信息: uname</span><br></pre></td></tr></table></figure>
<p><strong>ls列出当前目录内容命令</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ls –F    文件夹后加&#x2F;显示</span><br><span class="line">ls –x    按水平对齐方式列出档案</span><br><span class="line">ls –m    以”,”隔开档案</span><br><span class="line">ls –t    按时间排序档案</span><br><span class="line">ls –a    显示隐含档案</span><br><span class="line">ls –l    显示详细信息，此命令等同于ll。</span><br><span class="line">ls –d    显示目录而不是其内容</span><br><span class="line">ls  -h    以K、M、B的形式进行显示</span><br><span class="line">ls -R</span><br></pre></td></tr></table></figure>
<p><strong>cal 日历</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[kevin@localhost &#x2F;]$ cal 05 2019</span><br><span class="line">      五月 2019     </span><br><span class="line">日 一 二 三 四 五 六</span><br><span class="line">          1  2  3  4</span><br><span class="line"> 5  6  7  8  9 10 11</span><br><span class="line">12 13 14 15 16 17 18</span><br><span class="line">19 20 21 22 23 24 25</span><br><span class="line">26 27 28 29 30 31</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[kevin@localhost &#x2F;]$ cal 2019</span><br><span class="line">                               2019                               </span><br><span class="line"></span><br><span class="line">        一月                   二月                   三月        </span><br><span class="line">日 一 二 三 四 五 六   日 一 二 三 四 五 六   日 一 二 三 四 五 六</span><br><span class="line">       1  2  3  4  5                   1  2                   1  2</span><br><span class="line"> 6  7  8  9 10 11 12    3  4  5  6  7  8  9    3  4  5  6  7  8  9</span><br><span class="line">13 14 15 16 17 18 19   10 11 12 13 14 15 16   10 11 12 13 14 15 16</span><br><span class="line">20 21 22 23 24 25 26   17 18 19 20 21 22 23   17 18 19 20 21 22 23</span><br><span class="line">27 28 29 30 31         24 25 26 27 28         24 25 26 27 28 29 30</span><br><span class="line">                                              31</span><br><span class="line">        四月                   五月                   六月        </span><br><span class="line">日 一 二 三 四 五 六   日 一 二 三 四 五 六   日 一 二 三 四 五 六</span><br><span class="line">    1  2  3  4  5  6             1  2  3  4                      1</span><br><span class="line"> 7  8  9 10 11 12 13    5  6  7  8  9 10 11    2  3  4  5  6  7  8</span><br><span class="line">14 15 16 17 18 19 20   12 13 14 15 16 17 18    9 10 11 12 13 14 15</span><br><span class="line">21 22 23 24 25 26 27   19 20 21 22 23 24 25   16 17 18 19 20 21 22</span><br><span class="line">28 29 30               26 27 28 29 30 31      23 24 25 26 27 28 29</span><br><span class="line">                                              30</span><br><span class="line">        七月                   八月                   九月        </span><br><span class="line">日 一 二 三 四 五 六   日 一 二 三 四 五 六   日 一 二 三 四 五 六</span><br><span class="line">    1  2  3  4  5  6                1  2  3    1  2  3  4  5  6  7</span><br><span class="line"> 7  8  9 10 11 12 13    4  5  6  7  8  9 10    8  9 10 11 12 13 14</span><br><span class="line">14 15 16 17 18 19 20   11 12 13 14 15 16 17   15 16 17 18 19 20 21</span><br><span class="line">21 22 23 24 25 26 27   18 19 20 21 22 23 24   22 23 24 25 26 27 28</span><br><span class="line">28 29 30 31            25 26 27 28 29 30 31   29 30</span><br><span class="line"></span><br><span class="line">        十月                  十一月                 十二月       </span><br><span class="line">日 一 二 三 四 五 六   日 一 二 三 四 五 六   日 一 二 三 四 五 六</span><br><span class="line">       1  2  3  4  5                   1  2    1  2  3  4  5  6  7</span><br><span class="line"> 6  7  8  9 10 11 12    3  4  5  6  7  8  9    8  9 10 11 12 13 14</span><br><span class="line">13 14 15 16 17 18 19   10 11 12 13 14 15 16   15 16 17 18 19 20 21</span><br><span class="line">20 21 22 23 24 25 26   17 18 19 20 21 22 23   22 23 24 25 26 27 28</span><br><span class="line">27 28 29 30 31         24 25 26 27 28 29 30   29 30 31</span><br></pre></td></tr></table></figure>
<p><strong>bc 计算器</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">浮点运算 scale 指定小数点位数</span><br><span class="line">[kevin@localhost &#x2F;]$ echo &quot;scale&#x3D;2;100&#x2F;3&quot;|bc</span><br><span class="line">33.33</span><br></pre></td></tr></table></figure>
<p><strong>uname显示当前操作系统和机器的信息</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#uname  －a   显示所有信息</span><br><span class="line">#uname  －p   显示处理器类型</span><br><span class="line">#uname  －m   显示机器硬件信息</span><br><span class="line">#uname  -r    显示内核版本</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">注意：如何查看你的linux是否为稳定版</span><br><span class="line">[kevin@localhost &#x2F;]$ uname -r</span><br><span class="line">3.10.0-957.el7.x86_64</span><br><span class="line">3 主版本号</span><br><span class="line">10 次版本号     偶数为稳定版  奇数为开发版</span><br><span class="line">0 派生版本号</span><br><span class="line">957修改次数</span><br></pre></td></tr></table></figure>
<h4 id="4-man帮助命令"><a href="#4-man帮助命令" class="headerlink" title="4.man帮助命令"></a>4.man帮助命令</h4><p>Linux提供了丰富的帮助手册，当你需要查看某个命令的参数时不必到处上网查找，只要man一下即可。</p>
<p>同时也可以使用man man 查看man的使用方法。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">帮助命令   man命令后面可以加一个数字参数，表示具体的范围定位：</span><br><span class="line">数字&quot;1&quot;表示用户命令</span><br><span class="line">数字&quot;2&quot;表示系统调用</span><br><span class="line">数字&quot;3&quot;表示C语言库函数</span><br><span class="line">数字&quot;4&quot;表示设备或特殊文件</span><br><span class="line">数字&quot;5&quot;表示文件格式和规则</span><br><span class="line">数字&quot;6&quot;表示游戏及其他</span><br><span class="line">数字&quot;7&quot;表示宏、包及其他杂项</span><br><span class="line">数字&quot;8&quot;表示系统管理员相关的命令</span><br><span class="line">数字&quot;9&quot;表示跟kernel有关的文件Kernel routines</span><br></pre></td></tr></table></figure>
<h4 id="man手册的格式"><a href="#man手册的格式" class="headerlink" title="man手册的格式"></a>man手册的格式</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">NAME         　　   命令名称及功能简要说明</span><br><span class="line"></span><br><span class="line">SYNOPSIS     　     用法说明，包括可用的选项</span><br><span class="line"></span><br><span class="line">DESCRIPTION         命令功能的详细说明，可能包括每一个选项的意义</span><br><span class="line"></span><br><span class="line">OPTIONS             说明每一项的意义</span><br><span class="line"></span><br><span class="line">FILES               此命令相关的配置文件       </span><br><span class="line"></span><br><span class="line">BUGS        </span><br><span class="line"></span><br><span class="line">EXAMPLES            使用示例</span><br><span class="line"></span><br><span class="line">SEE ALSO            另外参照</span><br></pre></td></tr></table></figure>
<h4 id="man手册的使用方法"><a href="#man手册的使用方法" class="headerlink" title="man手册的使用方法"></a>man手册的使用方法</h4><p>例如：man ls  后</p>
<p>查看时需要翻屏：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">向后翻一屏：space(空格键)    　　向前翻一屏：b</span><br><span class="line"></span><br><span class="line">向后翻一行：Enter(回车键)    　　 向前翻一行：k</span><br></pre></td></tr></table></figure>
<p>查看时需要查找：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;关键词      向后查找    n：下一个</span><br><span class="line"></span><br><span class="line">?关键词     向前查找    N：前一个</span><br></pre></td></tr></table></figure>
<p>如下如所示：</p>
<p><img src="https://images2017.cnblogs.com/blog/841693/201801/841693-20180125172815319-1345174972.png" alt="image"></p>
<p>退出man：q</p>
<h4 id="常用实例"><a href="#常用实例" class="headerlink" title="常用实例"></a>常用实例</h4><p>分章节查看man的帮助手册：</p>
<p><strong>标准用户命令</strong></p>
<p>可以使用whatis命令是用于查询一个命令执行什么功能，并将查询结果打印到终端上。</p>
<p>例如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[kevin@localhost &#x2F;]$ whatis cd</span><br><span class="line">cd (1)               - GNU Bourne-Again SHell (GNU 命令解释程序 “Bour...</span><br><span class="line">cd (3tcl)            - 改变工作目录</span><br><span class="line">cd (1p)              - change the working directory</span><br></pre></td></tr></table></figure>
<p>#从上文的输出结果我们看到cd命令是bash的内建命令，它的功能是改变当前目录，可以在3tcl、1和1p的章节中查看它的帮助。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@nfs-server ~]#man 1 cd</span><br></pre></td></tr></table></figure>
<p>使用上面的命令可以直接查看cd的帮助信息。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@nfs-server ~]#man 1p cd</span><br></pre></td></tr></table></figure>
<h2 id="因为1p章节是bash的帮助信息，所以在使用”man-1p-cd”后，通过在man中输入”-cd”查找相关的信息才能看到cd的帮助信息。"><a href="#因为1p章节是bash的帮助信息，所以在使用”man-1p-cd”后，通过在man中输入”-cd”查找相关的信息才能看到cd的帮助信息。" class="headerlink" title="因为1p章节是bash的帮助信息，所以在使用”man 1p cd”后，通过在man中输入”/cd”查找相关的信息才能看到cd的帮助信息。"></a>因为1p章节是bash的帮助信息，所以在使用”man 1p cd”后，通过在man中输入”/cd”查找相关的信息才能看到cd的帮助信息。</h2><p>我的操作如下所示：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[kevin@localhost &#x2F;]$ whatis cd </span><br><span class="line">cd (1)               - GNU Bourne-Again SHell (GNU 命令解释程序 “Bour...</span><br><span class="line">cd (3tcl)            - 改变工作目录</span><br><span class="line">cd (1p)              - change the working directory</span><br></pre></td></tr></table></figure>
<p>这是因为linux的版本比较新，去除掉了一些很简单命令的查询了。</p>
<p><strong>系统调用</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[kevin@localhost &#x2F;]$ whatis read</span><br><span class="line">read (1)             - GNU Bourne-Again SHell (GNU 命令解释程序 “Bour...</span><br><span class="line">read (3tcl)          - 从一个通道读</span><br><span class="line">read (2)             - 在文件描述符上执行读操作</span><br><span class="line">read (1p)            - read a line from standard input</span><br><span class="line">read (3p)            - read from a file</span><br></pre></td></tr></table></figure>
<p>#从上面可看到，read在1,3tcl,1p,2,3p中都有内容，下面查看系统调用：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[kevin@localhost &#x2F;]$ man 2 read</span><br></pre></td></tr></table></figure>
<hr>
<p>我的操作如下所示：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[kevin@localhost &#x2F;]$ whatis read</span><br><span class="line">read (1)             - GNU Bourne-Again SHell (GNU 命令解释程序 “Bour...</span><br><span class="line">read (3tcl)          - 从一个通道读</span><br><span class="line">read (2)             - 在文件描述符上执行读操作</span><br><span class="line">read (1p)            - read a line from standard input</span><br><span class="line">read (3p)            - read from a file</span><br><span class="line">[kevin@localhost &#x2F;]$ man 2 read</span><br></pre></td></tr></table></figure>
<p>效果：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">READ(2)                    Linux Programmer&#39;s Manual                   READ(2)</span><br><span class="line"></span><br><span class="line">NAME</span><br><span class="line">       read - 在文件描述符上执行读操作</span><br><span class="line"></span><br><span class="line">概述</span><br><span class="line">       #include &lt;unistd.h&gt;</span><br><span class="line"></span><br><span class="line">       ssize_t read(int fd, void *buf, size_t count);</span><br><span class="line"></span><br><span class="line">描述</span><br><span class="line">       read()    从文件描述符   fd   中读取   count   字节的数据并放入从   buf</span><br><span class="line">       开始的缓冲区中.</span><br><span class="line"></span><br><span class="line">       如果    count    为零,read()返回0,不执行其他任何操作.     如果    count</span><br><span class="line">       大于SSIZE_MAX,那么结果将不可预料.</span><br><span class="line"></span><br><span class="line">返回值</span><br><span class="line">       成功时返回读取到的字节数(为零表示读到文件描述符),</span><br><span class="line">       此返回值受文件剩余字节数限制.当返回值小于指定的字节数时</span><br><span class="line">       并不意味着错误;这可能是因为当前可读取的字节数小于指定的</span><br><span class="line">       字节数(比如已经接近文件结尾,或者正在从管道或者终端读取数        据,或者</span><br><span class="line">       read()被信号中断).              发生错误时返回-1,并置             errno</span><br></pre></td></tr></table></figure>
<p><strong>库调用</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@nfs-server ~]# man 3 sleep</span><br></pre></td></tr></table></figure>

<hr>
<p>我的操作如下所示：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[kevin@localhost &#x2F;]$ whatis sleep</span><br><span class="line">sleep (1)            - 延迟指定数量的时间</span><br><span class="line">sleep (1p)           - suspend execution for an interval</span><br><span class="line">sleep (3)            - sleep for the specified number of seconds</span><br><span class="line">sleep (3p)           - suspend execution for an interval of time</span><br><span class="line">[kevin@localhost &#x2F;]$ man 3 sleep</span><br></pre></td></tr></table></figure>
<p>效果：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SLEEP(3)                   Linux Programmer&#39;s Manual                  SLEEP(3)</span><br><span class="line"></span><br><span class="line">NAME</span><br><span class="line">       sleep - sleep for the specified number of seconds</span><br><span class="line"></span><br><span class="line">SYNOPSIS</span><br><span class="line">       #include &lt;unistd.h&gt;</span><br><span class="line"></span><br><span class="line">       unsigned int sleep(unsigned int seconds);</span><br><span class="line"></span><br><span class="line">DESCRIPTION</span><br><span class="line">       sleep()  makes  the  calling  thread  sleep  until seconds seconds have</span><br><span class="line">       elapsed or a signal arrives which is not ignored.</span><br><span class="line"></span><br><span class="line">RETURN VALUE</span><br><span class="line">       Zero if the requested time has elapsed, or the number of  seconds  left</span><br><span class="line">       to sleep, if the call was interrupted by a signal handler.</span><br><span class="line"></span><br><span class="line">CONFORMING TO</span><br><span class="line">       POSIX.1-2001.</span><br><span class="line"></span><br><span class="line">BUGS</span><br><span class="line">       sleep()  may be implemented using SIGALRM; mixing calls to alarm(2) and</span><br><span class="line"> Manual page sleep(3) line 1 (press h for help or q to quit)</span><br></pre></td></tr></table></figure>
<p><strong>特殊文件（设备文件）</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[kevin@localhost &#x2F;]$ whatis tty</span><br><span class="line">tty (1)              - 显示连接标准输入的终端的文件名</span><br><span class="line">tty (1p)             - return user&#39;s terminal name</span><br><span class="line">tty (4)              - controlling terminal</span><br><span class="line">[kevin@localhost &#x2F;]$ man 4 tty</span><br></pre></td></tr></table></figure>
<p>效果：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">DESCRIPTION</span><br><span class="line">       The  file  &#x2F;dev&#x2F;tty  is  a character file with major number 5 and minor</span><br><span class="line">       number 0, usually of mode 0666 and owner.group root.tty.  It is a  syn‐</span><br><span class="line">       onym for the controlling terminal of a process, if any.</span><br><span class="line"></span><br><span class="line">       In  addition  to the ioctl(2) requests supported by the device that tty</span><br><span class="line">       refers to, the ioctl(2) request TIOCNOTTY is supported.</span><br><span class="line"></span><br><span class="line">   TIOCNOTTY</span><br><span class="line">       Detach the calling process from its controlling terminal.</span><br><span class="line"></span><br><span class="line">       If the process is the session leader, then SIGHUP and  SIGCONT  signals</span><br><span class="line">       are  sent to the foreground process group and all processes in the cur‐</span><br><span class="line">       rent session lose their controlling tty.</span><br><span class="line"></span><br><span class="line">       This  ioctl(2)  call  works  only  on  file  descriptors  connected  to</span><br><span class="line">       &#x2F;dev&#x2F;tty.   It  is  used by daemon processes when they are invoked by a</span><br><span class="line">       user at a terminal.  The process attempts to  open  &#x2F;dev&#x2F;tty.   If  the</span><br><span class="line">       open succeeds, it detaches itself from the terminal by using TIOCNOTTY,</span><br><span class="line">       while if the open fails, it is obviously not attached to a terminal and</span><br><span class="line">       does not need to detach itself.</span><br><span class="line"></span><br><span class="line">FILES</span><br><span class="line"> Manual page tty(4) line 8&#x2F;44 70% (press h for help or q to quit)</span><br></pre></td></tr></table></figure>
<p><strong>文件格式（配置文件的语法）</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[kevin@localhost &#x2F;]$ whatis passwd</span><br><span class="line">passwd (5)           - (未知的主题)</span><br><span class="line">passwd (1)           - update user&#39;s authentication tokens</span><br><span class="line">sslpasswd (1ssl)     - compute password hashes</span><br><span class="line">[kevin@localhost &#x2F;]$ man 5 passwd</span><br></pre></td></tr></table></figure>
<p>效果：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">PASSWD(5)                        File formats                        PASSWD(5)</span><br><span class="line"></span><br><span class="line">NAME 名称</span><br><span class="line">       passwd - 密码文件</span><br><span class="line"></span><br><span class="line">描述</span><br><span class="line">       Passwd              是个文本文件,             它包含了一个系统帐户列表,</span><br><span class="line">       给出每个帐户一些有用的信息，比如用户  ID,组   ID,   家目录,   shell,等.</span><br><span class="line">       通常它也包含了每个用户经过加密的密码.</span><br><span class="line">       它通常应该是可读的（许多命令，工具程序，象    ls(1)    用它做用户    Id</span><br><span class="line">       到用户名称的映射）,但是只允许超级用户有写方式权限.</span><br><span class="line"></span><br><span class="line">       在过去美好的日子里，这种一般的读许可没有什么大问题.</span><br><span class="line">       每个人都能读到加密了的密码，因为硬件太慢以至于不能解开一个</span><br><span class="line">       精选的密码，另外，这基本假定是为友好的使用团体使用的.</span><br><span class="line">       现在，许多人运行一些版本的影子密码套件，它们在 &#x2F;etc&#x2F;passwd 的密码域里是</span><br><span class="line">       *，而不再是加密的口令，            加密的口令放在           &#x2F;etc&#x2F;shadow</span><br><span class="line">       中，那个文件只有超级用户能读．</span><br><span class="line"></span><br><span class="line">       不管是否使用了影子密码，许多系统管理员使用一个星号在加密的密码字段</span><br><span class="line">       以确保用户不能鉴别他（她）自己的密码. (见下面的注意)</span><br><span class="line"></span><br><span class="line">       如果你建立了一个新的登录，首先放个星号在密码字段,   然后使用  passwd(1)</span><br></pre></td></tr></table></figure>
<p><strong>管理命令</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[kevin@localhost &#x2F;]$ whatis fdisk</span><br><span class="line">fdisk (8)            - Linux分区表操作工具软件</span><br><span class="line">[kevin@localhost &#x2F;]$ man 8 fdisk</span><br></pre></td></tr></table></figure>
<p>效果：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">FDISK(8)                        Linux程序员手册                       FDISK(8)</span><br><span class="line"></span><br><span class="line">NAME</span><br><span class="line">       fdisk - Linux分区表操作工具软件</span><br><span class="line"></span><br><span class="line">总览</span><br><span class="line">       fdisk [-u]设备名</span><br><span class="line"></span><br><span class="line">       fdisk -l [-u] [设备名 ...]</span><br><span class="line"></span><br><span class="line">       fdisk -s分区 ...</span><br><span class="line"></span><br><span class="line">       fdisk -v</span><br><span class="line"></span><br><span class="line">描述</span><br><span class="line">       硬盘可以被分成一个或多个逻辑磁盘，称为                           分区。</span><br><span class="line">       这些分区信息都存放在硬盘0扇区的 分区表 中。</span><br><span class="line"></span><br><span class="line">       在 BSD 风格中，分区被称为“磁盘片”和“磁盘标签”</span><br><span class="line"></span><br><span class="line">       Linux    至少需要一个分区，即用做它的     root     文件系统。     Linux</span><br><span class="line">       可以使用交换文件和&#x2F;或交换分区，交换分区更有效。</span><br><span class="line"> Manual page fdisk(8) line 1 (press h for help or q to quit)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>linux(三)：linux文件及文件夹权限</title>
    <url>/Linux/%E6%96%87%E4%BB%B6%E5%8F%8A%E6%96%87%E4%BB%B6%E5%A4%B9%E6%9D%83%E9%99%90/</url>
    <content><![CDATA[<h1 id="文件及文件夹权限"><a href="#文件及文件夹权限" class="headerlink" title="文件及文件夹权限"></a>文件及文件夹权限</h1><ul>
<li>linux 基本权限</li>
<li>linux特殊权限</li>
<li>linux隐藏权限</li>
<li>linux file ACL 权限</li>
</ul>
<h2 id="1-linux-基本权限"><a href="#1-linux-基本权限" class="headerlink" title="1.linux 基本权限"></a>1.linux 基本权限</h2><h4 id="linux基本权限"><a href="#linux基本权限" class="headerlink" title="linux基本权限"></a>linux基本权限</h4><p>使用ls -l filename 命令查看文件或文件夹详细权限</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[kevin@localhost linux_study]$ ls</span><br><span class="line">file2</span><br><span class="line">[kevin@localhost linux_study]$ ls -l file2</span><br><span class="line">-rw-rw-r--. 1 kevin kevin 25 5月  29 00:27 file2</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[kevin@localhost linux_study]$ ls -l</span><br><span class="line">总用量 4</span><br><span class="line">-rw-rw-r--. 1 kevin kevin 25 5月  29 00:27 file2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 文件权限组成详解：</span><br><span class="line">- --- --- ---</span><br><span class="line"></span><br><span class="line">-    文件类型</span><br><span class="line">---  文件所有者的权限  root    rw-       r：读   w：写   x：执行</span><br><span class="line">---  文件所属的组中的成员对其权限  root   rw-</span><br><span class="line">---  其他人   r--</span><br><span class="line">.    表示其所属的文件或目录开启了SELinux安全上下文标签，如果没有，则表示未开启(在 Mac 终端中显示为@,在 Linux 系统中显示为.)</span><br><span class="line">25 文件或文件夹的大小</span><br><span class="line">5月  29 00:27   创建日期</span><br><span class="line">file2  文件名</span><br></pre></td></tr></table></figure>
<p>文件及目录的权限范围：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">u：User，即文件或目录的拥有者；</span><br><span class="line">g：Group，即文件或目录的所属群组；</span><br><span class="line">o：Other，除了文件或目录拥有者或所属群组之外，其他用户皆属于这个范围；</span><br><span class="line">a：All，即全部的用户，包含拥有者、所属群组以及其他用户。</span><br></pre></td></tr></table></figure>
<p>权限的代号包括：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">r：读取权限，数字代号为4；</span><br><span class="line">w：写入权限，数字代号为2；</span><br><span class="line">x：执行或切换权限，数字代号为1；</span><br><span class="line">-：不具任何权限，数字代号为0；</span><br><span class="line">s：当文件被执行时，根据who参数指定的用户类型设置文件的setuid或者setgid权限。</span><br></pre></td></tr></table></figure>
<p><strong>chmod命令</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">用法：chmod [选项]... 模式[,模式]... 文件...</span><br><span class="line">　或：chmod [选项]... 八进制模式 文件...</span><br><span class="line">　或：chmod [选项]... --reference&#x3D;参考文件 文件...</span><br><span class="line">Change the mode of each FILE to MODE.</span><br><span class="line">With --reference, change the mode of each FILE to that of RFILE.</span><br><span class="line"></span><br><span class="line">  -c, --changes          like verbose but report only when a change is made</span><br><span class="line">  -f, --silent, --quiet  suppress most error messages</span><br><span class="line">  -v, --verbose          output a diagnostic for every file processed</span><br><span class="line">      --no-preserve-root  do not treat &#39;&#x2F;&#39; specially (the default)</span><br><span class="line">      --preserve-root    fail to operate recursively on &#39;&#x2F;&#39;</span><br><span class="line">      --reference&#x3D;RFILE  use RFILE&#39;s mode instead of MODE values</span><br><span class="line">  -R, --recursive        change files and directories recursively</span><br><span class="line">      --help		显示此帮助信息并退出</span><br><span class="line">      --version		显示版本信息并退出</span><br><span class="line"></span><br><span class="line">Each MODE is of the form &#39;[ugoa]*([-+&#x3D;]([rwxXst]*|[ugo]))+|[-+&#x3D;][0-7]+&#39;.</span><br><span class="line"></span><br><span class="line">GNU coreutils online help: &lt;http:&#x2F;&#x2F;www.gnu.org&#x2F;software&#x2F;coreutils&#x2F;&gt;</span><br><span class="line">请向&lt;http:&#x2F;&#x2F;translationproject.org&#x2F;team&#x2F;zh_CN.html&gt; 报告chmod 的翻译错误</span><br><span class="line">要获取完整文档，请运行：info coreutils &#39;chmod invocation&#39;</span><br></pre></td></tr></table></figure>
<p>案例：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#案例1：添加所有用户对file2的执行权限</span><br><span class="line">[kevin@localhost linux_study]$ ls -l</span><br><span class="line">总用量 4</span><br><span class="line">-rw-rw-r--. 1 kevin kevin 25 5月  29 00:27 file2</span><br><span class="line">[kevin@localhost linux_study]$ chmod a+x file2</span><br><span class="line">[kevin@localhost linux_study]$ ls -l</span><br><span class="line">总用量 4</span><br><span class="line">-rwxrwxr-x. 1 kevin kevin 25 5月  29 00:27 file2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 案例2：取消file2所有者群组用户的执行权限及其他用户的写入权限</span><br><span class="line">[kevin@localhost linux_study]$ ls -l</span><br><span class="line">总用量 4</span><br><span class="line">-rwxrwxr-x. 1 kevin kevin 25 5月  29 00:27 file2</span><br><span class="line">[kevin@localhost linux_study]$ chmod g-x,o-w file2</span><br><span class="line">[kevin@localhost linux_study]$ ls -l</span><br><span class="line">总用量 4</span><br><span class="line">-rwxrw-r-x. 1 kevin kevin 25 5月  29 00:27 file2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 案例3：递归取消文件夹quxian的所有用户的执行权限</span><br><span class="line"># 减权限前：</span><br><span class="line">[kevin@localhost linux_study]$ pwd</span><br><span class="line">&#x2F;home&#x2F;kevin&#x2F;linux_study</span><br><span class="line">[kevin@localhost linux_study]$ ls -l</span><br><span class="line">总用量 4</span><br><span class="line">-rwxrw-r-x. 1 kevin kevin 25 5月  29 00:27 file2</span><br><span class="line">drwxrwxr-x. 2 kevin kevin 26 5月  29 13:35 quxian</span><br><span class="line"></span><br><span class="line">[kevin@localhost quxian]$ ls -l</span><br><span class="line">总用量 0</span><br><span class="line">drwxrwxr-x. 2 kevin kevin 6 5月  29 13:39 quanxian1</span><br><span class="line">-rw-rw-r--. 1 kevin kevin 0 5月  29 13:35 quanxian.txt</span><br><span class="line"># 减权限</span><br><span class="line">[root@localhost linux_study]# chmod -R a-x quxian</span><br><span class="line"># 减权限后：</span><br><span class="line">[root@localhost linux_study]# ls -l</span><br><span class="line">总用量 4</span><br><span class="line">-rwxrw-r-x. 1 kevin kevin 25 5月  29 00:27 file2</span><br><span class="line">drw-rw-r--. 3 kevin kevin 43 5月  29 13:39 quxian</span><br><span class="line"></span><br><span class="line">[root@localhost quxian]# ls -l</span><br><span class="line">总用量 0</span><br><span class="line">drw-rw-r--. 2 kevin kevin 6 5月  29 13:39 quanxian1</span><br><span class="line">-rw-rw-r--. 1 kevin kevin 0 5月  29 13:35 quanxian.txt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 案例4：添加所有用户对file2的所有权限</span><br><span class="line">[root@localhost linux_study]# ls -l</span><br><span class="line">总用量 4</span><br><span class="line">-rwxrw-r-x. 1 kevin kevin 25 5月  29 00:27 file2</span><br><span class="line">drw-rw-r--. 3 kevin kevin 43 5月  29 13:39 quxian</span><br><span class="line"></span><br><span class="line">[root@localhost linux_study]# chmod 777 file2</span><br><span class="line">[root@localhost linux_study]# ls -l</span><br><span class="line">总用量 4</span><br><span class="line">-rwxrwxrwx. 1 kevin kevin 25 5月  29 00:27 file2</span><br><span class="line">drw-rw-r--. 3 kevin kevin 43 5月  29 13:39 quxian</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 案例5：取消file2所有者的执行权限及其他用户的所有权限</span><br><span class="line">[root@localhost linux_study]# ls -l</span><br><span class="line">总用量 4</span><br><span class="line">-rwxrwxrwx. 1 kevin kevin 25 5月  29 00:27 file2</span><br><span class="line">drw-rw-r--. 3 kevin kevin 43 5月  29 13:39 quxian</span><br><span class="line">[root@localhost linux_study]# chmod 670 file2</span><br><span class="line">[root@localhost linux_study]# ls -l</span><br><span class="line">总用量 4</span><br><span class="line">-rw-rwx---. 1 kevin kevin 25 5月  29 00:27 file2</span><br><span class="line">drw-rw-r--. 3 kevin kevin 43 5月  29 13:39 quxian</span><br></pre></td></tr></table></figure>
<p><strong>chown命令</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">用法：chown [选项]... [所有者][:[组]] 文件...</span><br><span class="line">　或：chown [选项]... --reference&#x3D;参考文件 文件...</span><br><span class="line">Change the owner and&#x2F;or group of each FILE to OWNER and&#x2F;or GROUP.</span><br><span class="line">With --reference, change the owner and group of each FILE to those of RFILE.</span><br><span class="line"></span><br><span class="line">  -c, --changes          like verbose but report only when a change is made</span><br><span class="line">  -f, --silent, --quiet  suppress most error messages</span><br><span class="line">  -v, --verbose          output a diagnostic for every file processed</span><br><span class="line">      --dereference      affect the referent of each symbolic link (this is</span><br><span class="line">                         the default), rather than the symbolic link itself</span><br><span class="line">  -h, --no-dereference   affect symbolic links instead of any referenced file</span><br><span class="line">                         (useful only on systems that can change the</span><br><span class="line">                         ownership of a symlink)</span><br><span class="line">      --from&#x3D;当前所有者:当前所属组</span><br><span class="line">                         	只当每个文件的所有者和组符合选项所指定时才更改所</span><br><span class="line">				有者和组。其中一个可以省略，这时已省略的属性就不</span><br><span class="line">				需要符合原有的属性。</span><br><span class="line">      --no-preserve-root  do not treat &#39;&#x2F;&#39; specially (the default)</span><br><span class="line">      --preserve-root    fail to operate recursively on &#39;&#x2F;&#39;</span><br><span class="line">      --reference&#x3D;RFILE  use RFILE&#39;s owner and group rather than</span><br><span class="line">                         specifying OWNER:GROUP values</span><br><span class="line">  -R, --recursive        operate on files and directories recursively</span><br><span class="line"></span><br><span class="line">The following options modify how a hierarchy is traversed when the -R</span><br><span class="line">option is also specified.  If more than one is specified, only the final</span><br><span class="line">one takes effect.</span><br><span class="line"></span><br><span class="line">  -H                     if a command line argument is a symbolic link</span><br><span class="line">                         to a directory, traverse it</span><br><span class="line">  -L                     traverse every symbolic link to a directory</span><br><span class="line">                         encountered</span><br><span class="line">  -P                     do not traverse any symbolic links (default)</span><br><span class="line"></span><br><span class="line">      --help		显示此帮助信息并退出</span><br><span class="line">      --version		显示版本信息并退出</span><br><span class="line"></span><br><span class="line">Owner is unchanged if missing.  Group is unchanged if missing, but changed</span><br><span class="line">to login group if implied by a &#39;:&#39; following a symbolic OWNER.</span><br><span class="line">OWNER and GROUP may be numeric as well as symbolic.</span><br><span class="line"></span><br><span class="line">示例：</span><br><span class="line">  chown root &#x2F;u		将 &#x2F;u 的属主更改为&quot;root&quot;。</span><br><span class="line">  chown root:staff &#x2F;u	和上面类似，但同时也将其属组更改为&quot;staff&quot;。</span><br><span class="line">  chown -hR root &#x2F;u	将 &#x2F;u 及其子目录下所有文件的属主更改为&quot;root&quot;。</span><br></pre></td></tr></table></figure>
<p><strong>chgrp命令</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">用法：chgrp [选项]... 用户组 文件...</span><br><span class="line">　或：chgrp [选项]... --reference&#x3D;参考文件 文件...</span><br><span class="line">Change the group of each FILE to GROUP.</span><br><span class="line">With --reference, change the group of each FILE to that of RFILE.</span><br><span class="line"></span><br><span class="line">  -c, --changes          like verbose but report only when a change is made</span><br><span class="line">  -f, --silent, --quiet  suppress most error messages</span><br><span class="line">  -v, --verbose          output a diagnostic for every file processed</span><br><span class="line">      --dereference      affect the referent of each symbolic link (this is</span><br><span class="line">                         the default), rather than the symbolic link itself</span><br><span class="line">  -h, --no-dereference   affect symbolic links instead of any referenced file</span><br><span class="line">                         (useful only on systems that can change the</span><br><span class="line">                         ownership of a symlink)</span><br><span class="line">      --no-preserve-root  do not treat &#39;&#x2F;&#39; specially (the default)</span><br><span class="line">      --preserve-root    fail to operate recursively on &#39;&#x2F;&#39;</span><br><span class="line">      --reference&#x3D;RFILE  use RFILE&#39;s group rather than specifying a</span><br><span class="line">                         GROUP value</span><br><span class="line">  -R, --recursive        operate on files and directories recursively</span><br><span class="line"></span><br><span class="line">The following options modify how a hierarchy is traversed when the -R</span><br><span class="line">option is also specified.  If more than one is specified, only the final</span><br><span class="line">one takes effect.</span><br><span class="line"></span><br><span class="line">  -H                     if a command line argument is a symbolic link</span><br><span class="line">                         to a directory, traverse it</span><br><span class="line">  -L                     traverse every symbolic link to a directory</span><br><span class="line">                         encountered</span><br><span class="line">  -P                     do not traverse any symbolic links (default)</span><br><span class="line"></span><br><span class="line">      --help		显示此帮助信息并退出</span><br><span class="line">      --version		显示版本信息并退出</span><br><span class="line"></span><br><span class="line">示例：</span><br><span class="line">  chgrp staff &#x2F;u            将 &#x2F;u 的属组更改为&quot;staff&quot;。</span><br><span class="line">  chgrp -hR staff &#x2F;u    将 &#x2F;u 及其子目录下所有文件的属组更改为&quot;staff&quot;。</span><br></pre></td></tr></table></figure>
<h2 id="2-linux特殊权限"><a href="#2-linux特殊权限" class="headerlink" title="2.linux特殊权限"></a>2.linux特殊权限</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">linux特殊权限 7 777</span><br><span class="line"></span><br><span class="line">suid 4    当一个二进制文件拥有SUID权限后，当其他用户执行该二进制文件的时候，该二进制文件就会以他所有者的权限去执行</span><br><span class="line"></span><br><span class="line">sgid 2   </span><br><span class="line">  要求文件夹下的新建的子文件夹或者子文件继承父文件夹的属组</span><br><span class="line"></span><br><span class="line">sticky bit  1</span><br><span class="line">如果给文件夹 赋予粘连位  则该文件夹下的文件或文件夹只能由所有者及ROOT删除</span><br></pre></td></tr></table></figure>

<h2 id="3-linux隐藏权限"><a href="#3-linux隐藏权限" class="headerlink" title="3.linux隐藏权限"></a>3.linux隐藏权限</h2><p><strong>chattr命令</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">chattr [+-&#x3D;][ASacdistu] 文件或文件名</span><br><span class="line">命令选项：</span><br><span class="line">    + : 增加某个特殊参数，其他原本存在的参数不动。</span><br><span class="line">    - : 删除某个特殊参数，其他原本存在的参数不动。</span><br><span class="line">    &#x3D; : 设置一定，且仅有后面接的参数</span><br><span class="line">    A : 当设置了A属性时，这个文件（或目录）的存取时间atime（access）将不可被修改，可避免例如手提电脑有磁盘I&#x2F;O错误的情况发生。</span><br><span class="line">    S : 这个功能有点类似sync。就是将数据同步写入磁盘中。可以有效地避免数据流失。</span><br><span class="line">    a : 设置a之后，这个文件将只能增加数据，而不能删除，只有root才能设置这个属性。</span><br><span class="line">    c : 这个属性设置之后，将会自动将此文件“压缩”，在读取的时候将会自动解压缩，但在存储的时候，将会先进行压缩后再存储（对于大文件有用）。</span><br><span class="line">    d : 当执行dump（备份）程序的时候，设置d属性将可使该文件（或目录）具有转储功效。</span><br><span class="line">    i : i的作用很大。它可以让一个文件“不能被删除、改名、设置连接，也无法写入或新增数据”。对于系统安全性有相当大的帮助。</span><br><span class="line">    j : 当使用ext3文件系统格式时，设置j属性将会使文件在写入时先记录在journal中。但是，当文件系统设置参数为data&#x3D;journalled时，由于已经设置日志了，所以这个属性无效。</span><br><span class="line">    s : 当文件设置了s参数时，它将会从这个硬盘空间完全删除。</span><br><span class="line">    u : 与s相反，当使用u来设置文件时，则数据内容其实还存在磁盘中，可以用来还原删除.</span><br><span class="line">        注意：这个属性设置上，比较常见的是a与i的设置值，而且很多设置值必须要root才能设置。</span><br></pre></td></tr></table></figure>
<h2 id="4-linux-file-ACL-权限"><a href="#4-linux-file-ACL-权限" class="headerlink" title="4.linux file ACL 权限"></a>4.linux file ACL 权限</h2><p><strong>setfacl命令</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">setfacl 2.2.51 -- set file access control lists</span><br><span class="line">Usage: setfacl [-bkndRLP] &#123; -m|-M|-x|-X ... &#125; file ...</span><br><span class="line">  -m, --modify&#x3D;acl        modify the current ACL(s) of file(s)</span><br><span class="line">  -M, --modify-file&#x3D;file  read ACL entries to modify from file</span><br><span class="line">  -x, --remove&#x3D;acl        remove entries from the ACL(s) of file(s)</span><br><span class="line">  -X, --remove-file&#x3D;file  read ACL entries to remove from file</span><br><span class="line">  -b, --remove-all        remove all extended ACL entries</span><br><span class="line">  -k, --remove-default    remove the default ACL</span><br><span class="line">      --set&#x3D;acl           set the ACL of file(s), replacing the current ACL</span><br><span class="line">      --set-file&#x3D;file     read ACL entries to set from file</span><br><span class="line">      --mask              do recalculate the effective rights mask</span><br><span class="line">  -n, --no-mask           don&#39;t recalculate the effective rights mask</span><br><span class="line">  -d, --default           operations apply to the default ACL</span><br><span class="line">  -R, --recursive         recurse into subdirectories</span><br><span class="line">  -L, --logical           logical walk, follow symbolic links</span><br><span class="line">  -P, --physical          physical walk, do not follow symbolic links</span><br><span class="line">      --restore&#x3D;file      restore ACLs (inverse of &#96;getfacl -R&#39;)</span><br><span class="line">      --test              test mode (ACLs are not modified)</span><br><span class="line">  -v, --version           print version and exit</span><br><span class="line">  -h, --help              this help text</span><br></pre></td></tr></table></figure>
<p><strong>getfacl命令</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">getfacl 2.2.51 -- get file access control lists</span><br><span class="line">Usage: getfacl [-aceEsRLPtpndvh] file ...</span><br><span class="line">  -a,  --access           display the file access control list only</span><br><span class="line">  -d, --default           display the default access control list only</span><br><span class="line">  -c, --omit-header       do not display the comment header</span><br><span class="line">  -e, --all-effective     print all effective rights</span><br><span class="line">  -E, --no-effective      print no effective rights</span><br><span class="line">  -s, --skip-base         skip files that only have the base entries</span><br><span class="line">  -R, --recursive         recurse into subdirectories</span><br><span class="line">  -L, --logical           logical walk, follow symbolic links</span><br><span class="line">  -P, --physical          physical walk, do not follow symbolic links</span><br><span class="line">  -t, --tabular           use tabular output format</span><br><span class="line">  -n, --numeric           print numeric user&#x2F;group identifiers</span><br><span class="line">  -p, --absolute-names    don&#39;t strip leading &#39;&#x2F;&#39; in pathnames</span><br><span class="line">  -v, --version           print version and exit</span><br><span class="line">  -h, --help              this help text</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>linux(五)：linux系统进程管理</title>
    <url>/Linux/linux%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/</url>
    <content><![CDATA[<h1 id="Linux系统进程管理"><a href="#Linux系统进程管理" class="headerlink" title="Linux系统进程管理"></a>Linux系统进程管理</h1><ul>
<li>进程介绍</li>
<li>进程管理</li>
<li>进程优先级</li>
</ul>
<h2 id="1-进程介绍"><a href="#1-进程介绍" class="headerlink" title="1.进程介绍"></a>1.进程介绍</h2><h4 id="什么是进程？"><a href="#什么是进程？" class="headerlink" title="什么是进程？"></a>什么是进程？</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Linux系统中的几乎任何行动都会以进程的形式进行。如果你用网络浏览器查看网页，浏览器就作为进程运行。如果键入bash shell的命令行，这个shell就作为进程运行。如果你</span><br><span class="line">用chmod命令来更改文件权限，chmod就作为单独的进程来执行。进程是完成工作的形式，linux内核的基本职责就是为进程提供做事情的地方，不让彼此撞车。</span><br></pre></td></tr></table></figure>
<h4 id="进程组成"><a href="#进程组成" class="headerlink" title="进程组成"></a>进程组成</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">进程是已启动的可执进程序的运行实例，进程有以下组成部分:</span><br><span class="line">1.已分配内存的地址空间</span><br><span class="line">2.安全属性，包括所有权凭据个特权</span><br><span class="line">3.程序代码的一个或多个执行进程</span><br><span class="line">4.进程状态</span><br></pre></td></tr></table></figure>
<h4 id="进程与程序区分"><a href="#进程与程序区分" class="headerlink" title="进程与程序区分"></a>进程与程序区分</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">程序：二进制文件，静态。</span><br><span class="line"></span><br><span class="line">进程：是程序运行的过程，动态，有生命周期及运行状态</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">进程（Process）是一个程序在其自身的虚拟地址空间中的一次执行活动。之所以要创建进程，就是为了使多个程序可以并发的执行，从而提高系统的资源利用率和吞吐量。</span><br><span class="line"></span><br><span class="line">程序只是一个静态的指令集合；而进程是一个程序的动态执行过程，它具有生命期，是动态的产生和消亡的。</span><br></pre></td></tr></table></figure>
<p>ps top gnome-system-monitor pstree linux并发执行 jobs fg bg crtl+z at crontab</p>
<h4 id="进程家族"><a href="#进程家族" class="headerlink" title="进程家族"></a>进程家族</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">引导系统时，Linux内核的一个职责是启动第一个进程（通常是&#x2F;sbin&#x2F;init）。因为一个业已存在的进程继续派生，所有其他进程得以启动。</span><br></pre></td></tr></table></figure>
<h4 id="进程的属性："><a href="#进程的属性：" class="headerlink" title="进程的属性："></a>进程的属性：</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1.进程ID（PID）：是唯一的值，用来区分进程</span><br><span class="line">2.父进程（PPID）</span><br><span class="line">3.启动进程的用户ID（UID）和所归属的组（GID）</span><br><span class="line">4.进程状态：分为运行R，休眠S，僵尸Z</span><br><span class="line">5.进程执行的优先级</span><br><span class="line">6.进程所连接的终端名</span><br><span class="line">7.进程资源占用：如内存、CPU等</span><br></pre></td></tr></table></figure>
<h4 id="如何终止进程"><a href="#如何终止进程" class="headerlink" title="如何终止进程"></a>如何终止进程</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">当进程终止时，可能是通过选择退出（exit）正常终止，也可以是因为接收到信号而非正常终止。</span><br></pre></td></tr></table></figure>
<h4 id="孤儿进程"><a href="#孤儿进程" class="headerlink" title="孤儿进程"></a>孤儿进程</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">如果说处理子进程终止后的善后事宜是父进程的职责的话，那么如果</span><br><span class="line">父进程在子进程之前终止该怎么办？这个子进程就变成了孤儿进程。</span><br></pre></td></tr></table></figure>
<h4 id="僵尸进程"><a href="#僵尸进程" class="headerlink" title="僵尸进程"></a>僵尸进程</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">当进程退出，释放大多数资源和它的父进程收集它的返回值、释放剩余资源这两段时间之间，子进程处于一个特殊状态，被称为僵尸进程（zombie）。</span><br><span class="line">每个进程都会经过一个短暂的僵尸状态。</span><br></pre></td></tr></table></figure>
<h4 id="五种进程状态"><a href="#五种进程状态" class="headerlink" title="五种进程状态"></a>五种进程状态</h4><ul>
<li>可运行（R）<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">处于可运行状态的进程，一旦有机会，就会访问CPU。多个进程可以（而且经常）处于可以运行状态，</span><br><span class="line">但是因为在任何给定时间内只有一个进程可以在CPU上运行，所以实际上这些进程中只有一个在任何给定的实例上运行。</span><br></pre></td></tr></table></figure></li>
<li>自愿（可中断的）睡眠（s）<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">从名称中可以看出，处于自愿睡眠状态的进程选择处于该状态。通常，这一进程在某事发生之前无事可做。</span><br></pre></td></tr></table></figure></li>
<li>非自愿（不可中断或强制）睡眠(D)<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">内核迫使进程进入非自愿睡眠状态。该进程并没有选择休眠，它情愿运行以便做完事情。当资源被释放时，内核会唤醒进程并将设置为可运行状态。</span><br></pre></td></tr></table></figure></li>
<li>停止的（挂起的）进程（T）<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">用户有时决定挂起进程，被挂起的进程在被用户重新启动前不会执行任何操作。</span><br></pre></td></tr></table></figure></li>
<li>僵尸进程（Z）<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">每个快要终止的进程会经历一个短暂的僵尸状态，然而有时有些进程会一直停留在僵尸状态。</span><br></pre></td></tr></table></figure>
<h2 id="2-进程管理"><a href="#2-进程管理" class="headerlink" title="2.进程管理"></a>2.进程管理</h2><h4 id="1-gt-who"><a href="#1-gt-who" class="headerlink" title="1&gt;who"></a>1&gt;who</h4>查看当前在线用户的情况<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[kevin@localhost linux_study]$ who</span><br><span class="line">kevin    :0           2019-06-03 14:32 (:0)</span><br><span class="line">kevin    pts&#x2F;0        2019-06-03 14:34 (:0)</span><br><span class="line">kevin    pts&#x2F;1        2019-06-03 15:39 (:0)</span><br><span class="line"></span><br><span class="line"># kevin是登录的用户名</span><br><span class="line"># :0，pts&#x2F;0 ，pts&#x2F;1 使用的设备终端(pts)</span><br><span class="line"># 2019-06-03登录到系统的时间</span><br></pre></td></tr></table></figure></li>
</ul>
<p><strong><em>tty设备：</em></strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tty1 - tty6表示文字界面(快捷键：ctrl + alt + [F1-F6])</span><br><span class="line">tty7 图形界面(快捷键：ctrl +　alt + F7)</span><br></pre></td></tr></table></figure>
<h4 id="2-gt-ps"><a href="#2-gt-ps" class="headerlink" title="2&gt;ps"></a>2&gt;ps</h4><p>作用：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看整个系统内部所运行的进程状况</span><br></pre></td></tr></table></figure>
<p>涉及的参数：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># aux解析</span><br><span class="line">a:(all)当前系统所有用户的进程</span><br><span class="line">u:查看进程所有者及其他一些信息</span><br><span class="line">x:显示没有控制终端的进程 -- 不能与用户进行交互的进程【输入、输出】</span><br></pre></td></tr></table></figure>
<p>显示当前用户下所有进程：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[kevin@localhost ~]$ ps aux</span><br><span class="line">USER        PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND</span><br><span class="line">root          1  0.2  0.0 128256  6908 ?        Ss   16:40   0:01 &#x2F;usr&#x2F;lib&#x2F;syste</span><br><span class="line">root          2  0.0  0.0      0     0 ?        S    16:40   0:00 [kthreadd]</span><br><span class="line">root          3  0.0  0.0      0     0 ?        S    16:40   0:00 [ksoftirqd&#x2F;0]</span><br><span class="line">root          5  0.0  0.0      0     0 ?        S&lt;   16:40   0:00 [kworker&#x2F;0:0H]</span><br><span class="line">root          7  0.0  0.0      0     0 ?        S    16:40   0:00 [migration&#x2F;0]</span><br><span class="line">root          8  0.0  0.0      0     0 ?        S    16:40   0:00 [rcu_bh]</span><br><span class="line">root          9  0.1  0.0      0     0 ?        R    16:40   0:00 [rcu_sched]</span><br><span class="line">root         10  0.0  0.0      0     0 ?        S&lt;   16:40   0:00 [lru-add-drain</span><br><span class="line">root         11  0.0  0.0      0     0 ?        S    16:40   0:00 [watchdog&#x2F;0]</span><br><span class="line">root         13  0.0  0.0      0     0 ?        S    16:40   0:00 [kdevtmpfs]</span><br><span class="line">root         14  0.0  0.0      0     0 ?        S&lt;   16:40   0:00 [netns]</span><br><span class="line">root         15  0.0  0.0      0     0 ?        S    16:40   0:00 [khungtaskd]</span><br><span class="line">root         16  0.0  0.0      0     0 ?        S&lt;   16:40   0:00 [writeback]</span><br><span class="line">root         17  0.0  0.0      0     0 ?        S&lt;   16:40   0:00 [kintegrityd]</span><br><span class="line">root         18  0.0  0.0      0     0 ?        S&lt;   16:40   0:00 [bioset]</span><br><span class="line">root         19  0.0  0.0      0     0 ?        S&lt;   16:40   0:00 [bioset]</span><br><span class="line">root         20  0.0  0.0      0     0 ?        S&lt;   16:40   0:00 [bioset]</span><br><span class="line">root         21  0.0  0.0      0     0 ?        S&lt;   16:40   0:00 [kblockd]</span><br></pre></td></tr></table></figure>
<p>对显示的进程过滤：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ps aux | grep xxx</span><br><span class="line"></span><br><span class="line"># 案例：</span><br><span class="line">[kevin@localhost ~]$ ps aux | grep kevin</span><br><span class="line">kevin     11445  0.0  0.0 317548  4140 ?        Sl   16:50   0:00 &#x2F;usr&#x2F;bin&#x2F;gnome-keyring-daemon --daemonize --login</span><br><span class="line">kevin     11457  0.0  0.1 819180  9628 ?        Ssl  16:50   0:00 &#x2F;usr&#x2F;libexec&#x2F;gnome-session-binary --session gnome-classic</span><br><span class="line">kevin     11474  0.0  0.0  58892   968 ?        S    16:50   0:00 dbus-launch --sh-syntax --exit-with-session</span><br><span class="line"></span><br><span class="line"># grep查询是需要占用一个进程的，所有结果 &gt; 2 才能说明查询结果存在</span><br><span class="line"># 如果结果有一条，表示没有查询的进程</span><br><span class="line"># 查询结果中PID表示进程ID</span><br></pre></td></tr></table></figure>
<h4 id="3-gt-kill"><a href="#3-gt-kill" class="headerlink" title="3&gt;kill"></a>3&gt;kill</h4><p>作用：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">用来终止指定的进程（terminate a process）的运行</span><br></pre></td></tr></table></figure>
<p>查看信号编号：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">kill -l</span><br><span class="line"></span><br><span class="line"># 案例</span><br><span class="line">[kevin@localhost ~]$ kill -l</span><br><span class="line"> 1) SIGHUP	 2) SIGINT	 3) SIGQUIT	 4) SIGILL	 5) SIGTRAP</span><br><span class="line"> 6) SIGABRT	 7) SIGBUS	 8) SIGFPE	 9) SIGKILL	10) SIGUSR1</span><br><span class="line">11) SIGSEGV	12) SIGUSR2	13) SIGPIPE	14) SIGALRM	15) SIGTERM</span><br><span class="line">16) SIGSTKFLT	17) SIGCHLD	18) SIGCONT	19) SIGSTOP	20) SIGTSTP</span><br><span class="line">21) SIGTTIN	22) SIGTTOU	23) SIGURG	24) SIGXCPU	25) SIGXFSZ</span><br><span class="line">26) SIGVTALRM	27) SIGPROF	28) SIGWINCH	29) SIGIO	30) SIGPWR</span><br><span class="line">31) SIGSYS	34) SIGRTMIN	35) SIGRTMIN+1	36) SIGRTMIN+2	37) SIGRTMIN+3</span><br><span class="line">38) SIGRTMIN+4	39) SIGRTMIN+5	40) SIGRTMIN+6	41) SIGRTMIN+7	42) SIGRTMIN+8</span><br><span class="line">43) SIGRTMIN+9	44) SIGRTMIN+10	45) SIGRTMIN+11	46) SIGRTMIN+12	47) SIGRTMIN+13</span><br><span class="line">48) SIGRTMIN+14	49) SIGRTMIN+15	50) SIGRTMAX-14	51) SIGRTMAX-13	52) SIGRTMAX-12</span><br><span class="line">53) SIGRTMAX-11	54) SIGRTMAX-10	55) SIGRTMAX-9	56) SIGRTMAX-8	57) SIGRTMAX-7</span><br><span class="line">58) SIGRTMAX-6	59) SIGRTMAX-5	60) SIGRTMAX-4	61) SIGRTMAX-3	62) SIGRTMAX-2</span><br><span class="line">63) SIGRTMAX-1	64) SIGRTMAX</span><br></pre></td></tr></table></figure>
<p>杀死进程：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">kill -9 PID(进程标识号)</span><br></pre></td></tr></table></figure>
<h4 id="4-gt-env"><a href="#4-gt-env" class="headerlink" title="4&gt;env"></a>4&gt;env</h4><p>作用：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看当前进程环境变量</span><br></pre></td></tr></table></figure>
<p>环境变量：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">当前系统下用户的配置路径信息</span><br><span class="line">格式为键值对：key&#x3D;value：value  （多个值之间用 ： 分隔）</span><br><span class="line">PATH：该环境变量中记录着shell命令解析器去查找命令的目录位置，从前往后的顺序查找</span><br></pre></td></tr></table></figure>
<p>实例：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">XDG_VTNR&#x3D;1</span><br><span class="line">SSH_AGENT_PID&#x3D;11646</span><br><span class="line">XDG_SESSION_ID&#x3D;2</span><br><span class="line">HOSTNAME&#x3D;localhost.localdomain</span><br><span class="line">IMSETTINGS_INTEGRATE_DESKTOP&#x3D;yes</span><br><span class="line">VTE_VERSION&#x3D;5202</span><br><span class="line">TERM&#x3D;xterm-256color</span><br><span class="line">SHELL&#x3D;&#x2F;bin&#x2F;bash</span><br><span class="line">XDG_MENU_PREFIX&#x3D;gnome-</span><br><span class="line">HISTSIZE&#x3D;1000</span><br><span class="line">GJS_DEBUG_OUTPUT&#x3D;stderr</span><br><span class="line">GNOME_TERMINAL_SCREEN&#x3D;&#x2F;org&#x2F;gnome&#x2F;Terminal&#x2F;screen&#x2F;a9e74588_a45a_49d7_8c6a_741c484a4777</span><br><span class="line">GJS_DEBUG_TOPICS&#x3D;JS ERROR;JS LOG</span><br><span class="line">IMSETTINGS_MODULE&#x3D;IBus</span><br><span class="line">USER&#x3D;kevin</span><br><span class="line">LS_COLORS&#x3D;rs&#x3D;0:di&#x3D;38;5;27:ln&#x3D;38;5;51:mh&#x3D;44;38;5;15:pi&#x3D;40;38;5;11:so&#x3D;38;5;13:do&#x3D;38;5;5:bd&#x3D;48;5;232;38;5;11:cd&#x3D;48;5;232;38;5;3:or&#x3D;48;5;232;38;5;9:mi&#x3D;05;48;5;232;38;5;15:su&#x3D;48;5;196;38;5;15:sg&#x3D;48;5;11;38;5;16:ca&#x3D;48;5;196;38;5;226:tw&#x3D;48;5;10;38;5;16:ow&#x3D;48;5;10;38;5;21:st&#x3D;48;5;21;38;5;15:ex&#x3D;38;5;34:*.tar&#x3D;38;5;9:*.tgz&#x3D;38;5;9:*.arc&#x3D;38;5;9:*.arj&#x3D;38;5;9:*.taz&#x3D;38;5;9:*.lha&#x3D;38;5;9:*.lz4&#x3D;38;5;9:*.lzh&#x3D;38;5;9:*.lzma&#x3D;38;5;9:*.tlz&#x3D;38;5;9:*.txz&#x3D;38;5;9:*.tzo&#x3D;38;5;9:*.t7z&#x3D;38;5;9:*.zip&#x3D;38;5;9:*.z&#x3D;38;5;9:*.Z&#x3D;38;5;9:*.dz&#x3D;38;5;9:*.gz&#x3D;38;5;9:*.lrz&#x3D;38;5;9:*.lz&#x3D;38;5;9:*.lzo&#x3D;38;5;9:*.xz&#x3D;38;5;9:*.bz2&#x3D;38;5;9:*.bz&#x3D;38;5;9:*.tbz&#x3D;38;5;9:*.tbz2&#x3D;38;5;9:*.tz&#x3D;38;5;9:*.deb&#x3D;38;5;9:*.rpm&#x3D;38;5;9:*.jar&#x3D;38;5;9:*.war&#x3D;38;5;9:*.ear&#x3D;38;5;9:*.sar&#x3D;38;5;9:*.rar&#x3D;38;5;9:*.alz&#x3D;38;5;9:*.ace&#x3D;38;5;9:*.zoo&#x3D;38;5;9:*.cpio&#x3D;38;5;9:*.7z&#x3D;38;5;9:*.rz&#x3D;38;5;9:*.cab&#x3D;38;5;9:*.jpg&#x3D;38;5;13:*.jpeg&#x3D;38;5;13:*.gif&#x3D;38;5;13:*.bmp&#x3D;38;5;13:*.pbm&#x3D;38;5;13:*.pgm&#x3D;38;5;13:*.ppm&#x3D;38;5;13:*.tga&#x3D;38;5;13:*.xbm&#x3D;38;5;13:*.xpm&#x3D;38;5;13:*.tif&#x3D;38;5;13:*.tiff&#x3D;38;5;13:*.png&#x3D;38;5;13:*.svg&#x3D;38;5;13:*.svgz&#x3D;38;5;13:*.mng&#x3D;38;5;13:*.pcx&#x3D;38;5;13:*.mov&#x3D;38;5;13:*.mpg&#x3D;38;5;13:*.mpeg&#x3D;38;5;13:*.m2v&#x3D;38;5;13:*.mkv&#x3D;38;5;13:*.webm&#x3D;38;5;13:*.ogm&#x3D;38;5;13:*.mp4&#x3D;38;5;13:*.m4v&#x3D;38;5;13:*.mp4v&#x3D;38;5;13:*.vob&#x3D;38;5;13:*.qt&#x3D;38;5;13:*.nuv&#x3D;38;5;13:*.wmv&#x3D;38;5;13:*.asf&#x3D;38;5;13:*.rm&#x3D;38;5;13:*.rmvb&#x3D;38;5;13:*.flc&#x3D;38;5;13:*.avi&#x3D;38;5;13:*.fli&#x3D;38;5;13:*.flv&#x3D;38;5;13:*.gl&#x3D;38;5;13:*.dl&#x3D;38;5;13:*.xcf&#x3D;38;5;13:*.xwd&#x3D;38;5;13:*.yuv&#x3D;38;5;13:*.cgm&#x3D;38;5;13:*.emf&#x3D;38;5;13:*.axv&#x3D;38;5;13:*.anx&#x3D;38;5;13:*.ogv&#x3D;38;5;13:*.ogx&#x3D;38;5;13:*.aac&#x3D;38;5;45:*.au&#x3D;38;5;45:*.flac&#x3D;38;5;45:*.mid&#x3D;38;5;45:*.midi&#x3D;38;5;45:*.mka&#x3D;38;5;45:*.mp3&#x3D;38;5;45:*.mpc&#x3D;38;5;45:*.ogg&#x3D;38;5;45:*.ra&#x3D;38;5;45:*.wav&#x3D;38;5;45:*.axa&#x3D;38;5;45:*.oga&#x3D;38;5;45:*.spx&#x3D;38;5;45:*.xspf&#x3D;38;5;45:</span><br><span class="line">GNOME_TERMINAL_SERVICE&#x3D;:1.102</span><br><span class="line">SSH_AUTH_SOCK&#x3D;&#x2F;run&#x2F;user&#x2F;1000&#x2F;keyring&#x2F;ssh</span><br><span class="line">SESSION_MANAGER&#x3D;local&#x2F;unix:@&#x2F;tmp&#x2F;.ICE-unix&#x2F;11457,unix&#x2F;unix:&#x2F;tmp&#x2F;.ICE-unix&#x2F;11457</span><br><span class="line">USERNAME&#x3D;kevin</span><br><span class="line">GNOME_SHELL_SESSION_MODE&#x3D;classic</span><br><span class="line">PATH&#x3D;&#x2F;usr&#x2F;local&#x2F;bin:&#x2F;usr&#x2F;local&#x2F;sbin:&#x2F;usr&#x2F;bin:&#x2F;usr&#x2F;sbin:&#x2F;bin:&#x2F;sbin:&#x2F;home&#x2F;kevin&#x2F;.local&#x2F;bin:&#x2F;home&#x2F;kevin&#x2F;bin</span><br><span class="line">MAIL&#x3D;&#x2F;var&#x2F;spool&#x2F;mail&#x2F;kevin</span><br><span class="line">DESKTOP_SESSION&#x3D;gnome-classic</span><br><span class="line">QT_IM_MODULE&#x3D;xim</span><br><span class="line">XDG_SESSION_TYPE&#x3D;x11</span><br><span class="line">PWD&#x3D;&#x2F;home&#x2F;kevin</span><br><span class="line">XMODIFIERS&#x3D;@im&#x3D;ibus</span><br><span class="line">LANG&#x3D;zh_CN.UTF-8</span><br><span class="line">GDM_LANG&#x3D;zh_CN.UTF-8</span><br><span class="line">GDMSESSION&#x3D;gnome-classic</span><br><span class="line">HISTCONTROL&#x3D;ignoredups</span><br><span class="line">XDG_SEAT&#x3D;seat0</span><br><span class="line">HOME&#x3D;&#x2F;home&#x2F;kevin</span><br><span class="line">SHLVL&#x3D;2</span><br><span class="line">GNOME_DESKTOP_SESSION_ID&#x3D;this-is-deprecated</span><br><span class="line">XDG_SESSION_DESKTOP&#x3D;gnome-classic</span><br><span class="line">LOGNAME&#x3D;kevin</span><br><span class="line">XDG_DATA_DIRS&#x3D;&#x2F;home&#x2F;kevin&#x2F;.local&#x2F;share&#x2F;flatpak&#x2F;exports&#x2F;share&#x2F;:&#x2F;var&#x2F;lib&#x2F;flatpak&#x2F;exports&#x2F;share&#x2F;:&#x2F;usr&#x2F;local&#x2F;share&#x2F;:&#x2F;usr&#x2F;share&#x2F;</span><br><span class="line">DBUS_SESSION_BUS_ADDRESS&#x3D;unix:abstract&#x3D;&#x2F;tmp&#x2F;dbus-Hair4bK8ty,guid&#x3D;8f919aee2ddb3fbb3dbc2db75cf4df58</span><br><span class="line">LESSOPEN&#x3D;||&#x2F;usr&#x2F;bin&#x2F;lesspipe.sh %s</span><br><span class="line">WINDOWPATH&#x3D;1</span><br><span class="line">XDG_RUNTIME_DIR&#x3D;&#x2F;run&#x2F;user&#x2F;1000</span><br><span class="line">DISPLAY&#x3D;:0</span><br><span class="line">XDG_CURRENT_DESKTOP&#x3D;GNOME-Classic:GNOME</span><br><span class="line">COLORTERM&#x3D;truecolor</span><br><span class="line">XAUTHORITY&#x3D;&#x2F;run&#x2F;gdm&#x2F;auth-for-kevin-GOehNB&#x2F;database</span><br><span class="line">_&#x3D;&#x2F;usr&#x2F;bin&#x2F;env</span><br></pre></td></tr></table></figure>

<h4 id="5-gt-top"><a href="#5-gt-top" class="headerlink" title="5&gt;top"></a>5&gt;top</h4><p>相当于windows下的任务管理器</p>
<p><strong>安装htop</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo yum install htop</span><br></pre></td></tr></table></figure>

<p><strong>加强版htop:</strong></p>
<p>效果：</p>
<p><img src="http://static.open-open.com/lib/uploadImg/20141203/20141203210952_64.png" alt="image"></p>
<p>各项从上至下分别说明如下：</p>
<p><img src="http://static.open-open.com/lib/uploadImg/20141203/20141203210953_803.png" alt="image"></p>
<p>左边部分从上至下，分别为，cpu、内存、交换分区的使用情况，右边部分为：Tasks为进程总数，当前运行的进程数、Load average为系统1分钟，5分钟，10分钟的平均负载情况、Uptime为系统运行的时间。</p>
<p><img src="http://static.open-open.com/lib/uploadImg/20141203/20141203210953_984.png" alt="image"></p>
<p>以上各项分别为：</p>
<ul>
<li>PID：进行的标识号</li>
<li>USER：运行此进程的用户</li>
<li>PRI：进程的优先级</li>
<li>NI：进程的优先级别值，默认的为0，可以进行调整</li>
<li>VIRT：进程占用的虚拟内存值</li>
<li>RES：进程占用的物理内存值</li>
<li>SHR：进程占用的共享内存值</li>
<li>S：进程的运行状况，R表示正在运行、S表示休眠，等待唤醒、Z表示僵死状态</li>
<li>%CPU：该进程占用的CPU使用率</li>
<li>%MEM：该进程占用的物理内存和总内存的百分比</li>
<li>TIME+：该进程启动后占用的总的CPU时间</li>
</ul>
<p><img src="http://static.open-open.com/lib/uploadImg/20141203/20141203210953_292.png" alt="image"></p>
<p>==<em>F1：显示帮助信息</em>==</p>
<p><img src="http://static.open-open.com/lib/uploadImg/20141203/20141203210954_995.png" alt="image"></p>
<p>==<em>F2 Htop设定</em>==</p>
<p>鼠标点击Setup或者按下F2 之后进入htop 设定的页面，</p>
<p><img src="http://static.open-open.com/lib/uploadImg/20141203/20141203210954_435.png" alt="image"></p>
<p>Setup 选项下的：</p>
<p>1.Meters</p>
<p>设定顶端的 显示信息，分为左右两侧，Left column 表示左侧的显示的信息，Right column表示右侧显示的信息，如果要新加选项，可以选择Available meters添加，F5新增到上方左侧，F6新增到上方右侧。Left column和Right column下面的选项，可以选定信息的显示方式，有LED、Bar(进度条)、Text(文本模式)，可以根据个人喜好进行设置</p>
<ol start="2">
<li>Display options</li>
</ol>
<p><img src="http://static.open-open.com/lib/uploadImg/20141203/20141203210955_617.png" alt="image"></p>
<p>选择要显示的内容，按空格 x表示显示，选择完后，按F10保存选择要显示的内容，按空格 x表示显示，选择完后，按F10保存</p>
<p>3.Colors</p>
<p><img src="http://static.open-open.com/lib/uploadImg/20141203/20141203210955_510.png" alt="image"></p>
<p>设定界面以什么颜色来显示，个人认为用处不大，各人喜好不同，假如我们选择Black on White后显示效果如下</p>
<p><img src="http://static.open-open.com/lib/uploadImg/20141203/20141203210955_77.png" alt="image"></p>
<p>4.Colums</p>
<p><img src="http://static.open-open.com/lib/uploadImg/20141203/20141203210955_60.png" alt="image"></p>
<p>作用是增加或取消要显示的各项内容，选择后F7(向上移动)、F8(向下移动)、F9(取消显示、F10(保存更改))此处增加了PPID、PGRP，根据各人需求，显示那些信息。</p>
<p>==<em>F3 搜索进程</em>==</p>
<p>在界面下按F3或直接输入”/”就可以直接进入搜索模式，是按照进程名进行搜索的。例如</p>
<p><img src="http://static.open-open.com/lib/uploadImg/20141203/20141203210956_380.png" alt="image"></p>
<p>搜索到的进程会用设定的颜色标记出来，方便查看</p>
<p>==<em>F4：过滤器</em>==</p>
<p>相当于模糊查找，不区分大小写，下方输入要搜索的内容后，则界面只显示搜索到的内容，更加方便查看，例如：</p>
<p><img src="http://static.open-open.com/lib/uploadImg/20141203/20141203210956_321.png" alt="image"></p>
<p>==<em>F5:以树形方式显示</em>==</p>
<p><img src="http://static.open-open.com/lib/uploadImg/20141203/20141203210956_876.png" alt="image"></p>
<p>==<em>F6：排序方式</em>==</p>
<p><img src="http://static.open-open.com/lib/uploadImg/20141203/20141203210956_8.png" alt="image"></p>
<p>按下F6后会跳转至上图界面，让您选择以什么方式进行排序,在Sort by下选择您要以什么来排序</p>
<p>==<em>F7,F8：调整进程nice值</em>==</p>
<p>F7表示减小nice值(增大优先级),F8增大nice值(减小优先级)，选择某一进程，按F7或F8来增大或减小nice值，nice值范围为-20-19，此处我把apache的nice值调整到了19</p>
<p><img src="http://static.open-open.com/lib/uploadImg/20141203/20141203210957_254.png" alt="image"></p>
<p>==<em>F9：杀死进程</em>==</p>
<p>选择某一进程按F9即可杀死此进程，很方便</p>
<p>==<em>F10:退出htop</em>==</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>linux(二)：linux用户和组</title>
    <url>/Linux/%E7%94%A8%E6%88%B7%E5%92%8C%E7%BB%84/</url>
    <content><![CDATA[<h1 id="Linux用户和组"><a href="#Linux用户和组" class="headerlink" title="Linux用户和组"></a>Linux用户和组</h1><ul>
<li>用户创建，删除，修改</li>
<li>密码及密码文件</li>
<li>组创建，删除，修改</li>
<li>组密码及组配置文件</li>
<li>相关文件a</li>
</ul>
<p><strong>linux用户分类</strong></p>
<p>超级管理员: UID为0 root用户拥有至高无上的命令，root用户不能改名</p>
<p>系统用户:UID小于1000，用于管理服务，一般不允许登陆</p>
<p>普通用户:UID大于或等于1000，权限较小，允许登陆，只能使用bin下命令</p>
<h2 id="1-用户创建，删除，修改"><a href="#1-用户创建，删除，修改" class="headerlink" title="1.用户创建，删除，修改"></a>1.用户创建，删除，修改</h2><h4 id="useradd命令"><a href="#useradd命令" class="headerlink" title="useradd命令"></a>useradd命令</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> useradd - create a new user or update default new user information</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-c,  --comment  描述</span><br><span class="line">-d,  --home HOME_DIR 家目录</span><br><span class="line">-e, --expiredate EXPIRE_DATE  过期时间</span><br><span class="line">-f, --inactive INACTIVE 是否启用过期机制</span><br><span class="line">-g, --gid GROUP   指定组ID号</span><br><span class="line">-G, --groups GROUP1[,GROUP2,...[,GROUPN]]]  附加组</span><br><span class="line">-m, --create-home     建立家目录           </span><br><span class="line">-M                    不建立家目录</span><br><span class="line">           Do not create the user′s home directory, even if the system wide</span><br><span class="line">           setting from &#x2F;etc&#x2F;login.defs (CREATE_HOME) is set to yes.</span><br><span class="line"></span><br><span class="line">-N, --no-user-group 不指定用户同名组</span><br><span class="line">-r, --system    指定该帐号是系统帐号</span><br><span class="line">-s, --shell SHELL  指定登录shell</span><br><span class="line">-u, --uid UID   指定用户ID号</span><br><span class="line">-U, --user-group 指定用户创建用户同名组</span><br><span class="line">-o 创建用户是可以uid重复</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">注意：用户名不能超过 32 个字符</span><br></pre></td></tr></table></figure>
<p>效果：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@localhost home]# ls</span><br><span class="line">kevin</span><br><span class="line">[root@localhost home]# sudo useradd tt</span><br><span class="line">[root@localhost home]# ls</span><br><span class="line">kevin  tt</span><br><span class="line">[root@localhost home]# su - tt</span><br><span class="line">[tt@localhost ~]$ exit</span><br><span class="line">登出</span><br></pre></td></tr></table></figure>

<h4 id="adduser命令"><a href="#adduser命令" class="headerlink" title="adduser命令"></a>adduser命令</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">用法：adduser [选项] 登录</span><br><span class="line">      adduser -D</span><br><span class="line">      adduser -D [选项]</span><br><span class="line"></span><br><span class="line">选项：</span><br><span class="line">  -b, --base-dir BASE_DIR	新账户的主目录的基目录</span><br><span class="line">  -c, --comment COMMENT         新账户的 GECOS 字段</span><br><span class="line">  -d, --home-dir HOME_DIR       新账户的主目录</span><br><span class="line">  -D, --defaults		显示或更改默认的 useradd 配置</span><br><span class="line"> -e, --expiredate EXPIRE_DATE  新账户的过期日期</span><br><span class="line">  -f, --inactive INACTIVE       新账户的密码不活动期</span><br><span class="line">  -g, --gid GROUP		新账户主组的名称或 ID</span><br><span class="line">  -G, --groups GROUPS	新账户的附加组列表</span><br><span class="line">  -h, --help                    显示此帮助信息并推出</span><br><span class="line">  -k, --skel SKEL_DIR	使用此目录作为骨架目录</span><br><span class="line">  -K, --key KEY&#x3D;VALUE           不使用 &#x2F;etc&#x2F;login.defs 中的默认值</span><br><span class="line">  -l, --no-log-init	不要将此用户添加到最近登录和登录失败数据库</span><br><span class="line">  -m, --create-home	创建用户的主目录</span><br><span class="line">  -M, --no-create-home		不创建用户的主目录</span><br><span class="line">  -N, --no-user-group	不创建同名的组</span><br><span class="line">  -o, --non-unique		允许使用重复的 UID 创建用户</span><br><span class="line">  -p, --password PASSWORD		加密后的新账户密码</span><br><span class="line">  -r, --system                  创建一个系统账户</span><br><span class="line">  -R, --root CHROOT_DIR         chroot 到的目录</span><br><span class="line">  -s, --shell SHELL		新账户的登录 shell</span><br><span class="line">  -u, --uid UID			新账户的用户 ID</span><br><span class="line">  -U, --user-group		创建与用户同名的组</span><br><span class="line">  -Z, --selinux-user SEUSER		为 SELinux 用户映射使用指定 SEUSER</span><br></pre></td></tr></table></figure>
<p>效果：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 建议使用此方法</span><br><span class="line">[root@localhost home]# ls</span><br><span class="line">kevin</span><br><span class="line">[root@localhost home]# sudo adduser kevin1</span><br><span class="line">[root@localhost home]# ls</span><br><span class="line">kevin  kevin1</span><br><span class="line">[root@localhost home]# su - kevin1</span><br><span class="line">[kevin1@localhost ~]$ exit</span><br><span class="line">登出</span><br></pre></td></tr></table></figure>
<p>两个用户创建命令之间的区别</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adduser： 会自动为创建的用户指定主目录、系统shell版本，会在创建时输入用户密码。</span><br><span class="line"></span><br><span class="line">useradd：需要使用参数选项指定上述基本设置，如果不使用任何参数，则创建的用户无密码、无主目录、没有指定shell版本。</span><br></pre></td></tr></table></figure>

<h4 id="userdel命令"><a href="#userdel命令" class="headerlink" title="userdel命令"></a>userdel命令</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">用法：userdel [选项] 登录</span><br><span class="line"></span><br><span class="line">选项：</span><br><span class="line">  -f, --force                   force some actions that would fail otherwise</span><br><span class="line">                                e.g. removal of user still logged in</span><br><span class="line">                                or files, even if not owned by the user</span><br><span class="line">  -h, --help                    显示此帮助信息并推出</span><br><span class="line">  -r, --remove                  删除主目录和邮件池</span><br><span class="line">  -R, --root CHROOT_DIR         chroot 到的目录</span><br><span class="line">  -Z, --selinux-user            为用户删除所有的 SELinux 用户映射</span><br></pre></td></tr></table></figure>
<p>效果：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">只删除用户：</span><br><span class="line">[root@localhost home]# ls</span><br><span class="line">kevin  kevin1</span><br><span class="line">[root@localhost home]# sudo userdel kevin1</span><br><span class="line">[root@localhost home]# ls</span><br><span class="line">kevin  kevin1</span><br><span class="line">[root@localhost home]# su - kevin1</span><br><span class="line">su: user kevin1 does not exist</span><br><span class="line">[root@localhost home]# rm -rf kevin1</span><br><span class="line">[root@localhost home]# ls</span><br><span class="line">kevin</span><br><span class="line"></span><br><span class="line">这种比较好，连同用户主目录一块删除：</span><br><span class="line">[root@localhost home]# ls</span><br><span class="line">kevin  kevin2</span><br><span class="line">[root@localhost home]# sudo userdel -r kevin2</span><br><span class="line">[root@localhost home]# ls</span><br><span class="line">kevin</span><br></pre></td></tr></table></figure>
<h2 id="2-密码设置及密码文件"><a href="#2-密码设置及密码文件" class="headerlink" title="2.密码设置及密码文件"></a>2.密码设置及密码文件</h2><h4 id="passwd命令"><a href="#passwd命令" class="headerlink" title="passwd命令"></a>passwd命令</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">用法: passwd [选项...] &lt;帐号名称&gt;</span><br><span class="line">  -k, --keep-tokens       保持身份验证令牌不过期</span><br><span class="line">  -d, --delete            删除已命名帐号的密码(只有根用户才能进行此操作)</span><br><span class="line">  -l, --lock              锁定指名帐户的密码(仅限 root 用户)</span><br><span class="line">  -u, --unlock            解锁指名账户的密码(仅限 root 用户)</span><br><span class="line">  -e, --expire            终止指名帐户的密码(仅限 root 用户)</span><br><span class="line">  -f, --force             强制执行操作</span><br><span class="line">  -x, --maximum&#x3D;DAYS      密码的最长有效时限(只有根用户才能进行此操作)</span><br><span class="line">  -n, --minimum&#x3D;DAYS      密码的最短有效时限(只有根用户才能进行此操作)</span><br><span class="line">  -w, --warning&#x3D;DAYS      在密码过期前多少天开始提醒用户(只有根用户才能进行此操作)</span><br><span class="line">  -i, --inactive&#x3D;DAYS     当密码过期后经过多少天该帐号会被禁用(只有根用户才能进行此操作)</span><br><span class="line">  -S, --status            报告已命名帐号的密码状态(只有根用户才能进行此操作)</span><br><span class="line">  --stdin                 从标准输入读取令牌(只有根用户才能进行此操作)</span><br><span class="line"></span><br><span class="line">Help options:</span><br><span class="line">  -?, --help              Show this help message</span><br><span class="line">  --usage                 Display brief usage message</span><br></pre></td></tr></table></figure>
<p>效果：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1.root用户修改普通用户密码：</span><br><span class="line">[root@localhost home]# passwd kevin2</span><br><span class="line">更改用户 kevin2 的密码 。</span><br><span class="line">新的 密码：</span><br><span class="line">无效的密码： 密码少于 7 个字符</span><br><span class="line">重新输入新的 密码：</span><br><span class="line">passwd：所有的身份验证令牌已经成功更新。</span><br><span class="line"></span><br><span class="line">2.普通用户修改自己的密码：</span><br><span class="line">[root@localhost home]# su - kevin2</span><br><span class="line">上一次登录：三 5月 29 01:31:09 CST 2019pts&#x2F;0 上</span><br><span class="line">[kevin2@localhost ~]$ passwd</span><br><span class="line">更改用户 kevin2 的密码 。</span><br><span class="line">为 kevin2 更改 STRESS 密码。</span><br><span class="line">（当前）UNIX 密码：</span><br><span class="line">新的 密码：</span><br><span class="line">重新输入新的 密码：</span><br><span class="line">passwd：所有的身份验证令牌已经成功更新。</span><br><span class="line"></span><br><span class="line">3.把某个用户修改密码锁定：</span><br><span class="line">[root@localhost home]# passwd -l kevin2</span><br><span class="line">锁定用户 kevin2 的密码 。</span><br><span class="line">passwd: 操作成功</span><br><span class="line">[root@localhost home]# su - kevin2</span><br><span class="line">上一次登录：三 5月 29 01:34:29 CST 2019pts&#x2F;0 上</span><br><span class="line">[kevin2@localhost ~]$ passwd</span><br><span class="line">更改用户 kevin2 的密码 。</span><br><span class="line">为 kevin2 更改 STRESS 密码。</span><br><span class="line">（当前）UNIX 密码：</span><br><span class="line">passwd: 鉴定令牌操作错误</span><br></pre></td></tr></table></figure>
<h4 id="密码文件"><a href="#密码文件" class="headerlink" title="密码文件"></a>密码文件</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;etc&#x2F;passwd</span><br><span class="line">   User account information.</span><br><span class="line"></span><br><span class="line">       [用户名]：[密码]：[UID]：[GID]：[身份描述]：[主目录]：[登录shell] </span><br><span class="line"></span><br><span class="line">&#x2F;etc&#x2F;shadow</span><br><span class="line">           Secure user account information.</span><br><span class="line"></span><br><span class="line">                 用户名:这是用户登录系统时使用的用户名，它在系统中是惟一的</span><br><span class="line">                 口令:此字段存放加密的口令</span><br><span class="line">                 最后一次修改的时间:标识从某一时刻起到用户最后一次修改口令的天数</span><br><span class="line">                 最小时间间隔:两次修改口令之间的最小天数</span><br><span class="line">                 最大时间间隔:口令保持有效的最多天数，即多少天后必须修改口令</span><br><span class="line">                 警告时间:从系统开始警告到口令正式失效的天数</span><br><span class="line">                 不活动时间:口令过期多少天后，该账号被禁用</span><br><span class="line">                 失效时间:指示口令失效的绝对天数（从1970年1月1日开始计算）</span><br><span class="line">                 标志:未使用</span><br></pre></td></tr></table></figure>
<p>具体内容：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@localhost etc]# pwd</span><br><span class="line">&#x2F;etc</span><br><span class="line">[root@localhost etc]# cat passwd</span><br><span class="line">root:x:0:0:root:&#x2F;root:&#x2F;bin&#x2F;bash</span><br><span class="line">bin:x:1:1:bin:&#x2F;bin:&#x2F;sbin&#x2F;nologin</span><br><span class="line">daemon:x:2:2:daemon:&#x2F;sbin:&#x2F;sbin&#x2F;nologin</span><br><span class="line">adm:x:3:4:adm:&#x2F;var&#x2F;adm:&#x2F;sbin&#x2F;nologin</span><br><span class="line">lp:x:4:7:lp:&#x2F;var&#x2F;spool&#x2F;lpd:&#x2F;sbin&#x2F;nologin</span><br><span class="line">sync:x:5:0:sync:&#x2F;sbin:&#x2F;bin&#x2F;sync</span><br><span class="line">shutdown:x:6:0:shutdown:&#x2F;sbin:&#x2F;sbin&#x2F;shutdown</span><br><span class="line">halt:x:7:0:halt:&#x2F;sbin:&#x2F;sbin&#x2F;halt</span><br><span class="line">mail:x:8:12:mail:&#x2F;var&#x2F;spool&#x2F;mail:&#x2F;sbin&#x2F;nologin</span><br><span class="line">operator:x:11:0:operator:&#x2F;root:&#x2F;sbin&#x2F;nologin</span><br><span class="line">games:x:12:100:games:&#x2F;usr&#x2F;games:&#x2F;sbin&#x2F;nologin</span><br><span class="line">ftp:x:14:50:FTP User:&#x2F;var&#x2F;ftp:&#x2F;sbin&#x2F;nologin</span><br><span class="line">nobody:x:99:99:Nobody:&#x2F;:&#x2F;sbin&#x2F;nologin</span><br><span class="line">systemd-network:x:192:192:systemd Network Management:&#x2F;:&#x2F;sbin&#x2F;nologin</span><br><span class="line">dbus:x:81:81:System message bus:&#x2F;:&#x2F;sbin&#x2F;nologin</span><br><span class="line">polkitd:x:999:998:User for polkitd:&#x2F;:&#x2F;sbin&#x2F;nologin</span><br><span class="line">libstoragemgmt:x:998:996:daemon account for libstoragemgmt:&#x2F;var&#x2F;run&#x2F;lsm:&#x2F;sbin&#x2F;nologin</span><br><span class="line">colord:x:997:995:User for colord:&#x2F;var&#x2F;lib&#x2F;colord:&#x2F;sbin&#x2F;nologin</span><br><span class="line">rpc:x:32:32:Rpcbind Daemon:&#x2F;var&#x2F;lib&#x2F;rpcbind:&#x2F;sbin&#x2F;nologin</span><br><span class="line">saslauth:x:996:76:Saslauthd user:&#x2F;run&#x2F;saslauthd:&#x2F;sbin&#x2F;nologin</span><br><span class="line">abrt:x:173:173::&#x2F;etc&#x2F;abrt:&#x2F;sbin&#x2F;nologin</span><br><span class="line">rtkit:x:172:172:RealtimeKit:&#x2F;proc:&#x2F;sbin&#x2F;nologin</span><br><span class="line">pulse:x:171:171:PulseAudio System Daemon:&#x2F;var&#x2F;run&#x2F;pulse:&#x2F;sbin&#x2F;nologin</span><br><span class="line">chrony:x:995:990::&#x2F;var&#x2F;lib&#x2F;chrony:&#x2F;sbin&#x2F;nologin</span><br><span class="line">radvd:x:75:75:radvd user:&#x2F;:&#x2F;sbin&#x2F;nologin</span><br><span class="line">rpcuser:x:29:29:RPC Service User:&#x2F;var&#x2F;lib&#x2F;nfs:&#x2F;sbin&#x2F;nologin</span><br><span class="line">nfsnobody:x:65534:65534:Anonymous NFS User:&#x2F;var&#x2F;lib&#x2F;nfs:&#x2F;sbin&#x2F;nologin</span><br><span class="line">unbound:x:994:989:Unbound DNS resolver:&#x2F;etc&#x2F;unbound:&#x2F;sbin&#x2F;nologin</span><br><span class="line">gluster:x:993:988:GlusterFS daemons:&#x2F;run&#x2F;gluster:&#x2F;sbin&#x2F;nologin</span><br><span class="line">qemu:x:107:107:qemu user:&#x2F;:&#x2F;sbin&#x2F;nologin</span><br><span class="line">tss:x:59:59:Account used by the trousers package to sandbox the tcsd daemon:&#x2F;dev&#x2F;null:&#x2F;sbin&#x2F;nologin</span><br><span class="line">usbmuxd:x:113:113:usbmuxd user:&#x2F;:&#x2F;sbin&#x2F;nologin</span><br><span class="line">geoclue:x:992:986:User for geoclue:&#x2F;var&#x2F;lib&#x2F;geoclue:&#x2F;sbin&#x2F;nologin</span><br><span class="line">setroubleshoot:x:991:985::&#x2F;var&#x2F;lib&#x2F;setroubleshoot:&#x2F;sbin&#x2F;nologin</span><br><span class="line">saned:x:990:984:SANE scanner daemon user:&#x2F;usr&#x2F;share&#x2F;sane:&#x2F;sbin&#x2F;nologin</span><br><span class="line">gdm:x:42:42::&#x2F;var&#x2F;lib&#x2F;gdm:&#x2F;sbin&#x2F;nologin</span><br><span class="line">gnome-initial-setup:x:989:983::&#x2F;run&#x2F;gnome-initial-setup&#x2F;:&#x2F;sbin&#x2F;nologin</span><br><span class="line">sshd:x:74:74:Privilege-separated SSH:&#x2F;var&#x2F;empty&#x2F;sshd:&#x2F;sbin&#x2F;nologin</span><br><span class="line">avahi:x:70:70:Avahi mDNS&#x2F;DNS-SD Stack:&#x2F;var&#x2F;run&#x2F;avahi-daemon:&#x2F;sbin&#x2F;nologin</span><br><span class="line">postfix:x:89:89::&#x2F;var&#x2F;spool&#x2F;postfix:&#x2F;sbin&#x2F;nologin</span><br><span class="line">ntp:x:38:38::&#x2F;etc&#x2F;ntp:&#x2F;sbin&#x2F;nologin</span><br><span class="line">tcpdump:x:72:72::&#x2F;:&#x2F;sbin&#x2F;nologin</span><br><span class="line">kevin:x:1000:1000:kevin:&#x2F;home&#x2F;kevin:&#x2F;bin&#x2F;bash</span><br><span class="line">kevin_look:x:1001:1001::&#x2F;usr&#x2F;kevin_look:&#x2F;bin&#x2F;bash</span><br><span class="line">kevin1:x:1002:1002::&#x2F;home&#x2F;kevin1:&#x2F;bin&#x2F;bash</span><br><span class="line">kevin2:x:1003:1003::&#x2F;home&#x2F;kevin2:&#x2F;bin&#x2F;bash</span><br></pre></td></tr></table></figure>
<h2 id="3-组创建，删除，修改"><a href="#3-组创建，删除，修改" class="headerlink" title="3.组创建，删除，修改"></a>3.组创建，删除，修改</h2><h4 id="组创建-groupadd命令"><a href="#组创建-groupadd命令" class="headerlink" title="组创建  groupadd命令"></a>组创建  groupadd命令</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">用法：groupadd [选项] 组</span><br><span class="line"></span><br><span class="line">选项:</span><br><span class="line">  -f, --force		如果组已经存在则成功退出</span><br><span class="line">			并且如果 GID 已经存在则取消 -g</span><br><span class="line">  -g, --gid GID                 为新组使用 GID</span><br><span class="line">  -h, --help                    显示此帮助信息并推出</span><br><span class="line">  -K, --key KEY&#x3D;VALUE           不使用 &#x2F;etc&#x2F;login.defs 中的默认值</span><br><span class="line">  -o, --non-unique              允许创建有重复 GID 的组</span><br><span class="line">  -p, --password PASSWORD       为新组使用此加密过的密码</span><br><span class="line">  -r, --system                  创建一个系统账户</span><br><span class="line">  -R, --root CHROOT_DIR         chroot 到的目录</span><br></pre></td></tr></table></figure>
<p>效果：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 增加组</span><br><span class="line">[root@localhost home]# groupadd kevin_group</span><br><span class="line"></span><br><span class="line"># 查看所有组信息</span><br><span class="line">[root@localhost etc]# pwd</span><br><span class="line">&#x2F;etc</span><br><span class="line">[root@localhost etc]# cat group</span><br><span class="line">root:x:0:</span><br><span class="line">bin:x:1:</span><br><span class="line">daemon:x:2:</span><br><span class="line">sys:x:3:</span><br><span class="line">adm:x:4:</span><br><span class="line">tty:x:5:</span><br><span class="line">disk:x:6:</span><br><span class="line">lp:x:7:</span><br><span class="line">mem:x:8:</span><br><span class="line">kmem:x:9:</span><br><span class="line">wheel:x:10:kevin</span><br><span class="line">cdrom:x:11:</span><br><span class="line">mail:x:12:postfix</span><br><span class="line">man:x:15:</span><br><span class="line">dialout:x:18:</span><br><span class="line">floppy:x:19:</span><br><span class="line">games:x:20:</span><br><span class="line">tape:x:33:</span><br><span class="line">video:x:39:</span><br><span class="line">ftp:x:50:</span><br><span class="line">lock:x:54:</span><br><span class="line">audio:x:63:</span><br><span class="line">nobody:x:99:</span><br><span class="line">users:x:100:</span><br><span class="line">utmp:x:22:</span><br><span class="line">utempter:x:35:</span><br><span class="line">input:x:999:</span><br><span class="line">systemd-journal:x:190:</span><br><span class="line">systemd-network:x:192:</span><br><span class="line">dbus:x:81:</span><br><span class="line">polkitd:x:998:</span><br><span class="line">printadmin:x:997:</span><br><span class="line">libstoragemgmt:x:996:</span><br><span class="line">colord:x:995:</span><br><span class="line">rpc:x:32:</span><br><span class="line">dip:x:40:</span><br><span class="line">cgred:x:994:</span><br><span class="line">ssh_keys:x:993:</span><br><span class="line">saslauth:x:76:</span><br><span class="line">abrt:x:173:</span><br><span class="line">rtkit:x:172:</span><br><span class="line">pulse-access:x:992:</span><br><span class="line">pulse-rt:x:991:</span><br><span class="line">pulse:x:171:</span><br><span class="line">chrony:x:990:</span><br><span class="line">radvd:x:75:</span><br><span class="line">rpcuser:x:29:</span><br><span class="line">nfsnobody:x:65534:</span><br><span class="line">unbound:x:989:</span><br><span class="line">gluster:x:988:</span><br><span class="line">kvm:x:36:qemu</span><br><span class="line">qemu:x:107:</span><br><span class="line">tss:x:59:</span><br><span class="line">libvirt:x:987:</span><br><span class="line">usbmuxd:x:113:</span><br><span class="line">geoclue:x:986:</span><br><span class="line">setroubleshoot:x:985:</span><br><span class="line">saned:x:984:</span><br><span class="line">gdm:x:42:</span><br><span class="line">gnome-initial-setup:x:983:</span><br><span class="line">sshd:x:74:</span><br><span class="line">slocate:x:21:</span><br><span class="line">avahi:x:70:</span><br><span class="line">postdrop:x:90:</span><br><span class="line">postfix:x:89:</span><br><span class="line">ntp:x:38:</span><br><span class="line">tcpdump:x:72:</span><br><span class="line">stapusr:x:156:</span><br><span class="line">stapsys:x:157:</span><br><span class="line">stapdev:x:158:</span><br><span class="line">kevin:x:1000:</span><br><span class="line">kevin_look:x:1001:</span><br><span class="line">kevin1:x:1002:</span><br><span class="line">kevin2:x:1003:</span><br><span class="line"># 新加的组</span><br><span class="line">kevin_group:x:1004:</span><br></pre></td></tr></table></figure>
<h4 id="groupmod命令"><a href="#groupmod命令" class="headerlink" title="groupmod命令"></a>groupmod命令</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">用法：groupmod [选项] 组</span><br><span class="line"></span><br><span class="line">选项:</span><br><span class="line">  -g, --gid GID                 将组 ID 改为 GID</span><br><span class="line">  -h, --help                    显示此帮助信息并推出</span><br><span class="line">  -n, --new-name NEW_GROUP      改名为 NEW_GROUP</span><br><span class="line">  -o, --non-unique              允许使用重复的 GID</span><br><span class="line">  -p, --password PASSWORD	将密码更改为(加密过的) PASSWORD</span><br><span class="line">  -R, --root CHROOT_DIR         chroot 到的目录</span><br></pre></td></tr></table></figure>
<p>效果：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 让用户加入组</span><br><span class="line">[root@localhost etc]# usermod -G kevin_group kevin2</span><br><span class="line"></span><br><span class="line">#  查看kevin2用户所在的组,以及组内成员</span><br><span class="line">[root@localhost etc]# groups kevin2</span><br><span class="line">kevin2 : kevin2 kevin_group</span><br><span class="line"></span><br><span class="line"># 查看当前登录用户的组内成员</span><br><span class="line">[root@localhost etc]# groups</span><br><span class="line">root</span><br><span class="line"></span><br><span class="line"># 查看当前登录用户名</span><br><span class="line">[root@localhost etc]# whoami</span><br><span class="line">root</span><br></pre></td></tr></table></figure>

<h4 id="groupdel命令"><a href="#groupdel命令" class="headerlink" title="groupdel命令"></a>groupdel命令</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">用法：groupdel [选项] 组</span><br><span class="line"></span><br><span class="line">选项:</span><br><span class="line">  -h, --help                    显示此帮助信息并推出</span><br><span class="line">  -R, --root CHROOT_DIR         chroot 到的目录</span><br></pre></td></tr></table></figure>
<p>效果：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@localhost etc]# pwd</span><br><span class="line">&#x2F;etc</span><br><span class="line"></span><br><span class="line"># 删除组</span><br><span class="line">[root@localhost etc]# groupdel kevin_group</span><br><span class="line"></span><br><span class="line"># 查看所有组信息</span><br><span class="line">[root@localhost etc]# cat group</span><br><span class="line">root:x:0:</span><br><span class="line">bin:x:1:</span><br><span class="line">daemon:x:2:</span><br><span class="line">sys:x:3:</span><br><span class="line">adm:x:4:</span><br><span class="line">tty:x:5:</span><br><span class="line">disk:x:6:</span><br><span class="line">lp:x:7:</span><br><span class="line">mem:x:8:</span><br><span class="line">kmem:x:9:</span><br><span class="line">wheel:x:10:kevin</span><br><span class="line">cdrom:x:11:</span><br><span class="line">mail:x:12:postfix</span><br><span class="line">man:x:15:</span><br><span class="line">dialout:x:18:</span><br><span class="line">floppy:x:19:</span><br><span class="line">games:x:20:</span><br><span class="line">tape:x:33:</span><br><span class="line">video:x:39:</span><br><span class="line">ftp:x:50:</span><br><span class="line">lock:x:54:</span><br><span class="line">audio:x:63:</span><br><span class="line">nobody:x:99:</span><br><span class="line">users:x:100:</span><br><span class="line">utmp:x:22:</span><br><span class="line">utempter:x:35:</span><br><span class="line">input:x:999:</span><br><span class="line">systemd-journal:x:190:</span><br><span class="line">systemd-network:x:192:</span><br><span class="line">dbus:x:81:</span><br><span class="line">polkitd:x:998:</span><br><span class="line">printadmin:x:997:</span><br><span class="line">libstoragemgmt:x:996:</span><br><span class="line">colord:x:995:</span><br><span class="line">rpc:x:32:</span><br><span class="line">dip:x:40:</span><br><span class="line">cgred:x:994:</span><br><span class="line">ssh_keys:x:993:</span><br><span class="line">saslauth:x:76:</span><br><span class="line">abrt:x:173:</span><br><span class="line">rtkit:x:172:</span><br><span class="line">pulse-access:x:992:</span><br><span class="line">pulse-rt:x:991:</span><br><span class="line">pulse:x:171:</span><br><span class="line">chrony:x:990:</span><br><span class="line">radvd:x:75:</span><br><span class="line">rpcuser:x:29:</span><br><span class="line">nfsnobody:x:65534:</span><br><span class="line">unbound:x:989:</span><br><span class="line">gluster:x:988:</span><br><span class="line">kvm:x:36:qemu</span><br><span class="line">qemu:x:107:</span><br><span class="line">tss:x:59:</span><br><span class="line">libvirt:x:987:</span><br><span class="line">usbmuxd:x:113:</span><br><span class="line">geoclue:x:986:</span><br><span class="line">setroubleshoot:x:985:</span><br><span class="line">saned:x:984:</span><br><span class="line">gdm:x:42:</span><br><span class="line">gnome-initial-setup:x:983:</span><br><span class="line">sshd:x:74:</span><br><span class="line">slocate:x:21:</span><br><span class="line">avahi:x:70:</span><br><span class="line">postdrop:x:90:</span><br><span class="line">postfix:x:89:</span><br><span class="line">ntp:x:38:</span><br><span class="line">tcpdump:x:72:</span><br><span class="line">stapusr:x:156:</span><br><span class="line">stapsys:x:157:</span><br><span class="line">stapdev:x:158:</span><br><span class="line">kevin:x:1000:</span><br><span class="line">kevin_look:x:1001:</span><br><span class="line">kevin1:x:1002:</span><br><span class="line">kevin2:x:1003:</span><br><span class="line"># 此处没有kevin_group组了，已被删除</span><br></pre></td></tr></table></figure>
<h2 id="4-组密码及组配置文件"><a href="#4-组密码及组配置文件" class="headerlink" title="4.组密码及组配置文件"></a>4.组密码及组配置文件</h2><h4 id="gpasswd命令"><a href="#gpasswd命令" class="headerlink" title="gpasswd命令"></a>gpasswd命令</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">用法：gpasswd [选项] 组</span><br><span class="line"></span><br><span class="line">选项：</span><br><span class="line">  -a, --add USER                向组 GROUP 中添加用户 USER</span><br><span class="line">  -d, --delete USER             从组 GROUP 中添加或删除用户</span><br><span class="line">  -h, --help                    显示此帮助信息并推出</span><br><span class="line">  -Q, --root CHROOT_DIR         要 chroot 进的目录</span><br><span class="line">  -r, --delete-password         remove the GROUP&#39;s password</span><br><span class="line">  -R, --restrict                向其成员限制访问组 GROUP</span><br><span class="line">  -M, --members USER,...        设置组 GROUP 的成员列表</span><br><span class="line">  -A, --administrators ADMIN,...	设置组的管理员列表</span><br><span class="line">除非使用 -A 或 -M 选项，不能结合使用这些选项。</span><br></pre></td></tr></table></figure>
<p>案例：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">设置组root密码    #gpasswd root</span><br><span class="line">用户组身份切换为root $newgrp root</span><br><span class="line">组管理员设置 #gpasswd test -A user3</span><br><span class="line">限制陌生用户切换到组 #gpasswd -R test</span><br><span class="line">指定组的成员列表   # gpasswd test -M user3,user2</span><br></pre></td></tr></table></figure>
<h2 id="5-相关文件"><a href="#5-相关文件" class="headerlink" title="5.相关文件"></a>5.相关文件</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;etc&#x2F;passwd</span><br><span class="line">        用户账户信息。</span><br><span class="line"></span><br><span class="line">&#x2F;etc&#x2F;shadow</span><br><span class="line">        安全用户账户信息。</span><br><span class="line"></span><br><span class="line">&#x2F;etc&#x2F;group</span><br><span class="line">        组账户信息。</span><br><span class="line"></span><br><span class="line">&#x2F;etc&#x2F;gshadow</span><br><span class="line">         安全组账户信息。</span><br><span class="line"></span><br><span class="line">&#x2F;etc&#x2F;default&#x2F;useradd</span><br><span class="line">           账户创建的默认值。</span><br><span class="line"></span><br><span class="line">&#x2F;etc&#x2F;skel&#x2F;</span><br><span class="line">           包含默认文件的目录。</span><br><span class="line"></span><br><span class="line">&#x2F;etc&#x2F;login.defs</span><br><span class="line">           Shadow 密码套件配置。</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>linux(四)：linux文件查找</title>
    <url>/Linux/%E6%96%87%E4%BB%B6%E6%9F%A5%E6%89%BE/</url>
    <content><![CDATA[<h1 id="文件查找"><a href="#文件查找" class="headerlink" title="文件查找"></a>文件查找</h1><p>find - search for files in a directory hierarchy 递归地在层次目录中处理文件</p>
<p><strong>查找方式：</strong></p>
<ul>
<li>按文件属性查找</li>
<li>按文件类型查找</li>
<li>按文件大小查找</li>
<li>按文件内容查找<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">用法: find [-H] [-L] [-P] [-Olevel] [-D help|tree|search|stat|rates|opt|exec] [path...] [expression]</span><br><span class="line"></span><br><span class="line">默认路径为当前目录；默认表达式为 -print</span><br><span class="line">表达式可能由下列成份组成：操作符、选项、测试表达式以及动作：</span><br><span class="line"></span><br><span class="line">操作符 (优先级递减；未做任何指定时默认使用 -and):</span><br><span class="line">      ( EXPR )   ! EXPR   -not EXPR   EXPR1 -a EXPR2   EXPR1 -and EXPR2</span><br><span class="line">      EXPR1 -o EXPR2   EXPR1 -or EXPR2   EXPR1 , EXPR2</span><br><span class="line"></span><br><span class="line">positional options (always true): -daystart -follow -regextype</span><br><span class="line"></span><br><span class="line">normal options (always true, specified before other expressions):</span><br><span class="line">      -depth --help -maxdepth LEVELS -mindepth LEVELS -mount -noleaf</span><br><span class="line">      --version -xautofs -xdev -ignore_readdir_race -noignore_readdir_race</span><br><span class="line"></span><br><span class="line">比较测试 (N 可以是 +N 或 -N 或 N): -amin N -anewer FILE -atime N -cmin N</span><br><span class="line">      -cnewer 文件 -ctime N -empty -false -fstype 类型 -gid N -group 名称</span><br><span class="line">      -ilname 匹配模式 -iname 匹配模式 -inum N -ipath 匹配模式 -iregex 匹配模式</span><br><span class="line">      -links N -lname 匹配模式 -mmin N -mtime N -name 匹配模式 -newer 文件</span><br><span class="line">      -nouser -nogroup -path PATTERN -perm [-&#x2F;]MODE -regex PATTERN</span><br><span class="line">      -readable -writable -executable</span><br><span class="line">      -wholename PATTERN -size N[bcwkMG] -true -type [bcdpflsD] -uid N</span><br><span class="line">      -used N -user NAME -xtype [bcdpfls]</span><br><span class="line">      -context 文本</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">操作: -delete -print0 -printf 格式 -fprintf 文件 格式 -print </span><br><span class="line">      -fprint0 文件 -fprint 文件 -ls -fls 文件 -prune -quit</span><br><span class="line">      -exec 命令 ; -exec 命令 &#123;&#125; + -ok 命令 ;</span><br><span class="line">      -execdir 命令 ; -execdir 命令 &#123;&#125; + -okdir 命令 ;</span><br></pre></td></tr></table></figure>
<h2 id="1-按文件名查找"><a href="#1-按文件名查找" class="headerlink" title="1.按文件名查找"></a>1.按文件名查找</h2></li>
</ul>
<p><strong>语法：</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">find + 路径 + -name + 文件名</span><br></pre></td></tr></table></figure>
<p>案例：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 精确查找</span><br><span class="line">[kevin@localhost ~]$ sudo find &#x2F;home&#x2F;kevin -name file2</span><br><span class="line">[sudo] kevin 的密码：</span><br><span class="line">&#x2F;home&#x2F;kevin&#x2F;linux_study&#x2F;file2</span><br><span class="line">&#x2F;home&#x2F;kevin&#x2F;directory1&#x2F;file2</span><br><span class="line">[kevin@localhost ~]$ sudo find -name file2</span><br><span class="line">.&#x2F;linux_study&#x2F;file2</span><br><span class="line">.&#x2F;directory1&#x2F;file2</span><br><span class="line"></span><br><span class="line"># 忽略大小写 模糊查找</span><br><span class="line">[kevin@localhost ~]$ sudo find -name file2</span><br><span class="line">.&#x2F;linux_study&#x2F;file2</span><br><span class="line">.&#x2F;directory1&#x2F;file2</span><br><span class="line">[kevin@localhost ~]$ sudo find -iname file2</span><br><span class="line">.&#x2F;linux_study&#x2F;file2</span><br><span class="line">.&#x2F;linux_study&#x2F;File2</span><br><span class="line">.&#x2F;directory1&#x2F;file2</span><br></pre></td></tr></table></figure>
<h2 id="2-按文件类型查找"><a href="#2-按文件类型查找" class="headerlink" title="2.按文件类型查找"></a>2.按文件类型查找</h2><p><strong>语法：</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">find + 路径 + -type + 类型</span><br></pre></td></tr></table></figure>
<p>主要类型有：</p>
<ul>
<li>普通文件类型用 f 表示而不是 -</li>
<li>d：目录</li>
<li>l: 符号链接</li>
<li>b: 块设备文件</li>
<li>c：字符设备文件</li>
<li>s：socket文件，网络套接字</li>
<li>p：管道</li>
</ul>
<h2 id="3-按文件大小查找"><a href="#3-按文件大小查找" class="headerlink" title="3.按文件大小查找"></a>3.按文件大小查找</h2><h4 id="按范围"><a href="#按范围" class="headerlink" title="按范围"></a>按范围</h4><p><strong>大于：</strong></p>
<p>语法：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">find + 路径 + -size + 范围(+表示)</span><br></pre></td></tr></table></figure>
<p>案例：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 大于0k文件</span><br><span class="line">[kevin@localhost linux_study]$ sudo find .&#x2F; -size +0k</span><br><span class="line">.&#x2F;</span><br><span class="line">.&#x2F;file2</span><br><span class="line">.&#x2F;quxian</span><br><span class="line">.&#x2F;quxian&#x2F;quanxian1</span><br></pre></td></tr></table></figure>
<p><strong>小于:</strong></p>
<p>语法：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">find + 路径 + -size + 范围(-表示)</span><br></pre></td></tr></table></figure>
<p>案例：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 小于1k</span><br><span class="line">[kevin@localhost linux_study]$ sudo find .&#x2F; -size -1k</span><br><span class="line">.&#x2F;quxian&#x2F;quanxian.txt</span><br><span class="line">.&#x2F;File2</span><br></pre></td></tr></table></figure>
<p><strong>等于：</strong></p>
<h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">M必须大写</span><br><span class="line">k必须小写</span><br></pre></td></tr></table></figure>
<h2 id="4-按文件内容查找"><a href="#4-按文件内容查找" class="headerlink" title="4.按文件内容查找"></a>4.按文件内容查找</h2><p>语法：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">grep -r + &#39;查找的关键字&#39; +路径</span><br></pre></td></tr></table></figure>
<p>案例：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[kevin@localhost linux_study]$ sudo grep -r &#39;6676&#39; </span><br><span class="line">file2:6676</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>python操作excel(一)：openpyxl</title>
    <url>/01-python/%E6%93%8D%E4%BD%9Cexcel/openpyxl/</url>
    <content><![CDATA[<h2 id="1-安装"><a href="#1-安装" class="headerlink" title="1.安装"></a>1.安装</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pip install openpyxl</span><br></pre></td></tr></table></figure>

<h2 id="2-创建并保存一个工作簿"><a href="#2-创建并保存一个工作簿" class="headerlink" title="2.创建并保存一个工作簿"></a>2.创建并保存一个工作簿</h2><h3 id="2-1-创建一个工作簿"><a href="#2-1-创建一个工作簿" class="headerlink" title="2.1 创建一个工作簿"></a>2.1 创建一个工作簿</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> openpyxl <span class="keyword">import</span> Workbook</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#生成一个 Workbook 的实例化对象，wb即代表一个工作簿（一个Excel文件）</span></span><br><span class="line">wb = Workbook()</span><br><span class="line"><span class="comment"># 激活一个工作簿，ws代表wb(工作簿)的一个工作表</span></span><br><span class="line">ws = wb.active</span><br></pre></td></tr></table></figure>

<h3 id="2-2-写入数据"><a href="#2-2-写入数据" class="headerlink" title="2.2 写入数据"></a>2.2 写入数据</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 加标题</span></span><br><span class="line">ws.title = <span class="string">"Title"</span></span><br><span class="line"><span class="comment"># 修改标签栏的字体颜色</span></span><br><span class="line">ws.sheet_properties.tabColor = <span class="string">"1072BA"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 对ws的单个单元格传入数据</span></span><br><span class="line"><span class="comment"># 表头</span></span><br><span class="line">ws[<span class="string">'A1'</span>] = <span class="string">'国家'</span></span><br><span class="line">ws[<span class="string">'B1'</span>] = <span class="string">'首都'</span></span><br><span class="line"><span class="comment"># 数据体</span></span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">'中国'</span>:<span class="string">'北京'</span>,</span><br><span class="line">    <span class="string">'韩国'</span>:<span class="string">'首尔'</span>,</span><br><span class="line">    <span class="string">'日本'</span>:<span class="string">'东京'</span>,</span><br><span class="line">    <span class="string">'泰国'</span>:<span class="string">'曼谷'</span>,</span><br><span class="line">    <span class="string">'马来西亚'</span>:<span class="string">'吉隆坡'</span>,</span><br><span class="line">    <span class="string">'越南'</span>:<span class="string">'河内'</span>,</span><br><span class="line">    <span class="string">'朝鲜'</span>:<span class="string">'平壤'</span>,</span><br><span class="line">    <span class="string">'印度'</span>:<span class="string">'新德里'</span></span><br><span class="line">    &#125;</span><br><span class="line">data_excel = []</span><br><span class="line"><span class="comment">#将字典中的每对数据（键，值）以列表形式传入data_excel列表</span></span><br><span class="line"><span class="keyword">for</span> each <span class="keyword">in</span> data:</span><br><span class="line">    data_excel.append([each, data[each]])</span><br><span class="line"><span class="comment">#将data_excel列表内的内容存入工作表</span></span><br><span class="line"><span class="keyword">for</span> each <span class="keyword">in</span> data_excel:</span><br><span class="line">		ws.append(each)</span><br></pre></td></tr></table></figure>

<h3 id="2-3-保存excel表"><a href="#2-3-保存excel表" class="headerlink" title="2.3 保存excel表"></a>2.3 保存excel表</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">wb.save(<span class="string">'country.xlsx'</span>)</span><br></pre></td></tr></table></figure>

<h2 id="3-操作excel"><a href="#3-操作excel" class="headerlink" title="3.操作excel"></a>3.操作excel</h2><h3 id="3-1-打开excel"><a href="#3-1-打开excel" class="headerlink" title="3.1 打开excel"></a>3.1 打开excel</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> openpyxl <span class="keyword">import</span> load_workbook</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打开excel</span></span><br><span class="line">wb = load_workbook(filename)</span><br><span class="line"><span class="comment"># 定位表单</span></span><br><span class="line">sheet = wb[table_name]</span><br></pre></td></tr></table></figure>

<p>(未完待续，时间不够)</p>
]]></content>
      <categories>
        <category>openpyxl</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>openyxl</tag>
        <tag>excel</tag>
      </tags>
  </entry>
  <entry>
    <title>消息中间件之Kafka(一)：Kafka的基本介绍</title>
    <url>/%E6%B6%88%E6%81%AF%E4%B8%AD%E9%97%B4%E4%BB%B6/kafka/</url>
    <content><![CDATA[<h2 id="1-kafka概述"><a href="#1-kafka概述" class="headerlink" title="1.kafka概述"></a>1.kafka概述</h2><h3 id="1-1定义"><a href="#1-1定义" class="headerlink" title="1.1定义"></a>1.1定义</h3><p>Kafka是一个分布式的基于发布/订阅模式的消息队列，主要用于大数据实时处理领域。</p>
<h3 id="1-2-消息队列"><a href="#1-2-消息队列" class="headerlink" title="1.2 消息队列"></a>1.2 消息队列</h3><h4 id="1-2-1-消息队列的好处"><a href="#1-2-1-消息队列的好处" class="headerlink" title="1.2.1 消息队列的好处"></a>1.2.1 消息队列的好处</h4><ul>
<li>解耦</li>
</ul>
<p>允许你独立的扩展或修改两边的处理过程，只要确保他们遵守同样的接口约束。</p>
<ul>
<li>可恢复性</li>
</ul>
<p>系统的一部分组件失效时，不会影响到整个系统。消息队列降低了进程间的耦合度，所以即使一个处理消息的进程挂掉，加入队列中的消息仍然可以在系统恢复后被处理。</p>
<ul>
<li>缓冲</li>
</ul>
<p>有助于控制和优化数据流经过系统的速度，解决生产消息和消费消息的处理不一致的情况。</p>
<ul>
<li>灵活性&amp;峰值处理能力</li>
</ul>
<p>在访问量剧增的情况下，应用仍然需要继续发挥作用，但是这样的突发流量并不常见。如果以能处理这类峰值访问标准来投入资源随时待命无疑是巨大的浪费。使用消息队列能够使关键组件顶住突发的访问压力，而不会因为突发的超负荷的请求而完全崩溃。</p>
<ul>
<li>异步通信</li>
</ul>
<p>很多时候，用户不想也不需要立即处理消息。消息队列提供了异步处理机制，允许用户把一个消息放入队列，但不立即处理它。想向队列中放入多少消息就放多少，然后在需要的时候再去处理它们。</p>
<h4 id="1-2-2-消息队列的两种模式"><a href="#1-2-2-消息队列的两种模式" class="headerlink" title="1.2.2 消息队列的两种模式"></a>1.2.2 消息队列的两种模式</h4><ul>
<li>点对点模式(一对一，消费者主动拉取数据，消息收到后消息清除)</li>
</ul>
<p>消息生产者生产消息发送到Queue中，然后消息消费者从Queue总取出并且消费消息。消息从消费以后，queue中不再有存储，所以消息消费者不可能消费到已经被取消的消息。Queue支持存在多个消费者，但是对一个消息而言，只有一个消费者可以消费。</p>
<ul>
<li>发布/订阅模式(一对多，消费者消费数据之后不会清除消息)</li>
<li><ul>
<li>队列推送(推送速度和消费者的接收速度不同，容易导致消费者崩溃或资源浪费)</li>
<li>消费者拉取(kafka，缺点：消费要常轮询，检查队列中是否有消息)</li>
</ul>
</li>
</ul>
<p>消息消费者(发布)将消息发布到topic中，同时有多个消息消费者(订阅)消费该消息。和点对点方式不同，发布到topic的消息会被所有消费者订阅。</p>
<h3 id="1-3-Kafka基础结构"><a href="#1-3-Kafka基础结构" class="headerlink" title="1.3 Kafka基础结构"></a>1.3 Kafka基础结构</h3><h4 id="1-3-1-图解kafka基本架构"><a href="#1-3-1-图解kafka基本架构" class="headerlink" title="1.3.1 图解kafka基本架构"></a>1.3.1 图解kafka基本架构</h4><h4 id="1-3-2-基本概念"><a href="#1-3-2-基本概念" class="headerlink" title="1.3.2 基本概念"></a>1.3.2 基本概念</h4><ul>
<li>Producer：消息生产者，就是向kafka broker发消息的客户端</li>
<li>Consumer：消息消费者，向kafka broker取消息的客户端</li>
<li>Consumer Group：消费者组，，由多个consumer组成。消费者组内每个消费者负责消费不同分区的数据，一个分区只能由一个组内消息消费者；消费者组之间互不影响。所有消费者都属于某个消费者组，即消费者组是逻辑上的一个订阅者</li>
<li>Broker：一台kafka服务器就是一个broker。一个集群由多个broker组成。一个broker可以容纳多个topic</li>
<li>topic：可以理解为一个队列，生产者和消费者面向的都是一个topic</li>
<li>Partition：为了实现扩展性，一个非常大的topic可以分不到多个broker上，一个topic可以分为多个partiton，每个partition是一个有序的队列</li>
<li>Relica：副本，为保证集群中的某个节点发生故障时，该节点上的partition数据不丢失，且kafka仍然能够继续工作，kafka提供了副本机制，一个topic的每个分区都有若干个副本，一个leader和若干个follower</li>
<li>leader：每个分区多个副本的“主”，生产者发送数据的对象，以及消费者消费数据的对象都是leader</li>
<li>follower：每个分区多个副本中的“从”，实时从leader中同步数据，保持和leader数据的同步。leader发生故障时，某个follower会成为新的leader。</li>
</ul>
<h2 id="2-Kafka快速入门"><a href="#2-Kafka快速入门" class="headerlink" title="2. Kafka快速入门"></a>2. Kafka快速入门</h2><h2 id="3-Kafka架构深入"><a href="#3-Kafka架构深入" class="headerlink" title="3. Kafka架构深入"></a>3. Kafka架构深入</h2><h3 id="3-1-Kafka工作流程及文件存储机制"><a href="#3-1-Kafka工作流程及文件存储机制" class="headerlink" title="3.1 Kafka工作流程及文件存储机制"></a>3.1 Kafka工作流程及文件存储机制</h3><p>（未完待续）</p>
]]></content>
      <categories>
        <category>kafka</category>
      </categories>
      <tags>
        <tag>kafka</tag>
        <tag>消息中间件</tag>
      </tags>
  </entry>
  <entry>
    <title>git(一)：git常用命令</title>
    <url>/05-git/0-git/</url>
    <content><![CDATA[<h4 id="git远程操作管理"><a href="#git远程操作管理" class="headerlink" title="git远程操作管理"></a>git远程操作管理</h4><p><img src="git.png" alt="image"></p>
<h2 id="1-git基本命令"><a href="#1-git基本命令" class="headerlink" title="1.git基本命令"></a>1.git基本命令</h2><h4 id="创建一个版本库"><a href="#创建一个版本库" class="headerlink" title="创建一个版本库"></a>创建一个版本库</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure>
<h4 id="把文件添加到缓存区"><a href="#把文件添加到缓存区" class="headerlink" title="把文件添加到缓存区"></a>把文件添加到缓存区</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git add &lt;filename&gt;</span><br></pre></td></tr></table></figure>
<h4 id="提交缓存区的所有修改到本地仓库"><a href="#提交缓存区的所有修改到本地仓库" class="headerlink" title="提交缓存区的所有修改到本地仓库"></a>提交缓存区的所有修改到本地仓库</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git commit -m &quot;提交的说明&quot;</span><br></pre></td></tr></table></figure>

<h2 id="2-git分支管理"><a href="#2-git分支管理" class="headerlink" title="2.git分支管理"></a>2.git分支管理</h2><h4 id="创建分支"><a href="#创建分支" class="headerlink" title="创建分支"></a>创建分支</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git branch &lt;name&gt;</span><br></pre></td></tr></table></figure>
<h4 id="切换分支"><a href="#切换分支" class="headerlink" title="切换分支"></a>切换分支</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git checkout &lt;name&gt;</span><br></pre></td></tr></table></figure>
<h4 id="创建并切换分支"><a href="#创建并切换分支" class="headerlink" title="创建并切换分支"></a>创建并切换分支</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git checkout -b &lt;name&gt;</span><br></pre></td></tr></table></figure>
<h4 id="查看当前分支"><a href="#查看当前分支" class="headerlink" title="查看当前分支"></a>查看当前分支</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git branch</span><br></pre></td></tr></table></figure>
<h4 id="删除分支"><a href="#删除分支" class="headerlink" title="删除分支"></a>删除分支</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git branch -d &lt;name&gt;</span><br></pre></td></tr></table></figure>
<h4 id="合并某分支到当前分支"><a href="#合并某分支到当前分支" class="headerlink" title="合并某分支到当前分支"></a>合并某分支到当前分支</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git merge &lt;name&gt;</span><br></pre></td></tr></table></figure>
<h4 id="查看分支合并图"><a href="#查看分支合并图" class="headerlink" title="查看分支合并图"></a>查看分支合并图</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git log --graph</span><br></pre></td></tr></table></figure>


<h2 id="3-github使用"><a href="#3-github使用" class="headerlink" title="3.github使用"></a>3.github使用</h2><h4 id="生成本机ssh密钥"><a href="#生成本机ssh密钥" class="headerlink" title="生成本机ssh密钥"></a>生成本机ssh密钥</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;邮箱&quot;</span><br></pre></td></tr></table></figure>
<p>本机存放密钥位置（苹果）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;Users&#x2F;kevin&#x2F;.ssh&#x2F;id_rsa</span><br></pre></td></tr></table></figure>
<h4 id="克隆项目"><a href="#克隆项目" class="headerlink" title="克隆项目"></a>克隆项目</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone &lt;ssh url&gt;</span><br></pre></td></tr></table></figure>
<h4 id="上传分支"><a href="#上传分支" class="headerlink" title="上传分支"></a>上传分支</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git push origin &lt;branch name&gt;</span><br></pre></td></tr></table></figure>
<h4 id="本地分支跟踪远程分支"><a href="#本地分支跟踪远程分支" class="headerlink" title="本地分支跟踪远程分支"></a>本地分支跟踪远程分支</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git branch --set-upstream-to&#x3D;origin&#x2F;&lt;远程分支名&gt; &lt;本地分支名&gt;</span><br></pre></td></tr></table></figure>
<h4 id="从远端库更新内容到本地"><a href="#从远端库更新内容到本地" class="headerlink" title="从远端库更新内容到本地"></a>从远端库更新内容到本地</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git pull</span><br></pre></td></tr></table></figure>
<h2 id="4-代码提交到远程github，撤销"><a href="#4-代码提交到远程github，撤销" class="headerlink" title="4.代码提交到远程github，撤销"></a>4.代码提交到远程github，撤销</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 1.通过找到想要退回到的commit_id</span><br><span class="line">$ git log</span><br><span class="line"># 2.本地回到上一个commit_id</span><br><span class="line">$ git reset --hard &lt;commit_id&gt;</span><br><span class="line"># 3.推送到服务器，一定要加 --force 参数</span><br><span class="line">$ git push origin HEAD:master --force</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>git(二)：gitlab的使用</title>
    <url>/05-git/gitlab/</url>
    <content><![CDATA[<h2 id="1-gitlab注册"><a href="#1-gitlab注册" class="headerlink" title="1.gitlab注册"></a>1.gitlab注册</h2><p>注册网址:<a href="https://about.gitlab.com" target="_blank" rel="noopener">https://about.gitlab.com</a></p>
<p>在注册GitLab的时候总是报错,报错信息如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">There was an error with the reCAPTCHA. Please solve the reCAPTCHA again.</span><br></pre></td></tr></table></figure>

<p>错误原因：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">注册时有一个google的验证码需要输入,但是中国无法访问google,因此无法访问并输入该验证码导致。</span><br></pre></td></tr></table></figure>

<p>解决方案：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">使用GitHub账号注册，没有的话去注册个github账号</span><br></pre></td></tr></table></figure>

<h2 id="2-创建一个项目"><a href="#2-创建一个项目" class="headerlink" title="2.创建一个项目"></a>2.创建一个项目</h2><h4 id="2-1-创建Groups"><a href="#2-1-创建Groups" class="headerlink" title="2.1 创建Groups"></a>2.1 创建Groups</h4><p>Groups ———&gt; New Groups</p>
<p>填写分组名 ——&gt;选中private ——-&gt; create group</p>
<h4 id="2-2-创建Project"><a href="#2-2-创建Project" class="headerlink" title="2.2 创建Project"></a>2.2 创建Project</h4><p>Projects ——&gt; Your projects ——&gt; Create a project</p>
<p>填写项目信息 ——&gt; private ——&gt; 勾选readme一项 ——-&gt; Create project</p>
<h2 id="3-SSH-Keys配置"><a href="#3-SSH-Keys配置" class="headerlink" title="3.SSH Keys配置"></a>3.SSH Keys配置</h2><h4 id="3-1-首先要先用自己的电脑生成公钥私钥"><a href="#3-1-首先要先用自己的电脑生成公钥私钥" class="headerlink" title="3.1 首先要先用自己的电脑生成公钥私钥"></a>3.1 首先要先用自己的电脑生成公钥私钥</h4><p>终端输入：ssh-keygen -t rsa - C 自己的邮箱号,一直按enter即可</p>
<h4 id="3-2-把公钥私钥添加SSH-Keys"><a href="#3-2-把公钥私钥添加SSH-Keys" class="headerlink" title="3.2 把公钥私钥添加SSH Keys"></a>3.2 把公钥私钥添加SSH Keys</h4><p>打开Finder同时按command+shift+G 输入：~/.ssh 进入.ssh文件，打开复制id_rsa.pub到Profile Settings添加SSH Keys，然后添加</p>
<h2 id="4-首次拉取代码"><a href="#4-首次拉取代码" class="headerlink" title="4.首次拉取代码"></a>4.首次拉取代码</h2><p>由于我是github账号登录的，所以要先设置密码。</p>
<h4 id="4-1-git"><a href="#4-1-git" class="headerlink" title="4.1 git"></a>4.1 git</h4><p>项目内容获取主要使用git客户端工具来实现，项目开发人员首先要在本机安装git客户端软件，<a href="https://www.git-scm.com/" target="_blank" rel="noopener">下载地址</a></p>
<h4 id="4-2首次拉取代码"><a href="#4-2首次拉取代码" class="headerlink" title="4.2首次拉取代码"></a>4.2首次拉取代码</h4><p>此间会提示输入帐号密码，帐号是username不是name，按提示输入即可</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#注意地址是fork后的项目地址</span><br><span class="line">git clone https:&#x2F;&#x2F;gitlab.com&#x2F;llnpython&#x2F;gitlab_test.git</span><br></pre></td></tr></table></figure>

<h2 id="5-gitflow的使用"><a href="#5-gitflow的使用" class="headerlink" title="5.gitflow的使用"></a>5.gitflow的使用</h2><p>git flow是git的辅助工具，实质上是一些分支-合并的脚本集合，使用git flow可以更轻松的完成对各种特性分支的操作。</p>
<h4 id="5-1-分支说明"><a href="#5-1-分支说明" class="headerlink" title="5.1 分支说明"></a>5.1 分支说明</h4><ul>
<li>master分支：存储正式发布的产品，master分支上的产品要求随时处于可部署状态。master分支只能通过与其他分支合并来更新内容，禁止直接在master分支进行修改</li>
<li>develop分支：汇总开发者完成的工作成果，develop分支上的产品可以是缺失功能模块的半成品，但是已有的功能模块不能是半成品。develop分支只能通过与其他分支合并来更新内容，禁止直接在develop分支进行修改</li>
<li>feature分支：当要开发新功能或者试验新功能时，从develop分支创建一个新的feature分支，并在feature分支上进行开发。开发完成后，需要将该feature分支合并到develop分支，最后删除该feature分支</li>
<li>release分支：当develop分支上的项目准备发布时，从develop分支上创建一个新的release分支，新建的release分支只能进行质量测试、bug修复、文档生成等面向发布的任务，不能再添加功能。这一系列发布任务完成后，需要将release分支合并到master分支上，并根据版本号为master分支添加tag，然后将release分支创建以来的修改合并回develop分支，最后删除release分支</li>
<li>hotfix分支：当master分支中的产品出现需要立即修复的bug时，从master分支上创建一个新的hotfix分支，并在hotfix分支上进行bug修复。修复完成后，需要将hotfix分支合并到master分支和develop分支，并为master分支添加新的版本号tag，最后删除hotfix分支</li>
</ul>
<p>(gitflow后续更新)</p>
<h2 id="6-开发人员操作"><a href="#6-开发人员操作" class="headerlink" title="6.开发人员操作"></a>6.开发人员操作</h2><h4 id="6-1-fork项目"><a href="#6-1-fork项目" class="headerlink" title="6.1 fork项目"></a>6.1 fork项目</h4><p>项目成员首先利用浏览器进入gitlab的系统后，查看自己的group和project，并fork自己需要参与开发的project。</p>
<blockquote>
<p>注意：fork时，在project的detail界面中点击fork按钮即可</p>
</blockquote>
<p>fork时会提示选择<strong>Namespace</strong>，这个选择是用来决定这个工程所属的，可以选Users,或者选择Groups，这个会影响到后面工程的url，项目成员都统一选择users本人的命名空间就可以了。</p>
<h4 id="6-2-设置账户信息"><a href="#6-2-设置账户信息" class="headerlink" title="6.2 设置账户信息"></a>6.2 设置账户信息</h4><p>设置修改本地对应的gitlab用户和邮箱。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#修改用户名和邮箱的命令</span><br><span class="line">git config --global user.name &quot;llnpython&quot;</span><br><span class="line">git config --global user.email &quot;llnpython@gitlab.com&quot;</span><br><span class="line"></span><br><span class="line">#可以选择不设置全局的，而是临时的，但必须在一个 本地repository目录下：</span><br><span class="line">git config --local  user.name &quot;llnpython&quot;</span><br><span class="line">git config --local user.email &quot;llnpython@gitlab.com&quot;</span><br><span class="line"></span><br><span class="line">#查看用户名和邮箱</span><br><span class="line">git config user.name</span><br><span class="line">git config user.email</span><br></pre></td></tr></table></figure>
<h4 id="6-3正常代码更新提交"><a href="#6-3正常代码更新提交" class="headerlink" title="6.3正常代码更新提交"></a>6.3正常代码更新提交</h4><ol>
<li>commit</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git commit –am “#XYPJ-1111# message example”</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>Fetch同步主仓库与个人远程仓库</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## 建立本地仓库时，设置本地仓库的upstream为主仓库</span><br><span class="line">git remote add upstream https:&#x2F;&#x2F;gitlab.com&#x2F;llnpython&#x2F;gitlab_test.git</span><br><span class="line">## 查看remote信息</span><br><span class="line">git remote –v</span><br><span class="line">## 结果类似如下：</span><br><span class="line">origin	https:&#x2F;&#x2F;gitlab.com&#x2F;llnpython&#x2F;gitlab_test.git (fetch)</span><br><span class="line">origin	https:&#x2F;&#x2F;gitlab.com&#x2F;llnpython&#x2F;gitlab_test.git (push)</span><br><span class="line">upstream	https:&#x2F;&#x2F;gitlab.com&#x2F;llnpython&#x2F;gitlab_test.git (fetch)</span><br><span class="line">upstream	https:&#x2F;&#x2F;gitlab.com&#x2F;llnpython&#x2F;gitlab_test.git (push)</span><br><span class="line"> </span><br><span class="line">## 之后代码开发时的操作</span><br><span class="line">## fetch主仓库代码到本地（只是获取，还未合并）</span><br><span class="line">git fetch upstream</span><br><span class="line">##本地代码切换到master分支（如果已经在master分支就跳过这一步），然后合并主仓库的master分支到本地的master分支</span><br><span class="line">git checkout master</span><br><span class="line">git merge upstream&#x2F;master</span><br><span class="line">## 提到代码到个人远程仓库</span><br><span class="line">git push origin master</span><br><span class="line">## 注意：如果是bug修复，则以上fetch&#x2F;merge&#x2F;push都是hotfix分支</span><br></pre></td></tr></table></figure>

<ol start="3">
<li><p>Merge Request</p>
<p>登录GitLab，在个人项目主页中，发起Merge Request。如果发起MR时发现有报代码冲突，则可以自己关闭MR，按照上一步的操作解决冲突合并代码后，重新发起MR。</p>
</li>
</ol>
<h2 id="7-协作流程"><a href="#7-协作流程" class="headerlink" title="7.协作流程"></a>7.协作流程</h2><h4 id="7-1开发流程"><a href="#7-1开发流程" class="headerlink" title="7.1开发流程"></a>7.1开发流程</h4><ul>
<li><p>Master新建代码主仓库MAIN、添加项目成员。</p>
</li>
<li><p>Developer从主仓库fork一份到自己的个人远程仓库ORIGIN。</p>
</li>
<li><p>Developer从个人远程仓库clone代码到本地，建立本地仓库，同时将主仓库MAIN设置为本地仓库LOCAL的upstream</p>
</li>
<li><p>在本地仓库进行开发，需要提交代码时，按照如下步骤：</p>
<ul>
<li>Commit：提交代码到本地仓库</li>
<li>Fetch：获取主仓库的更新，同步到个人本地仓库</li>
<li>Merge：合并主仓库的代码和本地的开发代码。代码会自动合并，但如果有冲突，需手动合并代码解决冲突</li>
<li>Push：提交代码到个人远程仓库</li>
<li>Merge Request：在GitLab的个人主页，发起Merge Request请求将个人远程仓库代码合并到主仓库的对应分支</li>
</ul>
</li>
<li><p><em>Master</em>处理Merge Request请求，进行code review。如果一切正常，最终合并到主仓库，打Tag上线。如果有问题，则拒绝Merge Request，要求修改。</p>
</li>
</ul>
<h4 id="7-2-Bug修复流程"><a href="#7-2-Bug修复流程" class="headerlink" title="7.2 Bug修复流程"></a>7.2 Bug修复流程</h4><p>  假设是tag v1.0的代码上出现bug需要紧急修复，协作流程如下。</p>
<ul>
<li>Master合并主仓库的master分支的v0.1至hotfix分支。</li>
<li>Developer成员拉取主仓库的hotfix分支，按照代码开发的步骤4进行开发。修复完成后提交代码并发起merge request，请求合并个人远程仓库的hotfix分支至主仓库的hotfix分支</li>
<li>Master成员处理Merge Request请求，进行code review，最终合并hotfix分支至master分支</li>
</ul>
<h2 id="8-项目流程"><a href="#8-项目流程" class="headerlink" title="8.项目流程"></a>8.项目流程</h2><ol>
<li><p>项目组长建立仓库 git flow init</p>
</li>
<li><p>成员进行了clone git clone</p>
</li>
<li><p>项目组长分配里程碑与议题(任务)</p>
</li>
<li><p>项目成员根据自己被分配到的任务建立对应的分支git flow feature start xxx</p>
</li>
</ol>
<ul>
<li>先在项目中建立分支，再拉取开发</li>
<li>先在本地建立分支，再提交</li>
</ul>
<ol start="5">
<li>完成任务后提交pull request git push origin</li>
<li>Pull request删除分支，关闭对应的议题任务 git flow feature finish xxx</li>
</ol>
<h2 id="参考博客"><a href="#参考博客" class="headerlink" title="参考博客"></a>参考博客</h2><ul>
<li><p><a href="https://blog.csdn.net/ocean1010/article/details/103778497" target="_blank" rel="noopener">git github gitlab gitflow 区别</a></p>
</li>
<li><p><a href="https://www.jianshu.com/p/4b2d9d0f2713" target="_blank" rel="noopener">gitlab使用详解</a></p>
</li>
</ul>
]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
        <tag>gitlab</tag>
      </tags>
  </entry>
  <entry>
    <title>数据库：索引</title>
    <url>/02-%E6%95%B0%E6%8D%AE%E5%BA%93/mysql/%E6%95%B0%E6%8D%AE%E5%BA%93%EF%BC%9A%E7%B4%A2%E5%BC%95/</url>
    <content><![CDATA[<h2 id="索引的作用"><a href="#索引的作用" class="headerlink" title="索引的作用"></a>索引的作用</h2><ul>
<li>提高查询速度</li>
<li>可以加速表与表之间的连接</li>
</ul>
<h2 id="索引的分类"><a href="#索引的分类" class="headerlink" title="索引的分类"></a>索引的分类</h2><ul>
<li>常规索引</li>
<li>联合唯一索引</li>
<li>联表索引</li>
<li>主键索引</li>
</ul>
<h2 id="索引的优缺点"><a href="#索引的优缺点" class="headerlink" title="索引的优缺点"></a>索引的优缺点</h2><h2 id="优点："><a href="#优点：" class="headerlink" title="优点："></a>优点：</h2><p>缺点：</p>
<ul>
<li>创建和维护索引需要消耗时间，索引越多时间越长</li>
<li>索引占用物理空间，这样表数据和索引都占用空间</li>
<li>当表进行增删改的时候索引需要维护，这样就降低数据的维护速度</li>
</ul>
<h2 id="索引建立的原则"><a href="#索引建立的原则" class="headerlink" title="索引建立的原则"></a>索引建立的原则</h2><ul>
<li>在使用较多而且需要排序的字段上建立索引</li>
<li></li>
</ul>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>数据库</tag>
        <tag>索引</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo(三)：添加valine评论系统</title>
    <url>/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/hexo(%E4%B8%89)%EF%BC%9A%E6%B7%BB%E5%8A%A0valine%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<h2 id="Valine简介"><a href="#Valine简介" class="headerlink" title="Valine简介"></a>Valine简介</h2><p>Hexo的评论系统有很多，常见的有以下几个</p>
<ul>
<li>畅言</li>
<li>来必力(LiveRe)</li>
<li>Disqus</li>
<li>Hypercomments</li>
<li>valine</li>
</ul>
<h2 id="开启Valine"><a href="#开启Valine" class="headerlink" title="开启Valine"></a>开启Valine</h2><h4 id="注册Leancloud"><a href="#注册Leancloud" class="headerlink" title="注册Leancloud"></a>注册Leancloud</h4><p>我们的评论系统其实是放在Leancloud上的，因此首先需要去注册一个账号</p>
<p><a href="https://leancloud.cn/" target="_blank" rel="noopener">Leancloud官网，点我注册</a></p>
<p>注册完以后需要创建一个应用，名字可以随便起，然后 进入应用-&gt;设置-&gt;应用key,获取你的<strong>appid</strong>和<strong>appkey</strong></p>
<p>拿到你的appid和appkey之后，打开主题配置文件 搜索 valine，填入appid 和 appkey</p>
<p>我的配置：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># valine </span><br><span class="line">valine:</span><br><span class="line">    # 评论</span><br><span class="line">    enableComment: true </span><br><span class="line">    # 阅读量</span><br><span class="line">    enableCounter: true</span><br><span class="line">    # valine appID</span><br><span class="line">    appID: appID</span><br><span class="line">    # valine appKey</span><br><span class="line">    appKey: appKey</span><br><span class="line">    placeholder: 请输入评论</span><br><span class="line">    avatar: retro</span><br></pre></td></tr></table></figure>
<p>最后！记得在Leancloud -&gt; 设置 -&gt; 安全中心 -&gt; Web 安全域名 把你的域名加进去</p>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>个人博客</tag>
      </tags>
  </entry>
  <entry>
    <title>01-python/正则表达式/正则小工具</title>
    <url>/01-python/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/%E6%AD%A3%E5%88%99%E5%B0%8F%E5%B7%A5%E5%85%B7/</url>
    <content><![CDATA[<hr>
<p>title: 正则小工具<br>date: 2021-12-13 23:28:57<br>categories: </p>
<ul>
<li>python基础<br>tags: </li>
<li>python</li>
<li>正则表达式</li>
</ul>
<hr>
<p>1.匹配中文字符</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">extract_chinese</span><span class="params">(input: str)</span> -&gt; str:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        result = re.search(<span class="string">"[\u4e00-\u9fa5]+"</span>, input).group()</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line">    <span class="keyword">except</span> AttributeError <span class="keyword">as</span> e:</span><br><span class="line">        print(e)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">''</span></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>hexo(一)：搭建个人博客</title>
    <url>/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/hexo(%E4%B8%80)%EF%BC%9A%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<h2 id="搭建流程"><a href="#搭建流程" class="headerlink" title="搭建流程"></a>搭建流程</h2><ol>
<li>安装git</li>
<li>安装node.js</li>
<li>安装、配置和部署hexo</li>
</ol>
<h4 id="1-安装git"><a href="#1-安装git" class="headerlink" title="1.安装git"></a>1.安装git</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">brew install git</span><br></pre></td></tr></table></figure>
<h4 id="2-安装node-js"><a href="#2-安装node-js" class="headerlink" title="2.安装node.js"></a>2.安装node.js</h4><p>在<a href="https://nodejs.org/en/" target="_blank" rel="noopener">node.js官网</a>上下载node.js的安装包，然后按照套路安装就好。在安装node.js的同时，npm也安装了。</p>
<p><img src="https://upload-images.jianshu.io/upload_images/993583-7d252a14e90bbd2a.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/web" alt="image"></p>
<p>查询node和npm是否安装成功的命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure>
<p>如果出现版本号，则说明安装成功</p>
<h4 id="3-安装、配置和部署hexo"><a href="#3-安装、配置和部署hexo" class="headerlink" title="3.安装、配置和部署hexo"></a>3.安装、配置和部署hexo</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd 安装路径</span><br><span class="line">sudo npm install -g hexo</span><br></pre></td></tr></table></figure>
<ul>
<li>-g:全局安装</li>
</ul>
<p>安装完成后，创建文件夹，并初始化hexo</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mkdir blog</span><br><span class="line">cd blog</span><br><span class="line">hexo init</span><br></pre></td></tr></table></figure>
<p>初始化后，blog文件夹下就会出现如下的文件列表<br><img src="/Users/kevin/PycharmProjects/myblog/public/blog.png" alt="image"></p>
<p>在这里我们使用命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo server&#x2F;s</span><br></pre></td></tr></table></figure>
<p>执行完这个命令，就可以启动hexo博客了，按照输入命令后的结果提示，在网页中打开<a href="http://localhost:4000/，就可以看到如下界面：" target="_blank" rel="noopener">http://localhost:4000/，就可以看到如下界面：</a></p>
<p><img src="https://upload-images.jianshu.io/upload_images/993583-609efdd3449e53da.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/web" alt="image"></p>
<h4 id="4-配置和部署"><a href="#4-配置和部署" class="headerlink" title="4.配置和部署"></a>4.配置和部署</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &#x2F;Users&#x2F;kevin&#x2F;PycharmProjects&#x2F;myblog</span><br><span class="line">vi _config.yml</span><br></pre></td></tr></table></figure>
<p>1.配置基本信息</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Site</span><br><span class="line">title: lln</span><br><span class="line">subtitle: &#39;&#39;</span><br><span class="line">description: &#39;&#39;</span><br><span class="line">keywords:</span><br><span class="line">author: liulunan</span><br><span class="line">language: zh-Hans</span><br><span class="line">timezone: Asia&#x2F;Shanghai</span><br></pre></td></tr></table></figure>
<p>2.配置部署信息</p>
<p>首先大家需要登上<a href="https://github.com/" target="_blank" rel="noopener">github</a>，没有的注册一个再登录就可以，然后创建一个仓库(账号明/github.io)即可。</p>
<p>在给repository name命名时，一定要保证两个红色的框中的命名一致，命名的格式为xxxx.github.io，这个格式一定不能错，否则会关联不成功</p>
<p>复制好仓库地址以后，我们回到之前打开的_config.yml文件的最底部，使用vim命令进入编辑状态，把我们复制的仓库地址填写在repository属性后面，再退出保存_config.yml文件，那么关于配置和部署信息就此填完了。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">## Docs: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;deployment.html</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: https:&#x2F;&#x2F;github.com&#x2F;handsome-man&#x2F;handsome-man.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>
<p>3.部署</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo g&#x2F;generate</span><br><span class="line">hexo d&#x2F;deploy</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>个人博客</tag>
      </tags>
  </entry>
  <entry>
    <title>01-python/loads_dumps</title>
    <url>/01-python/loads_dumps/</url>
    <content><![CDATA[<hr>
<p>title: loads_dumps应用<br>date: 2020-06-06 16:16:57<br>categories: </p>
<ul>
<li>python基础<br>tags: </li>
<li>python</li>
<li>基础</li>
</ul>
<hr>
<ol>
<li>json.dumps()函数是将一个Python数据类型列表进行json格式的编码（可以这么理解，json.dumps()函数是将字典转化为字符串）</li>
<li>json.loads()函数是将json格式数据转换为字典（可以这么理解，json.loads()函数是将字符串转化为字典）</li>
<li>json.dump()和json.load()主要用来读写json文件函数</li>
</ol>
<h2 id="json-dumps"><a href="#json-dumps" class="headerlink" title="json.dumps()"></a>json.dumps()</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">json.dumps()函数的使用，将字典转化为字符串</span><br></pre></td></tr></table></figure>
<p>测试</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import json</span><br><span class="line"></span><br><span class="line">dict &#x3D; &#123;&#39;name&#39;: &#39;kevin&#39;, &#39;age&#39;: 18&#125;</span><br><span class="line">json_dict &#x3D; json.dumps(dict)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(&quot;json_dict的类型：&quot;+str(type(dict)))</span><br><span class="line">print(&quot;通过json.dumps()函数处理：&quot;)</span><br><span class="line">print(&quot;json_dict的类型：&quot;+str(type(json_dict)))</span><br></pre></td></tr></table></figure>
<p>结果</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">json_dict的类型：&lt;class &#39;dict&#39;&gt;</span><br><span class="line">通过json.dumps()函数处理：</span><br><span class="line">json_dict的类型：&lt;class &#39;str&#39;&gt;</span><br></pre></td></tr></table></figure>
<h2 id="json-loads"><a href="#json-loads" class="headerlink" title="json.loads()"></a>json.loads()</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">json.loads函数的使用，将字符串转化为字典</span><br></pre></td></tr></table></figure>
<p>测试</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import json</span><br><span class="line"></span><br><span class="line">json_dict &#x3D; &#39;&#123;&quot;age&quot;: &quot;12&quot;&#125;&#39;</span><br><span class="line">dict &#x3D; json.loads(json_dict)</span><br><span class="line">print(&quot;json_info的类型：&quot;+str(type(json_dict)))</span><br><span class="line">print(&quot;通过json.dumps()函数处理：&quot;)</span><br><span class="line">print(&quot;dict的类型：&quot;+str(type(dict)))</span><br></pre></td></tr></table></figure>
<p>结果</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">json_dict的类型：&lt;class &#39;str&#39;&gt;</span><br><span class="line">通过json.dumps()函数处理：</span><br><span class="line">dict的类型：&lt;class &#39;dict&#39;&gt;</span><br></pre></td></tr></table></figure>
<h2 id="json-dump"><a href="#json-dump" class="headerlink" title="json.dump()"></a>json.dump()</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">json.dump()函数的使用，将json信息写进文件</span><br></pre></td></tr></table></figure>
<p>测试</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">json_info &#x3D; &quot;&#123;&#39;age&#39;: &#39;12&#39;&#125;&quot;</span><br><span class="line">file &#x3D; open(&#39;1.json&#39;,&#39;w&#39;,encoding&#x3D;&#39;utf-8&#39;)</span><br><span class="line">json.dump(json_info,file)</span><br></pre></td></tr></table></figure>
<p>运行截图（1.json文件）：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;&#123;&#39;age&#39;: &#39;12&#39;&#125;&quot;</span><br></pre></td></tr></table></figure>
<h2 id="json-load"><a href="#json-load" class="headerlink" title="json.load()"></a>json.load()</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">json.load()函数的使用，将读取json信息</span><br></pre></td></tr></table></figure>
<p>测试</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">file &#x3D; open(&#39;1.json&#39;,&#39;r&#39;,encoding&#x3D;&#39;utf-8&#39;)</span><br><span class="line">info &#x3D; json.load(file)</span><br><span class="line">print(info)</span><br></pre></td></tr></table></figure>
<p>结果</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&#39;age&#39;: &#39;12&#39;&#125;</span><br></pre></td></tr></table></figure>


]]></content>
  </entry>
</search>
